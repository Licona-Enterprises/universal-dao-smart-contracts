{
	"id": "92e1f0ce1c38cd771a88b74832478cc2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BridgeVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n// sepolia 0xb17B0E79d5f795a7c53bE86F4c4840cEbEf7BD11 \r\ncontract BridgeVault is Initializable, PausableUpgradeable, OwnableUpgradeable, UUPSUpgradeable {\r\n    mapping(address => mapping(address => uint256)) private balances;\r\n\r\n    event TokensDeposited(address indexed token, address indexed depositor, uint256 amount);\r\n    event TokensWithdrawn(address indexed token, address indexed recipient, uint256 amount);\r\n\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    // constructor() {\r\n    //     _disableInitializers();\r\n    // }\r\n\r\n    function initialize() initializer public {\r\n        __Pausable_init();\r\n        __Ownable_init(msg.sender);\r\n        __UUPSUpgradeable_init();\r\n    }\r\n\r\n    function deposit(address token, uint256 amount) external {\r\n        require(IERC20(token).balanceOf(msg.sender) >= amount, \"Insufficient balance\");\r\n        \r\n        // TODO approve this contract to spend, then transfer from \r\n        // IERC20(token).transferFrom(msg.sender, address(this), amount);\r\n\r\n        balances[msg.sender][token] += amount;\r\n        emit TokensDeposited(token, msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(address token, uint256 amount) external {\r\n        require(IERC20(token).balanceOf(address(this)) >= amount, \"Insufficient balance\");\r\n        require(balances[msg.sender][token] >= amount, \"Insufficient balance\");\r\n        \r\n        IERC20(token).transfer(msg.sender, amount);\r\n        balances[msg.sender][token] -= amount;\r\n\r\n        emit TokensWithdrawn(token, msg.sender, amount);\r\n    }\r\n\r\n    function balanceOf(address token, address account) external view returns (uint256) {\r\n        return balances[account][token];\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation)\r\n        internal\r\n        onlyOwner\r\n        override\r\n    {}\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122036681606bc071e84e7317556d6b9a24f7dd349c44076369a65321c462343f91e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036681606bc071e84e7317556d6b9a24f7dd349c44076369a65321c462343f91e64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH9 0x1606BC071E84E73175 JUMP 0xD6 0xB9 LOG2 0x4F PUSH30 0xD349C44076369A65321C462343F91E64736F6C6343000818003300000000 ",
							"sourceMap": "449:6273:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036681606bc071e84e7317556d6b9a24f7dd349c44076369a65321c462343f91e64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH9 0x1606BC071E84E73175 JUMP 0xD6 0xB9 LOG2 0x4F PUSH30 0xD349C44076369A65321C462343F91E64736F6C6343000818003300000000 ",
							"sourceMap": "449:6273:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122036681606bc071e84e7317556d6b9a24f7dd349c44076369a65321c462343f91e64736f6c63430008180033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/BridgeVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/BridgeVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP2 MOD PUSH24 0x3EEEC084ADE89857853ADF18EABEA7AC19B669DD0F333182 0xB9 DUP5 0xC3 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP2 MOD PUSH24 0x3EEEC084ADE89857853ADF18EABEA7AC19B669DD0F333182 0xB9 DUP5 0xC3 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/BridgeVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BridgeVault.sol": {
				"BridgeVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"initialize()": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BridgeVault.sol\":487:2380  contract BridgeVault is Initializable, PausableUpgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/BridgeVault.sol\":487:2380  contract BridgeVault is Initializable, PausableUpgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/BridgeVault.sol\":487:2380  contract BridgeVault is Initializable, PausableUpgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8129fc1c\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf7888aec\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x8129fc1c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_15:\n      dup1\n      0x3f4ba83a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BridgeVault.sol\":2188:2253  function unpause() public onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/BridgeVault.sol\":1136:1552  function deposit(address token, uint256 amount) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/BridgeVault.sol\":979:1128  function initialize() initializer public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/BridgeVault.sol\":2119:2180  function pause() public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/BridgeVault.sol\":1560:1970  function withdraw(address token, uint256 amount) external {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/BridgeVault.sol\":1978:2111  function balanceOf(address token, address account) external view returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BridgeVault.sol\":2188:2253  function unpause() public onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"contracts/BridgeVault.sol\":2235:2245  _unpause() */\n      tag_78\n        /* \"contracts/BridgeVault.sol\":2235:2243  _unpause */\n      tag_79\n        /* \"contracts/BridgeVault.sol\":2235:2245  _unpause() */\n      jump\t// in\n    tag_78:\n        /* \"contracts/BridgeVault.sol\":2188:2253  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BridgeVault.sol\":1136:1552  function deposit(address token, uint256 amount) external {... */\n    tag_24:\n        /* \"contracts/BridgeVault.sol\":1251:1257  amount */\n      dup1\n        /* \"contracts/BridgeVault.sol\":1219:1224  token */\n      dup3\n        /* \"contracts/BridgeVault.sol\":1212:1235  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BridgeVault.sol\":1236:1246  msg.sender */\n      caller\n        /* \"contracts/BridgeVault.sol\":1212:1247  IERC20(token).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_81:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"contracts/BridgeVault.sol\":1212:1257  IERC20(token).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/BridgeVault.sol\":1204:1282  require(IERC20(token).balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"contracts/BridgeVault.sol\":1480:1486  amount */\n      dup1\n        /* \"contracts/BridgeVault.sol\":1449:1457  balances */\n      0x00\n        /* \"contracts/BridgeVault.sol\":1449:1469  balances[msg.sender] */\n      dup1\n        /* \"contracts/BridgeVault.sol\":1458:1468  msg.sender */\n      caller\n        /* \"contracts/BridgeVault.sol\":1449:1469  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BridgeVault.sol\":1449:1476  balances[msg.sender][token] */\n      0x00\n        /* \"contracts/BridgeVault.sol\":1470:1475  token */\n      dup5\n        /* \"contracts/BridgeVault.sol\":1449:1476  balances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BridgeVault.sol\":1449:1486  balances[msg.sender][token] += amount */\n      dup3\n      dup3\n      sload\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BridgeVault.sol\":1525:1535  msg.sender */\n      caller\n        /* \"contracts/BridgeVault.sol\":1502:1544  TokensDeposited(token, msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BridgeVault.sol\":1518:1523  token */\n      dup3\n        /* \"contracts/BridgeVault.sol\":1502:1544  TokensDeposited(token, msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517\n        /* \"contracts/BridgeVault.sol\":1537:1543  amount */\n      dup4\n        /* \"contracts/BridgeVault.sol\":1502:1544  TokensDeposited(token, msg.sender, amount) */\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BridgeVault.sol\":1136:1552  function deposit(address token, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_28:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_99\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3800:3832  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3793:3832  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2739:2743  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2755:2780  PausableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2804  _getPausableStorage() */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2802  _getPausableStorage */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2804  _getPausableStorage() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2755:2804  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2822  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2814:2830  return $._paused */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BridgeVault.sol\":979:1128  function initialize() initializer public {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_113\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_115\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_117\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_119:\n        /* \"contracts/BridgeVault.sol\":1031:1048  __Pausable_init() */\n      tag_121\n        /* \"contracts/BridgeVault.sol\":1031:1046  __Pausable_init */\n      tag_122\n        /* \"contracts/BridgeVault.sol\":1031:1048  __Pausable_init() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/BridgeVault.sol\":1059:1085  __Ownable_init(msg.sender) */\n      tag_123\n        /* \"contracts/BridgeVault.sol\":1074:1084  msg.sender */\n      caller\n        /* \"contracts/BridgeVault.sol\":1059:1073  __Ownable_init */\n      tag_124\n        /* \"contracts/BridgeVault.sol\":1059:1085  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/BridgeVault.sol\":1096:1120  __UUPSUpgradeable_init() */\n      tag_125\n        /* \"contracts/BridgeVault.sol\":1096:1118  __UUPSUpgradeable_init */\n      tag_126\n        /* \"contracts/BridgeVault.sol\":1096:1120  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BridgeVault.sol\":979:1128  function initialize() initializer public {... */\n      jump\t// out\n        /* \"contracts/BridgeVault.sol\":2119:2180  function pause() public onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/BridgeVault.sol\":2164:2172  _pause() */\n      tag_133\n        /* \"contracts/BridgeVault.sol\":2164:2170  _pause */\n      tag_134\n        /* \"contracts/BridgeVault.sol\":2164:2172  _pause() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/BridgeVault.sol\":2119:2180  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_55:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BridgeVault.sol\":1560:1970  function withdraw(address token, uint256 amount) external {... */\n    tag_66:\n        /* \"contracts/BridgeVault.sol\":1679:1685  amount */\n      dup1\n        /* \"contracts/BridgeVault.sol\":1644:1649  token */\n      dup3\n        /* \"contracts/BridgeVault.sol\":1637:1660  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BridgeVault.sol\":1669:1673  this */\n      address\n        /* \"contracts/BridgeVault.sol\":1637:1675  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_148:\n        /* \"contracts/BridgeVault.sol\":1637:1685  IERC20(token).balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/BridgeVault.sol\":1629:1710  require(IERC20(token).balanceOf(address(this)) >= amount, \"Insufficient balance\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_88\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/BridgeVault.sol\":1760:1766  amount */\n      dup1\n        /* \"contracts/BridgeVault.sol\":1729:1737  balances */\n      0x00\n        /* \"contracts/BridgeVault.sol\":1729:1749  balances[msg.sender] */\n      dup1\n        /* \"contracts/BridgeVault.sol\":1738:1748  msg.sender */\n      caller\n        /* \"contracts/BridgeVault.sol\":1729:1749  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BridgeVault.sol\":1729:1756  balances[msg.sender][token] */\n      0x00\n        /* \"contracts/BridgeVault.sol\":1750:1755  token */\n      dup5\n        /* \"contracts/BridgeVault.sol\":1729:1756  balances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BridgeVault.sol\":1729:1766  balances[msg.sender][token] >= amount */\n      lt\n      iszero\n        /* \"contracts/BridgeVault.sol\":1721:1791  require(balances[msg.sender][token] >= amount, \"Insufficient balance\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_88\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/BridgeVault.sol\":1819:1824  token */\n      dup2\n        /* \"contracts/BridgeVault.sol\":1812:1834  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BridgeVault.sol\":1835:1845  msg.sender */\n      caller\n        /* \"contracts/BridgeVault.sol\":1847:1853  amount */\n      dup4\n        /* \"contracts/BridgeVault.sol\":1812:1854  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      pop\n        /* \"contracts/BridgeVault.sol\":1896:1902  amount */\n      dup1\n        /* \"contracts/BridgeVault.sol\":1865:1873  balances */\n      0x00\n        /* \"contracts/BridgeVault.sol\":1865:1885  balances[msg.sender] */\n      dup1\n        /* \"contracts/BridgeVault.sol\":1874:1884  msg.sender */\n      caller\n        /* \"contracts/BridgeVault.sol\":1865:1885  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BridgeVault.sol\":1865:1892  balances[msg.sender][token] */\n      0x00\n        /* \"contracts/BridgeVault.sol\":1886:1891  token */\n      dup5\n        /* \"contracts/BridgeVault.sol\":1865:1892  balances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BridgeVault.sol\":1865:1902  balances[msg.sender][token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BridgeVault.sol\":1943:1953  msg.sender */\n      caller\n        /* \"contracts/BridgeVault.sol\":1920:1962  TokensWithdrawn(token, msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BridgeVault.sol\":1936:1941  token */\n      dup3\n        /* \"contracts/BridgeVault.sol\":1920:1962  TokensWithdrawn(token, msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a4\n        /* \"contracts/BridgeVault.sol\":1955:1961  amount */\n      dup4\n        /* \"contracts/BridgeVault.sol\":1920:1962  TokensWithdrawn(token, msg.sender, amount) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BridgeVault.sol\":1560:1970  function withdraw(address token, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BridgeVault.sol\":1978:2111  function balanceOf(address token, address account) external view returns (uint256) {... */\n    tag_71:\n        /* \"contracts/BridgeVault.sol\":2052:2059  uint256 */\n      0x00\n        /* \"contracts/BridgeVault.sol\":2079:2087  balances */\n      dup1\n        /* \"contracts/BridgeVault.sol\":2079:2096  balances[account] */\n      0x00\n        /* \"contracts/BridgeVault.sol\":2088:2095  account */\n      dup4\n        /* \"contracts/BridgeVault.sol\":2079:2096  balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BridgeVault.sol\":2079:2103  balances[account][token] */\n      0x00\n        /* \"contracts/BridgeVault.sol\":2097:2102  token */\n      dup5\n        /* \"contracts/BridgeVault.sol\":2079:2103  balances[account][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BridgeVault.sol\":2072:2103  return balances[account][token] */\n      swap1\n      pop\n        /* \"contracts/BridgeVault.sol\":1978:2111  function balanceOf(address token, address account) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_50\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3732:3757  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3781  _getPausableStorage() */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3779  _getPausableStorage */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3781  _getPausableStorage() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3732:3781  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3803:3808  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3792  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3800  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3842  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3722:3852  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_178\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4779  ERC1967Utils.getImplementation */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/BridgeVault.sol\":2261:2377  function _authorizeUpgrade(address newImplementation)... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/BridgeVault.sol\":2261:2377  function _authorizeUpgrade(address newImplementation)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_186\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      0x01\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6555:6572  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6253:6285  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6249  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6341:6345  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1147:1309  function _getPausableStorage() private pure returns (PausableStorage storage $) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1200:1225  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1270:1293  PausableStorageLocation */\n      0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1260:1293  $.slot := PausableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1147:1309  function _getPausableStorage() private pure returns (PausableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3425:3450  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3474  _getPausableStorage() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3472  _getPausableStorage */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3474  _getPausableStorage() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3425:3474  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3485  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3493  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3532  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3415:3542  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3176  paused() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3174  paused */\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3176  paused() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2009:2016  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_232\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2062:2081  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2061  StorageSlot.getAddressSlot */\n      tag_233\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2028:2088  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_235\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_236\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2931:2948  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2978:2979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2968  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_238\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_239\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_238:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      jump(tag_240)\n    tag_237:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_241\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_242\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2012:2037  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2061  _getPausableStorage() */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2059  _getPausableStorage */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2061  _getPausableStorage() */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2012:2061  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2083:2088  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2072  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2080  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2002:2095  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2978  paused() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2976  paused */\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2978  paused() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2349:2366  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2443:2460  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_264\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2414:2433  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2413  StorageSlot.getAddressSlot */\n      tag_233\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2440  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_266\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_270\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_269)\n    tag_270:\n      0x60\n      swap2\n      pop\n    tag_269:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_272\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_279\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_280\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_281)\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_282\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_277)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_277:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_288:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_289:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_290:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_291:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_292:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_340\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_291\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_293:\n        /* \"#utility.yul\":641:665   */\n      tag_342\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_292\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_343:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_294:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_345\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_293\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_295:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_296:\n        /* \"#utility.yul\":997:1021   */\n      tag_348\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_295\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_349:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_297:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_351\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_296\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_23:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_354\n      tag_289\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1290:1409   */\n    tag_353:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_355\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_294\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_356\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_297\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1794   */\n    tag_298:\n        /* \"#utility.yul\":1786:1787   */\n      0x00\n        /* \"#utility.yul\":1783:1784   */\n      dup1\n        /* \"#utility.yul\":1776:1788   */\n      revert\n        /* \"#utility.yul\":1800:1917   */\n    tag_299:\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1906:1907   */\n      dup1\n        /* \"#utility.yul\":1899:1911   */\n      revert\n        /* \"#utility.yul\":1923:2025   */\n    tag_300:\n        /* \"#utility.yul\":1964:1970   */\n      0x00\n        /* \"#utility.yul\":2015:2017   */\n      0x1f\n        /* \"#utility.yul\":2011:2018   */\n      not\n        /* \"#utility.yul\":2006:2008   */\n      0x1f\n        /* \"#utility.yul\":1999:2004   */\n      dup4\n        /* \"#utility.yul\":1995:2009   */\n      add\n        /* \"#utility.yul\":1991:2019   */\n      and\n        /* \"#utility.yul\":1981:2019   */\n      swap1\n      pop\n        /* \"#utility.yul\":1923:2025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2031:2211   */\n    tag_301:\n        /* \"#utility.yul\":2079:2156   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2076:2077   */\n      0x00\n        /* \"#utility.yul\":2069:2157   */\n      mstore\n        /* \"#utility.yul\":2176:2180   */\n      0x41\n        /* \"#utility.yul\":2173:2174   */\n      0x04\n        /* \"#utility.yul\":2166:2181   */\n      mstore\n        /* \"#utility.yul\":2200:2204   */\n      0x24\n        /* \"#utility.yul\":2197:2198   */\n      0x00\n        /* \"#utility.yul\":2190:2205   */\n      revert\n        /* \"#utility.yul\":2217:2498   */\n    tag_302:\n        /* \"#utility.yul\":2300:2327   */\n      tag_362\n        /* \"#utility.yul\":2322:2326   */\n      dup3\n        /* \"#utility.yul\":2300:2327   */\n      tag_300\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2292:2298   */\n      dup2\n        /* \"#utility.yul\":2288:2328   */\n      add\n        /* \"#utility.yul\":2430:2436   */\n      dup2\n        /* \"#utility.yul\":2418:2428   */\n      dup2\n        /* \"#utility.yul\":2415:2437   */\n      lt\n        /* \"#utility.yul\":2394:2412   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2382:2392   */\n      dup3\n        /* \"#utility.yul\":2379:2413   */\n      gt\n        /* \"#utility.yul\":2376:2438   */\n      or\n        /* \"#utility.yul\":2373:2461   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":2441:2459   */\n      tag_364\n      tag_301\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2373:2461   */\n    tag_363:\n        /* \"#utility.yul\":2481:2491   */\n      dup1\n        /* \"#utility.yul\":2477:2479   */\n      0x40\n        /* \"#utility.yul\":2470:2492   */\n      mstore\n        /* \"#utility.yul\":2260:2498   */\n      pop\n        /* \"#utility.yul\":2217:2498   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2504:2633   */\n    tag_303:\n        /* \"#utility.yul\":2538:2544   */\n      0x00\n        /* \"#utility.yul\":2565:2585   */\n      tag_366\n      tag_288\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2555:2585   */\n      swap1\n      pop\n        /* \"#utility.yul\":2594:2627   */\n      tag_367\n        /* \"#utility.yul\":2622:2626   */\n      dup3\n        /* \"#utility.yul\":2614:2620   */\n      dup3\n        /* \"#utility.yul\":2594:2627   */\n      tag_302\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2504:2633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2946   */\n    tag_304:\n        /* \"#utility.yul\":2700:2704   */\n      0x00\n        /* \"#utility.yul\":2790:2808   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2782:2788   */\n      dup3\n        /* \"#utility.yul\":2779:2809   */\n      gt\n        /* \"#utility.yul\":2776:2832   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":2812:2830   */\n      tag_370\n      tag_301\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2776:2832   */\n    tag_369:\n        /* \"#utility.yul\":2850:2879   */\n      tag_371\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2850:2879   */\n      tag_300\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2842:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2934:2938   */\n      0x20\n        /* \"#utility.yul\":2928:2932   */\n      dup2\n        /* \"#utility.yul\":2924:2939   */\n      add\n        /* \"#utility.yul\":2916:2939   */\n      swap1\n      pop\n        /* \"#utility.yul\":2639:2946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2952:3098   */\n    tag_305:\n        /* \"#utility.yul\":3049:3055   */\n      dup3\n        /* \"#utility.yul\":3044:3047   */\n      dup2\n        /* \"#utility.yul\":3039:3042   */\n      dup4\n        /* \"#utility.yul\":3026:3056   */\n      calldatacopy\n        /* \"#utility.yul\":3090:3091   */\n      0x00\n        /* \"#utility.yul\":3081:3087   */\n      dup4\n        /* \"#utility.yul\":3076:3079   */\n      dup4\n        /* \"#utility.yul\":3072:3088   */\n      add\n        /* \"#utility.yul\":3065:3092   */\n      mstore\n        /* \"#utility.yul\":2952:3098   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3104:3527   */\n    tag_306:\n        /* \"#utility.yul\":3181:3186   */\n      0x00\n        /* \"#utility.yul\":3206:3271   */\n      tag_374\n        /* \"#utility.yul\":3222:3270   */\n      tag_375\n        /* \"#utility.yul\":3263:3269   */\n      dup5\n        /* \"#utility.yul\":3222:3270   */\n      tag_304\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3206:3271   */\n      tag_303\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3197:3271   */\n      swap1\n      pop\n        /* \"#utility.yul\":3294:3300   */\n      dup3\n        /* \"#utility.yul\":3287:3292   */\n      dup2\n        /* \"#utility.yul\":3280:3301   */\n      mstore\n        /* \"#utility.yul\":3332:3336   */\n      0x20\n        /* \"#utility.yul\":3325:3330   */\n      dup2\n        /* \"#utility.yul\":3321:3337   */\n      add\n        /* \"#utility.yul\":3370:3373   */\n      dup5\n        /* \"#utility.yul\":3361:3367   */\n      dup5\n        /* \"#utility.yul\":3356:3359   */\n      dup5\n        /* \"#utility.yul\":3352:3368   */\n      add\n        /* \"#utility.yul\":3349:3374   */\n      gt\n        /* \"#utility.yul\":3346:3458   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":3377:3456   */\n      tag_377\n      tag_299\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3346:3458   */\n    tag_376:\n        /* \"#utility.yul\":3467:3521   */\n      tag_378\n        /* \"#utility.yul\":3514:3520   */\n      dup5\n        /* \"#utility.yul\":3509:3512   */\n      dup3\n        /* \"#utility.yul\":3504:3507   */\n      dup6\n        /* \"#utility.yul\":3467:3521   */\n      tag_305\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3187:3527   */\n      pop\n        /* \"#utility.yul\":3104:3527   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3546:3884   */\n    tag_307:\n        /* \"#utility.yul\":3601:3606   */\n      0x00\n        /* \"#utility.yul\":3650:3653   */\n      dup3\n        /* \"#utility.yul\":3643:3647   */\n      0x1f\n        /* \"#utility.yul\":3635:3641   */\n      dup4\n        /* \"#utility.yul\":3631:3648   */\n      add\n        /* \"#utility.yul\":3627:3654   */\n      slt\n        /* \"#utility.yul\":3617:3739   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3658:3737   */\n      tag_381\n      tag_298\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3617:3739   */\n    tag_380:\n        /* \"#utility.yul\":3775:3781   */\n      dup2\n        /* \"#utility.yul\":3762:3782   */\n      calldataload\n        /* \"#utility.yul\":3800:3878   */\n      tag_382\n        /* \"#utility.yul\":3874:3877   */\n      dup5\n        /* \"#utility.yul\":3866:3872   */\n      dup3\n        /* \"#utility.yul\":3859:3863   */\n      0x20\n        /* \"#utility.yul\":3851:3857   */\n      dup7\n        /* \"#utility.yul\":3847:3864   */\n      add\n        /* \"#utility.yul\":3800:3878   */\n      tag_306\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3791:3878   */\n      swap2\n      pop\n        /* \"#utility.yul\":3607:3884   */\n      pop\n        /* \"#utility.yul\":3546:3884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3890:4542   */\n    tag_27:\n        /* \"#utility.yul\":3967:3973   */\n      0x00\n        /* \"#utility.yul\":3975:3981   */\n      dup1\n        /* \"#utility.yul\":4024:4026   */\n      0x40\n        /* \"#utility.yul\":4012:4021   */\n      dup4\n        /* \"#utility.yul\":4003:4010   */\n      dup6\n        /* \"#utility.yul\":3999:4022   */\n      sub\n        /* \"#utility.yul\":3995:4027   */\n      slt\n        /* \"#utility.yul\":3992:4111   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":4030:4109   */\n      tag_385\n      tag_289\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3992:4111   */\n    tag_384:\n        /* \"#utility.yul\":4150:4151   */\n      0x00\n        /* \"#utility.yul\":4175:4228   */\n      tag_386\n        /* \"#utility.yul\":4220:4227   */\n      dup6\n        /* \"#utility.yul\":4211:4217   */\n      dup3\n        /* \"#utility.yul\":4200:4209   */\n      dup7\n        /* \"#utility.yul\":4196:4218   */\n      add\n        /* \"#utility.yul\":4175:4228   */\n      tag_294\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4165:4228   */\n      swap3\n      pop\n        /* \"#utility.yul\":4121:4238   */\n      pop\n        /* \"#utility.yul\":4305:4307   */\n      0x20\n        /* \"#utility.yul\":4294:4303   */\n      dup4\n        /* \"#utility.yul\":4290:4308   */\n      add\n        /* \"#utility.yul\":4277:4309   */\n      calldataload\n        /* \"#utility.yul\":4336:4354   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4328:4334   */\n      dup2\n        /* \"#utility.yul\":4325:4355   */\n      gt\n        /* \"#utility.yul\":4322:4439   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":4358:4437   */\n      tag_388\n      tag_290\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4322:4439   */\n    tag_387:\n        /* \"#utility.yul\":4463:4525   */\n      tag_389\n        /* \"#utility.yul\":4517:4524   */\n      dup6\n        /* \"#utility.yul\":4508:4514   */\n      dup3\n        /* \"#utility.yul\":4497:4506   */\n      dup7\n        /* \"#utility.yul\":4493:4515   */\n      add\n        /* \"#utility.yul\":4463:4525   */\n      tag_307\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4453:4525   */\n      swap2\n      pop\n        /* \"#utility.yul\":4248:4535   */\n      pop\n        /* \"#utility.yul\":3890:4542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4548:4625   */\n    tag_308:\n        /* \"#utility.yul\":4585:4592   */\n      0x00\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4603:4619   */\n      swap1\n      pop\n        /* \"#utility.yul\":4548:4625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4631:4749   */\n    tag_309:\n        /* \"#utility.yul\":4718:4742   */\n      tag_392\n        /* \"#utility.yul\":4736:4741   */\n      dup2\n        /* \"#utility.yul\":4718:4742   */\n      tag_308\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4713:4716   */\n      dup3\n        /* \"#utility.yul\":4706:4743   */\n      mstore\n        /* \"#utility.yul\":4631:4749   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4755:4977   */\n    tag_33:\n        /* \"#utility.yul\":4848:4852   */\n      0x00\n        /* \"#utility.yul\":4886:4888   */\n      0x20\n        /* \"#utility.yul\":4875:4884   */\n      dup3\n        /* \"#utility.yul\":4871:4889   */\n      add\n        /* \"#utility.yul\":4863:4889   */\n      swap1\n      pop\n        /* \"#utility.yul\":4899:4970   */\n      tag_394\n        /* \"#utility.yul\":4967:4968   */\n      0x00\n        /* \"#utility.yul\":4956:4965   */\n      dup4\n        /* \"#utility.yul\":4952:4969   */\n      add\n        /* \"#utility.yul\":4943:4949   */\n      dup5\n        /* \"#utility.yul\":4899:4970   */\n      tag_309\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4755:4977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4983:5073   */\n    tag_310:\n        /* \"#utility.yul\":5017:5024   */\n      0x00\n        /* \"#utility.yul\":5060:5065   */\n      dup2\n        /* \"#utility.yul\":5053:5066   */\n      iszero\n        /* \"#utility.yul\":5046:5067   */\n      iszero\n        /* \"#utility.yul\":5035:5067   */\n      swap1\n      pop\n        /* \"#utility.yul\":4983:5073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5079:5188   */\n    tag_311:\n        /* \"#utility.yul\":5160:5181   */\n      tag_397\n        /* \"#utility.yul\":5175:5180   */\n      dup2\n        /* \"#utility.yul\":5160:5181   */\n      tag_310\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5155:5158   */\n      dup3\n        /* \"#utility.yul\":5148:5182   */\n      mstore\n        /* \"#utility.yul\":5079:5188   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5404   */\n    tag_38:\n        /* \"#utility.yul\":5281:5285   */\n      0x00\n        /* \"#utility.yul\":5319:5321   */\n      0x20\n        /* \"#utility.yul\":5308:5317   */\n      dup3\n        /* \"#utility.yul\":5304:5322   */\n      add\n        /* \"#utility.yul\":5296:5322   */\n      swap1\n      pop\n        /* \"#utility.yul\":5332:5397   */\n      tag_399\n        /* \"#utility.yul\":5394:5395   */\n      0x00\n        /* \"#utility.yul\":5383:5392   */\n      dup4\n        /* \"#utility.yul\":5379:5396   */\n      add\n        /* \"#utility.yul\":5370:5376   */\n      dup5\n        /* \"#utility.yul\":5332:5397   */\n      tag_311\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5194:5404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5410:5528   */\n    tag_312:\n        /* \"#utility.yul\":5497:5521   */\n      tag_401\n        /* \"#utility.yul\":5515:5520   */\n      dup2\n        /* \"#utility.yul\":5497:5521   */\n      tag_292\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5492:5495   */\n      dup3\n        /* \"#utility.yul\":5485:5522   */\n      mstore\n        /* \"#utility.yul\":5410:5528   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5756   */\n    tag_52:\n        /* \"#utility.yul\":5627:5631   */\n      0x00\n        /* \"#utility.yul\":5665:5667   */\n      0x20\n        /* \"#utility.yul\":5654:5663   */\n      dup3\n        /* \"#utility.yul\":5650:5668   */\n      add\n        /* \"#utility.yul\":5642:5668   */\n      swap1\n      pop\n        /* \"#utility.yul\":5678:5749   */\n      tag_403\n        /* \"#utility.yul\":5746:5747   */\n      0x00\n        /* \"#utility.yul\":5735:5744   */\n      dup4\n        /* \"#utility.yul\":5731:5748   */\n      add\n        /* \"#utility.yul\":5722:5728   */\n      dup5\n        /* \"#utility.yul\":5678:5749   */\n      tag_312\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5534:5756   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5762:5861   */\n    tag_313:\n        /* \"#utility.yul\":5814:5820   */\n      0x00\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5842:5854   */\n      mload\n        /* \"#utility.yul\":5832:5854   */\n      swap1\n      pop\n        /* \"#utility.yul\":5762:5861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6036   */\n    tag_314:\n        /* \"#utility.yul\":5951:5962   */\n      0x00\n        /* \"#utility.yul\":5985:5991   */\n      dup3\n        /* \"#utility.yul\":5980:5983   */\n      dup3\n        /* \"#utility.yul\":5973:5992   */\n      mstore\n        /* \"#utility.yul\":6025:6029   */\n      0x20\n        /* \"#utility.yul\":6020:6023   */\n      dup3\n        /* \"#utility.yul\":6016:6030   */\n      add\n        /* \"#utility.yul\":6001:6030   */\n      swap1\n      pop\n        /* \"#utility.yul\":5867:6036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6042:6288   */\n    tag_315:\n        /* \"#utility.yul\":6123:6124   */\n      0x00\n        /* \"#utility.yul\":6133:6246   */\n    tag_407:\n        /* \"#utility.yul\":6147:6153   */\n      dup4\n        /* \"#utility.yul\":6144:6145   */\n      dup2\n        /* \"#utility.yul\":6141:6154   */\n      lt\n        /* \"#utility.yul\":6133:6246   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":6232:6233   */\n      dup1\n        /* \"#utility.yul\":6227:6230   */\n      dup3\n        /* \"#utility.yul\":6223:6234   */\n      add\n        /* \"#utility.yul\":6217:6235   */\n      mload\n        /* \"#utility.yul\":6213:6214   */\n      dup2\n        /* \"#utility.yul\":6208:6211   */\n      dup5\n        /* \"#utility.yul\":6204:6215   */\n      add\n        /* \"#utility.yul\":6197:6236   */\n      mstore\n        /* \"#utility.yul\":6169:6171   */\n      0x20\n        /* \"#utility.yul\":6166:6167   */\n      dup2\n        /* \"#utility.yul\":6162:6172   */\n      add\n        /* \"#utility.yul\":6157:6172   */\n      swap1\n      pop\n        /* \"#utility.yul\":6133:6246   */\n      jump(tag_407)\n    tag_409:\n        /* \"#utility.yul\":6280:6281   */\n      0x00\n        /* \"#utility.yul\":6271:6277   */\n      dup5\n        /* \"#utility.yul\":6266:6269   */\n      dup5\n        /* \"#utility.yul\":6262:6278   */\n      add\n        /* \"#utility.yul\":6255:6282   */\n      mstore\n        /* \"#utility.yul\":6104:6288   */\n      pop\n        /* \"#utility.yul\":6042:6288   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6294:6671   */\n    tag_316:\n        /* \"#utility.yul\":6382:6385   */\n      0x00\n        /* \"#utility.yul\":6410:6449   */\n      tag_411\n        /* \"#utility.yul\":6443:6448   */\n      dup3\n        /* \"#utility.yul\":6410:6449   */\n      tag_313\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6465:6536   */\n      tag_412\n        /* \"#utility.yul\":6529:6535   */\n      dup2\n        /* \"#utility.yul\":6524:6527   */\n      dup6\n        /* \"#utility.yul\":6465:6536   */\n      tag_314\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6458:6536   */\n      swap4\n      pop\n        /* \"#utility.yul\":6545:6610   */\n      tag_413\n        /* \"#utility.yul\":6603:6609   */\n      dup2\n        /* \"#utility.yul\":6598:6601   */\n      dup6\n        /* \"#utility.yul\":6591:6595   */\n      0x20\n        /* \"#utility.yul\":6584:6589   */\n      dup7\n        /* \"#utility.yul\":6580:6596   */\n      add\n        /* \"#utility.yul\":6545:6610   */\n      tag_315\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6635:6664   */\n      tag_414\n        /* \"#utility.yul\":6657:6663   */\n      dup2\n        /* \"#utility.yul\":6635:6664   */\n      tag_300\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6630:6633   */\n      dup5\n        /* \"#utility.yul\":6626:6665   */\n      add\n        /* \"#utility.yul\":6619:6665   */\n      swap2\n      pop\n        /* \"#utility.yul\":6386:6671   */\n      pop\n        /* \"#utility.yul\":6294:6671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6677:6990   */\n    tag_57:\n        /* \"#utility.yul\":6790:6794   */\n      0x00\n        /* \"#utility.yul\":6828:6830   */\n      0x20\n        /* \"#utility.yul\":6817:6826   */\n      dup3\n        /* \"#utility.yul\":6813:6831   */\n      add\n        /* \"#utility.yul\":6805:6831   */\n      swap1\n      pop\n        /* \"#utility.yul\":6877:6886   */\n      dup2\n        /* \"#utility.yul\":6871:6875   */\n      dup2\n        /* \"#utility.yul\":6867:6887   */\n      sub\n        /* \"#utility.yul\":6863:6864   */\n      0x00\n        /* \"#utility.yul\":6852:6861   */\n      dup4\n        /* \"#utility.yul\":6848:6865   */\n      add\n        /* \"#utility.yul\":6841:6888   */\n      mstore\n        /* \"#utility.yul\":6905:6983   */\n      tag_416\n        /* \"#utility.yul\":6978:6982   */\n      dup2\n        /* \"#utility.yul\":6969:6975   */\n      dup5\n        /* \"#utility.yul\":6905:6983   */\n      tag_316\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6897:6983   */\n      swap1\n      pop\n        /* \"#utility.yul\":6677:6990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6996:7325   */\n    tag_61:\n        /* \"#utility.yul\":7055:7061   */\n      0x00\n        /* \"#utility.yul\":7104:7106   */\n      0x20\n        /* \"#utility.yul\":7092:7101   */\n      dup3\n        /* \"#utility.yul\":7083:7090   */\n      dup5\n        /* \"#utility.yul\":7079:7102   */\n      sub\n        /* \"#utility.yul\":7075:7107   */\n      slt\n        /* \"#utility.yul\":7072:7191   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":7110:7189   */\n      tag_419\n      tag_289\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7072:7191   */\n    tag_418:\n        /* \"#utility.yul\":7230:7231   */\n      0x00\n        /* \"#utility.yul\":7255:7308   */\n      tag_420\n        /* \"#utility.yul\":7300:7307   */\n      dup5\n        /* \"#utility.yul\":7291:7297   */\n      dup3\n        /* \"#utility.yul\":7280:7289   */\n      dup6\n        /* \"#utility.yul\":7276:7298   */\n      add\n        /* \"#utility.yul\":7255:7308   */\n      tag_294\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7245:7308   */\n      swap2\n      pop\n        /* \"#utility.yul\":7201:7318   */\n      pop\n        /* \"#utility.yul\":6996:7325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7331:7805   */\n    tag_70:\n        /* \"#utility.yul\":7399:7405   */\n      0x00\n        /* \"#utility.yul\":7407:7413   */\n      dup1\n        /* \"#utility.yul\":7456:7458   */\n      0x40\n        /* \"#utility.yul\":7444:7453   */\n      dup4\n        /* \"#utility.yul\":7435:7442   */\n      dup6\n        /* \"#utility.yul\":7431:7454   */\n      sub\n        /* \"#utility.yul\":7427:7459   */\n      slt\n        /* \"#utility.yul\":7424:7543   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":7462:7541   */\n      tag_423\n      tag_289\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7424:7543   */\n    tag_422:\n        /* \"#utility.yul\":7582:7583   */\n      0x00\n        /* \"#utility.yul\":7607:7660   */\n      tag_424\n        /* \"#utility.yul\":7652:7659   */\n      dup6\n        /* \"#utility.yul\":7643:7649   */\n      dup3\n        /* \"#utility.yul\":7632:7641   */\n      dup7\n        /* \"#utility.yul\":7628:7650   */\n      add\n        /* \"#utility.yul\":7607:7660   */\n      tag_294\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7597:7660   */\n      swap3\n      pop\n        /* \"#utility.yul\":7553:7670   */\n      pop\n        /* \"#utility.yul\":7709:7711   */\n      0x20\n        /* \"#utility.yul\":7735:7788   */\n      tag_425\n        /* \"#utility.yul\":7780:7787   */\n      dup6\n        /* \"#utility.yul\":7771:7777   */\n      dup3\n        /* \"#utility.yul\":7760:7769   */\n      dup7\n        /* \"#utility.yul\":7756:7778   */\n      add\n        /* \"#utility.yul\":7735:7788   */\n      tag_294\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7725:7788   */\n      swap2\n      pop\n        /* \"#utility.yul\":7680:7798   */\n      pop\n        /* \"#utility.yul\":7331:7805   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7811:7929   */\n    tag_317:\n        /* \"#utility.yul\":7898:7922   */\n      tag_427\n        /* \"#utility.yul\":7916:7921   */\n      dup2\n        /* \"#utility.yul\":7898:7922   */\n      tag_295\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7893:7896   */\n      dup3\n        /* \"#utility.yul\":7886:7923   */\n      mstore\n        /* \"#utility.yul\":7811:7929   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7935:8157   */\n    tag_73:\n        /* \"#utility.yul\":8028:8032   */\n      0x00\n        /* \"#utility.yul\":8066:8068   */\n      0x20\n        /* \"#utility.yul\":8055:8064   */\n      dup3\n        /* \"#utility.yul\":8051:8069   */\n      add\n        /* \"#utility.yul\":8043:8069   */\n      swap1\n      pop\n        /* \"#utility.yul\":8079:8150   */\n      tag_429\n        /* \"#utility.yul\":8147:8148   */\n      0x00\n        /* \"#utility.yul\":8136:8145   */\n      dup4\n        /* \"#utility.yul\":8132:8149   */\n      add\n        /* \"#utility.yul\":8123:8129   */\n      dup5\n        /* \"#utility.yul\":8079:8150   */\n      tag_317\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7935:8157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8163:8306   */\n    tag_318:\n        /* \"#utility.yul\":8220:8225   */\n      0x00\n        /* \"#utility.yul\":8251:8257   */\n      dup2\n        /* \"#utility.yul\":8245:8258   */\n      mload\n        /* \"#utility.yul\":8236:8258   */\n      swap1\n      pop\n        /* \"#utility.yul\":8267:8300   */\n      tag_431\n        /* \"#utility.yul\":8294:8299   */\n      dup2\n        /* \"#utility.yul\":8267:8300   */\n      tag_296\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8163:8306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8663   */\n    tag_85:\n        /* \"#utility.yul\":8382:8388   */\n      0x00\n        /* \"#utility.yul\":8431:8433   */\n      0x20\n        /* \"#utility.yul\":8419:8428   */\n      dup3\n        /* \"#utility.yul\":8410:8417   */\n      dup5\n        /* \"#utility.yul\":8406:8429   */\n      sub\n        /* \"#utility.yul\":8402:8434   */\n      slt\n        /* \"#utility.yul\":8399:8518   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":8437:8516   */\n      tag_434\n      tag_289\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8399:8518   */\n    tag_433:\n        /* \"#utility.yul\":8557:8558   */\n      0x00\n        /* \"#utility.yul\":8582:8646   */\n      tag_435\n        /* \"#utility.yul\":8638:8645   */\n      dup5\n        /* \"#utility.yul\":8629:8635   */\n      dup3\n        /* \"#utility.yul\":8618:8627   */\n      dup6\n        /* \"#utility.yul\":8614:8636   */\n      add\n        /* \"#utility.yul\":8582:8646   */\n      tag_318\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8572:8646   */\n      swap2\n      pop\n        /* \"#utility.yul\":8528:8656   */\n      pop\n        /* \"#utility.yul\":8312:8663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8669:8839   */\n    tag_319:\n        /* \"#utility.yul\":8809:8831   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":8805:8806   */\n      0x00\n        /* \"#utility.yul\":8797:8803   */\n      dup3\n        /* \"#utility.yul\":8793:8807   */\n      add\n        /* \"#utility.yul\":8786:8832   */\n      mstore\n        /* \"#utility.yul\":8669:8839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8845:9211   */\n    tag_320:\n        /* \"#utility.yul\":8987:8990   */\n      0x00\n        /* \"#utility.yul\":9008:9075   */\n      tag_438\n        /* \"#utility.yul\":9072:9074   */\n      0x14\n        /* \"#utility.yul\":9067:9070   */\n      dup4\n        /* \"#utility.yul\":9008:9075   */\n      tag_314\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9001:9075   */\n      swap2\n      pop\n        /* \"#utility.yul\":9084:9177   */\n      tag_439\n        /* \"#utility.yul\":9173:9176   */\n      dup3\n        /* \"#utility.yul\":9084:9177   */\n      tag_319\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9202:9204   */\n      0x20\n        /* \"#utility.yul\":9197:9200   */\n      dup3\n        /* \"#utility.yul\":9193:9205   */\n      add\n        /* \"#utility.yul\":9186:9205   */\n      swap1\n      pop\n        /* \"#utility.yul\":8845:9211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9217:9636   */\n    tag_88:\n        /* \"#utility.yul\":9383:9387   */\n      0x00\n        /* \"#utility.yul\":9421:9423   */\n      0x20\n        /* \"#utility.yul\":9410:9419   */\n      dup3\n        /* \"#utility.yul\":9406:9424   */\n      add\n        /* \"#utility.yul\":9398:9424   */\n      swap1\n      pop\n        /* \"#utility.yul\":9470:9479   */\n      dup2\n        /* \"#utility.yul\":9464:9468   */\n      dup2\n        /* \"#utility.yul\":9460:9480   */\n      sub\n        /* \"#utility.yul\":9456:9457   */\n      0x00\n        /* \"#utility.yul\":9445:9454   */\n      dup4\n        /* \"#utility.yul\":9441:9458   */\n      add\n        /* \"#utility.yul\":9434:9481   */\n      mstore\n        /* \"#utility.yul\":9498:9629   */\n      tag_441\n        /* \"#utility.yul\":9624:9628   */\n      dup2\n        /* \"#utility.yul\":9498:9629   */\n      tag_320\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9490:9629   */\n      swap1\n      pop\n        /* \"#utility.yul\":9217:9636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9642:9822   */\n    tag_321:\n        /* \"#utility.yul\":9690:9767   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9687:9688   */\n      0x00\n        /* \"#utility.yul\":9680:9768   */\n      mstore\n        /* \"#utility.yul\":9787:9791   */\n      0x11\n        /* \"#utility.yul\":9784:9785   */\n      0x04\n        /* \"#utility.yul\":9777:9792   */\n      mstore\n        /* \"#utility.yul\":9811:9815   */\n      0x24\n        /* \"#utility.yul\":9808:9809   */\n      0x00\n        /* \"#utility.yul\":9801:9816   */\n      revert\n        /* \"#utility.yul\":9828:10019   */\n    tag_90:\n        /* \"#utility.yul\":9868:9871   */\n      0x00\n        /* \"#utility.yul\":9887:9907   */\n      tag_444\n        /* \"#utility.yul\":9905:9906   */\n      dup3\n        /* \"#utility.yul\":9887:9907   */\n      tag_295\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9882:9907   */\n      swap2\n      pop\n        /* \"#utility.yul\":9921:9941   */\n      tag_445\n        /* \"#utility.yul\":9939:9940   */\n      dup4\n        /* \"#utility.yul\":9921:9941   */\n      tag_295\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9916:9941   */\n      swap3\n      pop\n        /* \"#utility.yul\":9964:9965   */\n      dup3\n        /* \"#utility.yul\":9961:9962   */\n      dup3\n        /* \"#utility.yul\":9957:9966   */\n      add\n        /* \"#utility.yul\":9950:9966   */\n      swap1\n      pop\n        /* \"#utility.yul\":9985:9988   */\n      dup1\n        /* \"#utility.yul\":9982:9983   */\n      dup3\n        /* \"#utility.yul\":9979:9989   */\n      gt\n        /* \"#utility.yul\":9976:10012   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":9992:10010   */\n      tag_447\n      tag_321\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9976:10012   */\n    tag_446:\n        /* \"#utility.yul\":9828:10019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10025:10110   */\n    tag_322:\n        /* \"#utility.yul\":10070:10077   */\n      0x00\n        /* \"#utility.yul\":10099:10104   */\n      dup2\n        /* \"#utility.yul\":10088:10104   */\n      swap1\n      pop\n        /* \"#utility.yul\":10025:10110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10116:10217   */\n    tag_323:\n        /* \"#utility.yul\":10152:10159   */\n      0x00\n        /* \"#utility.yul\":10192:10210   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10185:10190   */\n      dup3\n        /* \"#utility.yul\":10181:10211   */\n      and\n        /* \"#utility.yul\":10170:10211   */\n      swap1\n      pop\n        /* \"#utility.yul\":10116:10217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10223:10283   */\n    tag_324:\n        /* \"#utility.yul\":10251:10254   */\n      0x00\n        /* \"#utility.yul\":10272:10277   */\n      dup2\n        /* \"#utility.yul\":10265:10277   */\n      swap1\n      pop\n        /* \"#utility.yul\":10223:10283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10289:10445   */\n    tag_325:\n        /* \"#utility.yul\":10346:10355   */\n      0x00\n        /* \"#utility.yul\":10379:10439   */\n      tag_452\n        /* \"#utility.yul\":10396:10438   */\n      tag_453\n        /* \"#utility.yul\":10405:10437   */\n      tag_454\n        /* \"#utility.yul\":10431:10436   */\n      dup5\n        /* \"#utility.yul\":10405:10437   */\n      tag_322\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":10396:10438   */\n      tag_324\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":10379:10439   */\n      tag_323\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10366:10439   */\n      swap1\n      pop\n        /* \"#utility.yul\":10289:10445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10451:10596   */\n    tag_326:\n        /* \"#utility.yul\":10545:10589   */\n      tag_456\n        /* \"#utility.yul\":10583:10588   */\n      dup2\n        /* \"#utility.yul\":10545:10589   */\n      tag_325\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10540:10543   */\n      dup3\n        /* \"#utility.yul\":10533:10590   */\n      mstore\n        /* \"#utility.yul\":10451:10596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10602:10838   */\n    tag_129:\n        /* \"#utility.yul\":10702:10706   */\n      0x00\n        /* \"#utility.yul\":10740:10742   */\n      0x20\n        /* \"#utility.yul\":10729:10738   */\n      dup3\n        /* \"#utility.yul\":10725:10743   */\n      add\n        /* \"#utility.yul\":10717:10743   */\n      swap1\n      pop\n        /* \"#utility.yul\":10753:10831   */\n      tag_458\n        /* \"#utility.yul\":10828:10829   */\n      0x00\n        /* \"#utility.yul\":10817:10826   */\n      dup4\n        /* \"#utility.yul\":10813:10830   */\n      add\n        /* \"#utility.yul\":10804:10810   */\n      dup5\n        /* \"#utility.yul\":10753:10831   */\n      tag_326\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10602:10838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10844:11176   */\n    tag_154:\n        /* \"#utility.yul\":10965:10969   */\n      0x00\n        /* \"#utility.yul\":11003:11005   */\n      0x40\n        /* \"#utility.yul\":10992:11001   */\n      dup3\n        /* \"#utility.yul\":10988:11006   */\n      add\n        /* \"#utility.yul\":10980:11006   */\n      swap1\n      pop\n        /* \"#utility.yul\":11016:11087   */\n      tag_460\n        /* \"#utility.yul\":11084:11085   */\n      0x00\n        /* \"#utility.yul\":11073:11082   */\n      dup4\n        /* \"#utility.yul\":11069:11086   */\n      add\n        /* \"#utility.yul\":11060:11066   */\n      dup6\n        /* \"#utility.yul\":11016:11087   */\n      tag_312\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":11097:11169   */\n      tag_461\n        /* \"#utility.yul\":11165:11167   */\n      0x20\n        /* \"#utility.yul\":11154:11163   */\n      dup4\n        /* \"#utility.yul\":11150:11168   */\n      add\n        /* \"#utility.yul\":11141:11147   */\n      dup5\n        /* \"#utility.yul\":11097:11169   */\n      tag_317\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10844:11176   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11182:11298   */\n    tag_327:\n        /* \"#utility.yul\":11252:11273   */\n      tag_463\n        /* \"#utility.yul\":11267:11272   */\n      dup2\n        /* \"#utility.yul\":11252:11273   */\n      tag_310\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":11245:11250   */\n      dup2\n        /* \"#utility.yul\":11242:11274   */\n      eq\n        /* \"#utility.yul\":11232:11292   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":11288:11289   */\n      0x00\n        /* \"#utility.yul\":11285:11286   */\n      dup1\n        /* \"#utility.yul\":11278:11290   */\n      revert\n        /* \"#utility.yul\":11232:11292   */\n    tag_464:\n        /* \"#utility.yul\":11182:11298   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11304:11441   */\n    tag_328:\n        /* \"#utility.yul\":11358:11363   */\n      0x00\n        /* \"#utility.yul\":11389:11395   */\n      dup2\n        /* \"#utility.yul\":11383:11396   */\n      mload\n        /* \"#utility.yul\":11374:11396   */\n      swap1\n      pop\n        /* \"#utility.yul\":11405:11435   */\n      tag_466\n        /* \"#utility.yul\":11429:11434   */\n      dup2\n        /* \"#utility.yul\":11405:11435   */\n      tag_327\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11304:11441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11447:11792   */\n    tag_158:\n        /* \"#utility.yul\":11514:11520   */\n      0x00\n        /* \"#utility.yul\":11563:11565   */\n      0x20\n        /* \"#utility.yul\":11551:11560   */\n      dup3\n        /* \"#utility.yul\":11542:11549   */\n      dup5\n        /* \"#utility.yul\":11538:11561   */\n      sub\n        /* \"#utility.yul\":11534:11566   */\n      slt\n        /* \"#utility.yul\":11531:11650   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":11569:11648   */\n      tag_469\n      tag_289\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11531:11650   */\n    tag_468:\n        /* \"#utility.yul\":11689:11690   */\n      0x00\n        /* \"#utility.yul\":11714:11775   */\n      tag_470\n        /* \"#utility.yul\":11767:11774   */\n      dup5\n        /* \"#utility.yul\":11758:11764   */\n      dup3\n        /* \"#utility.yul\":11747:11756   */\n      dup6\n        /* \"#utility.yul\":11743:11765   */\n      add\n        /* \"#utility.yul\":11714:11775   */\n      tag_328\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11704:11775   */\n      swap2\n      pop\n        /* \"#utility.yul\":11660:11785   */\n      pop\n        /* \"#utility.yul\":11447:11792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11798:11992   */\n    tag_160:\n        /* \"#utility.yul\":11838:11842   */\n      0x00\n        /* \"#utility.yul\":11858:11878   */\n      tag_472\n        /* \"#utility.yul\":11876:11877   */\n      dup3\n        /* \"#utility.yul\":11858:11878   */\n      tag_295\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11853:11878   */\n      swap2\n      pop\n        /* \"#utility.yul\":11892:11912   */\n      tag_473\n        /* \"#utility.yul\":11910:11911   */\n      dup4\n        /* \"#utility.yul\":11892:11912   */\n      tag_295\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11887:11912   */\n      swap3\n      pop\n        /* \"#utility.yul\":11936:11937   */\n      dup3\n        /* \"#utility.yul\":11933:11934   */\n      dup3\n        /* \"#utility.yul\":11929:11938   */\n      sub\n        /* \"#utility.yul\":11921:11938   */\n      swap1\n      pop\n        /* \"#utility.yul\":11960:11961   */\n      dup2\n        /* \"#utility.yul\":11954:11958   */\n      dup2\n        /* \"#utility.yul\":11951:11962   */\n      gt\n        /* \"#utility.yul\":11948:11985   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":11965:11983   */\n      tag_475\n      tag_321\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11948:11985   */\n    tag_474:\n        /* \"#utility.yul\":11798:11992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11998:12120   */\n    tag_329:\n        /* \"#utility.yul\":12071:12095   */\n      tag_477\n        /* \"#utility.yul\":12089:12094   */\n      dup2\n        /* \"#utility.yul\":12071:12095   */\n      tag_308\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12064:12069   */\n      dup2\n        /* \"#utility.yul\":12061:12096   */\n      eq\n        /* \"#utility.yul\":12051:12114   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":12110:12111   */\n      0x00\n        /* \"#utility.yul\":12107:12108   */\n      dup1\n        /* \"#utility.yul\":12100:12112   */\n      revert\n        /* \"#utility.yul\":12051:12114   */\n    tag_478:\n        /* \"#utility.yul\":11998:12120   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12126:12269   */\n    tag_330:\n        /* \"#utility.yul\":12183:12188   */\n      0x00\n        /* \"#utility.yul\":12214:12220   */\n      dup2\n        /* \"#utility.yul\":12208:12221   */\n      mload\n        /* \"#utility.yul\":12199:12221   */\n      swap1\n      pop\n        /* \"#utility.yul\":12230:12263   */\n      tag_480\n        /* \"#utility.yul\":12257:12262   */\n      dup2\n        /* \"#utility.yul\":12230:12263   */\n      tag_329\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12126:12269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12275:12626   */\n    tag_188:\n        /* \"#utility.yul\":12345:12351   */\n      0x00\n        /* \"#utility.yul\":12394:12396   */\n      0x20\n        /* \"#utility.yul\":12382:12391   */\n      dup3\n        /* \"#utility.yul\":12373:12380   */\n      dup5\n        /* \"#utility.yul\":12369:12392   */\n      sub\n        /* \"#utility.yul\":12365:12397   */\n      slt\n        /* \"#utility.yul\":12362:12481   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":12400:12479   */\n      tag_483\n      tag_289\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12362:12481   */\n    tag_482:\n        /* \"#utility.yul\":12520:12521   */\n      0x00\n        /* \"#utility.yul\":12545:12609   */\n      tag_484\n        /* \"#utility.yul\":12601:12608   */\n      dup5\n        /* \"#utility.yul\":12592:12598   */\n      dup3\n        /* \"#utility.yul\":12581:12590   */\n      dup6\n        /* \"#utility.yul\":12577:12599   */\n      add\n        /* \"#utility.yul\":12545:12609   */\n      tag_330\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12535:12609   */\n      swap2\n      pop\n        /* \"#utility.yul\":12491:12619   */\n      pop\n        /* \"#utility.yul\":12275:12626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12632:12730   */\n    tag_331:\n        /* \"#utility.yul\":12683:12689   */\n      0x00\n        /* \"#utility.yul\":12717:12722   */\n      dup2\n        /* \"#utility.yul\":12711:12723   */\n      mload\n        /* \"#utility.yul\":12701:12723   */\n      swap1\n      pop\n        /* \"#utility.yul\":12632:12730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12736:12883   */\n    tag_332:\n        /* \"#utility.yul\":12837:12848   */\n      0x00\n        /* \"#utility.yul\":12874:12877   */\n      dup2\n        /* \"#utility.yul\":12859:12877   */\n      swap1\n      pop\n        /* \"#utility.yul\":12736:12883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12889:13275   */\n    tag_333:\n        /* \"#utility.yul\":12993:12996   */\n      0x00\n        /* \"#utility.yul\":13021:13059   */\n      tag_488\n        /* \"#utility.yul\":13053:13058   */\n      dup3\n        /* \"#utility.yul\":13021:13059   */\n      tag_331\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13075:13163   */\n      tag_489\n        /* \"#utility.yul\":13156:13162   */\n      dup2\n        /* \"#utility.yul\":13151:13154   */\n      dup6\n        /* \"#utility.yul\":13075:13163   */\n      tag_332\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13068:13163   */\n      swap4\n      pop\n        /* \"#utility.yul\":13172:13237   */\n      tag_490\n        /* \"#utility.yul\":13230:13236   */\n      dup2\n        /* \"#utility.yul\":13225:13228   */\n      dup6\n        /* \"#utility.yul\":13218:13222   */\n      0x20\n        /* \"#utility.yul\":13211:13216   */\n      dup7\n        /* \"#utility.yul\":13207:13223   */\n      add\n        /* \"#utility.yul\":13172:13237   */\n      tag_315\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13262:13268   */\n      dup1\n        /* \"#utility.yul\":13257:13260   */\n      dup5\n        /* \"#utility.yul\":13253:13269   */\n      add\n        /* \"#utility.yul\":13246:13269   */\n      swap2\n      pop\n        /* \"#utility.yul\":12997:13275   */\n      pop\n        /* \"#utility.yul\":12889:13275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13281:13552   */\n    tag_267:\n        /* \"#utility.yul\":13411:13414   */\n      0x00\n        /* \"#utility.yul\":13433:13526   */\n      tag_492\n        /* \"#utility.yul\":13522:13525   */\n      dup3\n        /* \"#utility.yul\":13513:13519   */\n      dup5\n        /* \"#utility.yul\":13433:13526   */\n      tag_333\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":13426:13526   */\n      swap2\n      pop\n        /* \"#utility.yul\":13543:13546   */\n      dup2\n        /* \"#utility.yul\":13536:13546   */\n      swap1\n      pop\n        /* \"#utility.yul\":13281:13552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fd8f775608db2ab13067eb08f785e8341875e97808d2a4f0794ed447ef81df4f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610042575f80fd5b50608051611c376100695f395f8181610bce01528181610c230152610ddd0152611c375ff3fe6080604052600436106100c1575f3560e01c80638129fc1c1161007e578063ad3cb1cc11610058578063ad3cb1cc146101df578063f2fde38b14610209578063f3fef3a314610231578063f7888aec14610259576100c1565b80638129fc1c146101895780638456cb591461019f5780638da5cb5b146101b5576100c1565b80633f4ba83a146100c557806347e7ef24146100db5780634f1ef2861461010357806352d1902d1461011f5780635c975abb14610149578063715018a614610173575b5f80fd5b3480156100d0575f80fd5b506100d9610295565b005b3480156100e6575f80fd5b5061010160048036038101906100fc91906115a3565b6102a7565b005b61011d6004803603810190610118919061171d565b610457565b005b34801561012a575f80fd5b50610133610476565b604051610140919061178f565b60405180910390f35b348015610154575f80fd5b5061015d6104a7565b60405161016a91906117c2565b60405180910390f35b34801561017e575f80fd5b506101876104c9565b005b348015610194575f80fd5b5061019d6104dc565b005b3480156101aa575f80fd5b506101b361066c565b005b3480156101c0575f80fd5b506101c961067e565b6040516101d691906117ea565b60405180910390f35b3480156101ea575f80fd5b506101f36106b3565b604051610200919061187d565b60405180910390f35b348015610214575f80fd5b5061022f600480360381019061022a919061189d565b6106ec565b005b34801561023c575f80fd5b50610257600480360381019061025291906115a3565b610770565b005b348015610264575f80fd5b5061027f600480360381019061027a91906118c8565b610a56565b60405161028c9190611915565b60405180910390f35b61029d610ad7565b6102a5610b5e565b565b808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102e191906117ea565b602060405180830381865afa1580156102fc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103209190611942565b1015610361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610358906119b7565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103e79190611a02565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f4955178360405161044b9190611915565b60405180910390a35050565b61045f610bcc565b61046882610cb2565b6104728282610cbd565b5050565b5f61047f610ddb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f806104b1610e62565b9050805f015f9054906101000a900460ff1691505090565b6104d1610ad7565b6104da5f610e89565b565b5f6104e5610f5a565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561052d5750825b90505f60018367ffffffffffffffff1614801561056057505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561056e575080155b156105a5576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156105f2576001855f0160086101000a81548160ff0219169083151502179055505b6105fa610f81565b61060333610f93565b61060b610fa7565b8315610665575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161065c9190611a8a565b60405180910390a15b5050505050565b610674610ad7565b61067c610fb1565b565b5f80610688611020565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6106f4610ad7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610764575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161075b91906117ea565b60405180910390fd5b61076d81610e89565b50565b808273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107aa91906117ea565b602060405180830381865afa1580156107c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107e99190611942565b101561082a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610821906119b7565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db906119b7565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161091f929190611aa3565b6020604051808303815f875af115801561093b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061095f9190611af4565b50805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109e69190611b1f565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a483604051610a4a9190611915565b60405180910390a35050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610adf611047565b73ffffffffffffffffffffffffffffffffffffffff16610afd61067e565b73ffffffffffffffffffffffffffffffffffffffff1614610b5c57610b20611047565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b5391906117ea565b60405180910390fd5b565b610b6661104e565b5f610b6f610e62565b90505f815f015f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610bb4611047565b604051610bc191906117ea565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610c7957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c6061108e565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610cb0576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610cba610ad7565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d2557506040513d601f19601f82011682018060405250810190610d229190611b7c565b60015b610d6657816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610d5d91906117ea565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114610dcc57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610dc3919061178f565b60405180910390fd5b610dd683836110e1565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610e60576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b5f610e92611020565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610f89611153565b610f91611193565b565b610f9b611153565b610fa4816111c3565b50565b610faf611153565b565b610fb9611247565b5f610fc2610e62565b90506001815f015f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611008611047565b60405161101591906117ea565b60405180910390a150565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f33905090565b6110566104a7565b61108c576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6110ba7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611288565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110ea82611291565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111561114657611140828261135a565b5061114f565b61114e6113da565b5b5050565b61115b611416565b611191576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61119b611153565b5f6111a4610e62565b90505f815f015f6101000a81548160ff02191690831515021790555050565b6111cb611153565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361123b575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161123291906117ea565b60405180910390fd5b61124481610e89565b50565b61124f6104a7565b15611286576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036112ec57806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016112e391906117ea565b60405180910390fd5b806113187f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611288565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516113839190611beb565b5f60405180830381855af49150503d805f81146113bb576040519150601f19603f3d011682016040523d82523d5f602084013e6113c0565b606091505b50915091506113d0858383611434565b9250505092915050565b5f341115611414576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61141f610f5a565b5f0160089054906101000a900460ff16905090565b60608261144957611444826114c1565b6114b9565b5f825114801561146f57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156114b157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016114a891906117ea565b60405180910390fd5b8190506114ba565b5b9392505050565b5f815111156114d35780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61153f82611516565b9050919050565b61154f81611535565b8114611559575f80fd5b50565b5f8135905061156a81611546565b92915050565b5f819050919050565b61158281611570565b811461158c575f80fd5b50565b5f8135905061159d81611579565b92915050565b5f80604083850312156115b9576115b861150e565b5b5f6115c68582860161155c565b92505060206115d78582860161158f565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61162f826115e9565b810181811067ffffffffffffffff8211171561164e5761164d6115f9565b5b80604052505050565b5f611660611505565b905061166c8282611626565b919050565b5f67ffffffffffffffff82111561168b5761168a6115f9565b5b611694826115e9565b9050602081019050919050565b828183375f83830152505050565b5f6116c16116bc84611671565b611657565b9050828152602081018484840111156116dd576116dc6115e5565b5b6116e88482856116a1565b509392505050565b5f82601f830112611704576117036115e1565b5b81356117148482602086016116af565b91505092915050565b5f80604083850312156117335761173261150e565b5b5f6117408582860161155c565b925050602083013567ffffffffffffffff81111561176157611760611512565b5b61176d858286016116f0565b9150509250929050565b5f819050919050565b61178981611777565b82525050565b5f6020820190506117a25f830184611780565b92915050565b5f8115159050919050565b6117bc816117a8565b82525050565b5f6020820190506117d55f8301846117b3565b92915050565b6117e481611535565b82525050565b5f6020820190506117fd5f8301846117db565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561183a57808201518184015260208101905061181f565b5f8484015250505050565b5f61184f82611803565b611859818561180d565b935061186981856020860161181d565b611872816115e9565b840191505092915050565b5f6020820190508181035f8301526118958184611845565b905092915050565b5f602082840312156118b2576118b161150e565b5b5f6118bf8482850161155c565b91505092915050565b5f80604083850312156118de576118dd61150e565b5b5f6118eb8582860161155c565b92505060206118fc8582860161155c565b9150509250929050565b61190f81611570565b82525050565b5f6020820190506119285f830184611906565b92915050565b5f8151905061193c81611579565b92915050565b5f602082840312156119575761195661150e565b5b5f6119648482850161192e565b91505092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6119a160148361180d565b91506119ac8261196d565b602082019050919050565b5f6020820190508181035f8301526119ce81611995565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a0c82611570565b9150611a1783611570565b9250828201905080821115611a2f57611a2e6119d5565b5b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f611a74611a6f611a6a84611a35565b611a51565b611a3e565b9050919050565b611a8481611a5a565b82525050565b5f602082019050611a9d5f830184611a7b565b92915050565b5f604082019050611ab65f8301856117db565b611ac36020830184611906565b9392505050565b611ad3816117a8565b8114611add575f80fd5b50565b5f81519050611aee81611aca565b92915050565b5f60208284031215611b0957611b0861150e565b5b5f611b1684828501611ae0565b91505092915050565b5f611b2982611570565b9150611b3483611570565b9250828203905081811115611b4c57611b4b6119d5565b5b92915050565b611b5b81611777565b8114611b65575f80fd5b50565b5f81519050611b7681611b52565b92915050565b5f60208284031215611b9157611b9061150e565b5b5f611b9e84828501611b68565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611bc582611ba7565b611bcf8185611bb1565b9350611bdf81856020860161181d565b80840191505092915050565b5f611bf68284611bbb565b91508190509291505056fea2646970667358221220fd8f775608db2ab13067eb08f785e8341875e97808d2a4f0794ed447ef81df4f64736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1C37 PUSH2 0x69 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xBCE ADD MSTORE DUP2 DUP2 PUSH2 0xC23 ADD MSTORE PUSH2 0xDDD ADD MSTORE PUSH2 0x1C37 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8129FC1C GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x259 JUMPI PUSH2 0xC1 JUMP JUMPDEST DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B5 JUMPI PUSH2 0xC1 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0x295 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x4C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x4DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x66C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0xB5E JUMP JUMPDEST JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1942 JUMP JUMPDEST LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 DUP4 PUSH1 0x40 MLOAD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x45F PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x468 DUP3 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x472 DUP3 DUP3 PUSH2 0xCBD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47F PUSH2 0xDDB JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4B1 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x4D1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x4DA PUSH0 PUSH2 0xE89 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x4E5 PUSH2 0xF5A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x52D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x560 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x56E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x5FA PUSH2 0xF81 JUMP JUMPDEST PUSH2 0x603 CALLER PUSH2 0xF93 JUMP JUMPDEST PUSH2 0x60B PUSH2 0xFA7 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x665 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x674 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x67C PUSH2 0xFB1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x688 PUSH2 0x1020 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x6F4 PUSH2 0xAD7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x764 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76D DUP2 PUSH2 0xE89 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AA SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x1942 JUMP JUMPDEST LT ISZERO PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91F SWAP3 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST POP DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9E6 SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6337ED398C0E8467698C581374FDCE4DB14922DF487B5A39483079F5F59B60A4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADF PUSH2 0x1047 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAFD PUSH2 0x67E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5C JUMPI PUSH2 0xB20 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB66 PUSH2 0x104E JUMP JUMPDEST PUSH0 PUSH2 0xB6F PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBB4 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC1 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC79 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC60 PUSH2 0x108E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xCBA PUSH2 0xAD7 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD25 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD66 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xDCC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD6 DUP4 DUP4 PUSH2 0x10E1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE60 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xE92 PUSH2 0x1020 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF89 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0xF91 PUSH2 0x1193 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF9B PUSH2 0x1153 JUMP JUMPDEST PUSH2 0xFA4 DUP2 PUSH2 0x11C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFAF PUSH2 0x1153 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFB9 PUSH2 0x1247 JUMP JUMPDEST PUSH0 PUSH2 0xFC2 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1008 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1015 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1056 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x10BA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1288 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10EA DUP3 PUSH2 0x1291 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1146 JUMPI PUSH2 0x1140 DUP3 DUP3 PUSH2 0x135A JUMP JUMPDEST POP PUSH2 0x114F JUMP JUMPDEST PUSH2 0x114E PUSH2 0x13DA JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x115B PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x1191 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x119B PUSH2 0x1153 JUMP JUMPDEST PUSH0 PUSH2 0x11A4 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x11CB PUSH2 0x1153 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1244 DUP2 PUSH2 0xE89 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x124F PUSH2 0x4A7 JUMP JUMPDEST ISZERO PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x12EC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E3 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1318 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1288 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13D0 DUP6 DUP4 DUP4 PUSH2 0x1434 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1414 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x141F PUSH2 0xF5A JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1449 JUMPI PUSH2 0x1444 DUP3 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x14B9 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x146F JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x14B1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x14BA JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x14D3 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x153F DUP3 PUSH2 0x1516 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x154F DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP2 EQ PUSH2 0x1559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156A DUP2 PUSH2 0x1546 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1582 DUP2 PUSH2 0x1570 JUMP JUMPDEST DUP2 EQ PUSH2 0x158C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x159D DUP2 PUSH2 0x1579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B9 JUMPI PUSH2 0x15B8 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15C6 DUP6 DUP3 DUP7 ADD PUSH2 0x155C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15D7 DUP6 DUP3 DUP7 ADD PUSH2 0x158F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x162F DUP3 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x164E JUMPI PUSH2 0x164D PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1660 PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP PUSH2 0x166C DUP3 DUP3 PUSH2 0x1626 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x168B JUMPI PUSH2 0x168A PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST PUSH2 0x1694 DUP3 PUSH2 0x15E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C1 PUSH2 0x16BC DUP5 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x15E5 JUMP JUMPDEST JUMPDEST PUSH2 0x16E8 DUP5 DUP3 DUP6 PUSH2 0x16A1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1704 JUMPI PUSH2 0x1703 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1714 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1740 DUP6 DUP3 DUP7 ADD PUSH2 0x155C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH2 0x176D DUP6 DUP3 DUP7 ADD PUSH2 0x16F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1789 DUP2 PUSH2 0x1777 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BC DUP2 PUSH2 0x17A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x17B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E4 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17FD PUSH0 DUP4 ADD DUP5 PUSH2 0x17DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x183A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x181F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x184F DUP3 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x1859 DUP2 DUP6 PUSH2 0x180D JUMP JUMPDEST SWAP4 POP PUSH2 0x1869 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1872 DUP2 PUSH2 0x15E9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1895 DUP2 DUP5 PUSH2 0x1845 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x18B1 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18BF DUP5 DUP3 DUP6 ADD PUSH2 0x155C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18EB DUP6 DUP3 DUP7 ADD PUSH2 0x155C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18FC DUP6 DUP3 DUP7 ADD PUSH2 0x155C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x190F DUP2 PUSH2 0x1570 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1928 PUSH0 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x193C DUP2 PUSH2 0x1579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH2 0x1956 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1964 DUP5 DUP3 DUP6 ADD PUSH2 0x192E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19A1 PUSH1 0x14 DUP4 PUSH2 0x180D JUMP JUMPDEST SWAP2 POP PUSH2 0x19AC DUP3 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19CE DUP2 PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A0C DUP3 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A17 DUP4 PUSH2 0x1570 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A2F JUMPI PUSH2 0x1A2E PUSH2 0x19D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A74 PUSH2 0x1A6F PUSH2 0x1A6A DUP5 PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A84 DUP2 PUSH2 0x1A5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9D PUSH0 DUP4 ADD DUP5 PUSH2 0x1A7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AB6 PUSH0 DUP4 ADD DUP6 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x1AC3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1AD3 DUP2 PUSH2 0x17A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ADD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AEE DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B09 JUMPI PUSH2 0x1B08 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B16 DUP5 DUP3 DUP6 ADD PUSH2 0x1AE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B29 DUP3 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B34 DUP4 PUSH2 0x1570 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B4C JUMPI PUSH2 0x1B4B PUSH2 0x19D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5B DUP2 PUSH2 0x1777 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B65 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B76 DUP2 PUSH2 0x1B52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B9E DUP5 DUP3 DUP6 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC5 DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH2 0x1BCF DUP2 DUP6 PUSH2 0x1BB1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BDF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x181D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF6 DUP3 DUP5 PUSH2 0x1BBB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DUP16 PUSH24 0x5608DB2AB13067EB08F785E8341875E97808D2A4F0794ED4 SELFBALANCE 0xEF DUP2 0xDF 0x4F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "487:1893:11:-:0;;;1171:4:2;1128:48;;;;;;;;;487:1893:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": 1715,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 3987,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 4547,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_728": {
									"entryPoint": 3969,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_746": {
									"entryPoint": 4499,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": 4007,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_1811": {
									"entryPoint": 3250,
									"id": 1811,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 4435,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1164": {
									"entryPoint": 5082,
									"id": 1164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 3547,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 2775,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 3020,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 3930,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 4128,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_702": {
									"entryPoint": 3682,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 5142,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_658": {
									"entryPoint": 4167,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_827": {
									"entryPoint": 4017,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_790": {
									"entryPoint": 4679,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_803": {
									"entryPoint": 4174,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1505": {
									"entryPoint": 5313,
									"id": 1505,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_950": {
									"entryPoint": 4753,
									"id": 950,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 3721,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_851": {
									"entryPoint": 2910,
									"id": 851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 3261,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1784": {
									"entryPoint": 2646,
									"id": 1784,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_1708": {
									"entryPoint": 679,
									"id": 1708,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionDelegateCall_1425": {
									"entryPoint": 4954,
									"id": 1425,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1538": {
									"entryPoint": 4744,
									"id": 1538,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_923": {
									"entryPoint": 4238,
									"id": 923,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1671": {
									"entryPoint": 1244,
									"id": 1671,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 1662,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1793": {
									"entryPoint": 1644,
									"id": 1793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_778": {
									"entryPoint": 1191,
									"id": 778,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 1142,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1225,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 1772,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1802": {
									"entryPoint": 661,
									"id": 1802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 1111,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_984": {
									"entryPoint": 4321,
									"id": 984,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1465": {
									"entryPoint": 5172,
									"id": 1465,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1768": {
									"entryPoint": 1904,
									"id": 1768,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 7016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 7036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6819,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 6709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 6718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 6746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6173,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 5670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13555:12",
										"nodeType": "YulBlock",
										"src": "0:13555:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "748:87:12",
													"nodeType": "YulBlock",
													"src": "748:87:12",
													"statements": [
														{
															"nativeSrc": "758:29:12",
															"nodeType": "YulAssignment",
															"src": "758:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:12"
																},
																"nativeSrc": "767:20:12",
																"nodeType": "YulFunctionCall",
																"src": "767:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:12"
																},
																"nativeSrc": "796:33:12",
																"nodeType": "YulFunctionCall",
																"src": "796:33:12"
															},
															"nativeSrc": "796:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:12",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:12",
														"nodeType": "YulTypedName",
														"src": "734:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:12",
														"nodeType": "YulTypedName",
														"src": "742:5:12",
														"type": ""
													}
												],
												"src": "696:139:12"
											},
											{
												"body": {
													"nativeSrc": "886:32:12",
													"nodeType": "YulBlock",
													"src": "886:32:12",
													"statements": [
														{
															"nativeSrc": "896:16:12",
															"nodeType": "YulAssignment",
															"src": "896:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:12",
																"nodeType": "YulIdentifier",
																"src": "907:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:12",
														"nodeType": "YulTypedName",
														"src": "868:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:12",
														"nodeType": "YulTypedName",
														"src": "878:7:12",
														"type": ""
													}
												],
												"src": "841:77:12"
											},
											{
												"body": {
													"nativeSrc": "967:79:12",
													"nodeType": "YulBlock",
													"src": "967:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:12",
																"nodeType": "YulBlock",
																"src": "1024:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:12"
																			},
																			"nativeSrc": "1026:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:12"
																		},
																		"nativeSrc": "1026:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:12"
																				},
																				"nativeSrc": "997:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:12"
																		},
																		"nativeSrc": "987:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:12"
																},
																"nativeSrc": "980:43:12",
																"nodeType": "YulFunctionCall",
																"src": "980:43:12"
															},
															"nativeSrc": "977:63:12",
															"nodeType": "YulIf",
															"src": "977:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:12",
														"nodeType": "YulTypedName",
														"src": "960:5:12",
														"type": ""
													}
												],
												"src": "924:122:12"
											},
											{
												"body": {
													"nativeSrc": "1104:87:12",
													"nodeType": "YulBlock",
													"src": "1104:87:12",
													"statements": [
														{
															"nativeSrc": "1114:29:12",
															"nodeType": "YulAssignment",
															"src": "1114:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:12"
																},
																"nativeSrc": "1123:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:12"
																},
																"nativeSrc": "1152:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:12"
															},
															"nativeSrc": "1152:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:12",
														"nodeType": "YulTypedName",
														"src": "1082:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:12",
														"nodeType": "YulTypedName",
														"src": "1090:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:12",
														"nodeType": "YulTypedName",
														"src": "1098:5:12",
														"type": ""
													}
												],
												"src": "1052:139:12"
											},
											{
												"body": {
													"nativeSrc": "1280:391:12",
													"nodeType": "YulBlock",
													"src": "1280:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:12",
																"nodeType": "YulBlock",
																"src": "1326:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:12"
																			},
																			"nativeSrc": "1328:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:12"
																		},
																		"nativeSrc": "1328:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:12"
																		},
																		"nativeSrc": "1297:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:12"
																},
																"nativeSrc": "1293:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:12"
															},
															"nativeSrc": "1290:119:12",
															"nodeType": "YulIf",
															"src": "1290:119:12"
														},
														{
															"nativeSrc": "1419:117:12",
															"nodeType": "YulBlock",
															"src": "1419:117:12",
															"statements": [
																{
																	"nativeSrc": "1434:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:12"
																				},
																				"nativeSrc": "1494:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:12"
																		},
																		"nativeSrc": "1473:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:12",
															"nodeType": "YulBlock",
															"src": "1546:118:12",
															"statements": [
																{
																	"nativeSrc": "1561:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:12"
																				},
																				"nativeSrc": "1622:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:12"
																		},
																		"nativeSrc": "1601:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:12",
														"nodeType": "YulTypedName",
														"src": "1242:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:12",
														"nodeType": "YulTypedName",
														"src": "1253:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:12",
														"nodeType": "YulTypedName",
														"src": "1265:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:12",
														"nodeType": "YulTypedName",
														"src": "1273:6:12",
														"type": ""
													}
												],
												"src": "1197:474:12"
											},
											{
												"body": {
													"nativeSrc": "1766:28:12",
													"nodeType": "YulBlock",
													"src": "1766:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1783:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1783:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1786:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1786:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1776:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1776:6:12"
																},
																"nativeSrc": "1776:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1776:12:12"
															},
															"nativeSrc": "1776:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1776:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1677:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1677:117:12"
											},
											{
												"body": {
													"nativeSrc": "1889:28:12",
													"nodeType": "YulBlock",
													"src": "1889:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1906:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1906:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1909:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1909:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1899:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1899:6:12"
																},
																"nativeSrc": "1899:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1899:12:12"
															},
															"nativeSrc": "1899:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1899:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1800:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1800:117:12"
											},
											{
												"body": {
													"nativeSrc": "1971:54:12",
													"nodeType": "YulBlock",
													"src": "1971:54:12",
													"statements": [
														{
															"nativeSrc": "1981:38:12",
															"nodeType": "YulAssignment",
															"src": "1981:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1999:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1999:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2006:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2006:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1995:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1995:3:12"
																		},
																		"nativeSrc": "1995:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1995:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2015:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2015:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2011:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:12"
																		},
																		"nativeSrc": "2011:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1991:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1991:3:12"
																},
																"nativeSrc": "1991:28:12",
																"nodeType": "YulFunctionCall",
																"src": "1991:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1981:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1981:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1923:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1954:5:12",
														"nodeType": "YulTypedName",
														"src": "1954:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1964:6:12",
														"nodeType": "YulTypedName",
														"src": "1964:6:12",
														"type": ""
													}
												],
												"src": "1923:102:12"
											},
											{
												"body": {
													"nativeSrc": "2059:152:12",
													"nodeType": "YulBlock",
													"src": "2059:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2076:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2079:77:12",
																		"nodeType": "YulLiteral",
																		"src": "2079:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:12"
																},
																"nativeSrc": "2069:88:12",
																"nodeType": "YulFunctionCall",
																"src": "2069:88:12"
															},
															"nativeSrc": "2069:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "2069:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2173:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2173:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2176:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2176:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2166:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:12"
																},
																"nativeSrc": "2166:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2166:15:12"
															},
															"nativeSrc": "2166:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2166:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2197:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2200:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2200:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2190:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2190:6:12"
																},
																"nativeSrc": "2190:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2190:15:12"
															},
															"nativeSrc": "2190:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2190:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2031:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "2031:180:12"
											},
											{
												"body": {
													"nativeSrc": "2260:238:12",
													"nodeType": "YulBlock",
													"src": "2260:238:12",
													"statements": [
														{
															"nativeSrc": "2270:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2270:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2292:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2292:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "2322:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2322:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2300:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2300:21:12"
																		},
																		"nativeSrc": "2300:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2300:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2288:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2288:3:12"
																},
																"nativeSrc": "2288:40:12",
																"nodeType": "YulFunctionCall",
																"src": "2288:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2274:10:12",
																	"nodeType": "YulTypedName",
																	"src": "2274:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2439:22:12",
																"nodeType": "YulBlock",
																"src": "2439:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2441:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2441:16:12"
																			},
																			"nativeSrc": "2441:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2441:18:12"
																		},
																		"nativeSrc": "2441:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2441:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2382:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2382:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2394:18:12",
																				"nodeType": "YulLiteral",
																				"src": "2394:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2379:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2379:2:12"
																		},
																		"nativeSrc": "2379:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2379:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2418:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2418:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2430:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2430:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2415:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2415:2:12"
																		},
																		"nativeSrc": "2415:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2415:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2376:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2376:2:12"
																},
																"nativeSrc": "2376:62:12",
																"nodeType": "YulFunctionCall",
																"src": "2376:62:12"
															},
															"nativeSrc": "2373:88:12",
															"nodeType": "YulIf",
															"src": "2373:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2477:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2477:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2481:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "2481:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2470:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:12"
																},
																"nativeSrc": "2470:22:12",
																"nodeType": "YulFunctionCall",
																"src": "2470:22:12"
															},
															"nativeSrc": "2470:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "2470:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2217:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2246:6:12",
														"nodeType": "YulTypedName",
														"src": "2246:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2254:4:12",
														"nodeType": "YulTypedName",
														"src": "2254:4:12",
														"type": ""
													}
												],
												"src": "2217:281:12"
											},
											{
												"body": {
													"nativeSrc": "2545:88:12",
													"nodeType": "YulBlock",
													"src": "2545:88:12",
													"statements": [
														{
															"nativeSrc": "2555:30:12",
															"nodeType": "YulAssignment",
															"src": "2555:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2565:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2565:18:12"
																},
																"nativeSrc": "2565:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2565:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2555:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2555:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2614:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2614:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2622:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2622:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2594:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "2594:19:12"
																},
																"nativeSrc": "2594:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2594:33:12"
															},
															"nativeSrc": "2594:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2594:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2504:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2529:4:12",
														"nodeType": "YulTypedName",
														"src": "2529:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2538:6:12",
														"nodeType": "YulTypedName",
														"src": "2538:6:12",
														"type": ""
													}
												],
												"src": "2504:129:12"
											},
											{
												"body": {
													"nativeSrc": "2705:241:12",
													"nodeType": "YulBlock",
													"src": "2705:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2810:22:12",
																"nodeType": "YulBlock",
																"src": "2810:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2812:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2812:16:12"
																			},
																			"nativeSrc": "2812:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2812:18:12"
																		},
																		"nativeSrc": "2812:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2812:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2782:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2782:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2790:18:12",
																		"nodeType": "YulLiteral",
																		"src": "2790:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2779:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2779:2:12"
																},
																"nativeSrc": "2779:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2779:30:12"
															},
															"nativeSrc": "2776:56:12",
															"nodeType": "YulIf",
															"src": "2776:56:12"
														},
														{
															"nativeSrc": "2842:37:12",
															"nodeType": "YulAssignment",
															"src": "2842:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2872:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2872:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2850:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "2850:21:12"
																},
																"nativeSrc": "2850:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2850:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2842:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2842:4:12"
																}
															]
														},
														{
															"nativeSrc": "2916:23:12",
															"nodeType": "YulAssignment",
															"src": "2916:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2928:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2928:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2934:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2934:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2924:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2924:3:12"
																},
																"nativeSrc": "2924:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2924:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2916:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2916:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "2639:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2689:6:12",
														"nodeType": "YulTypedName",
														"src": "2689:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2700:4:12",
														"nodeType": "YulTypedName",
														"src": "2700:4:12",
														"type": ""
													}
												],
												"src": "2639:307:12"
											},
											{
												"body": {
													"nativeSrc": "3016:82:12",
													"nodeType": "YulBlock",
													"src": "3016:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3039:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3039:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3044:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3044:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3049:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3049:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3026:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3026:12:12"
																},
																"nativeSrc": "3026:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3026:30:12"
															},
															"nativeSrc": "3026:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "3026:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3076:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3076:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3081:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3081:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3072:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:12"
																		},
																		"nativeSrc": "3072:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3072:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3090:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3065:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:12"
																},
																"nativeSrc": "3065:27:12",
																"nodeType": "YulFunctionCall",
																"src": "3065:27:12"
															},
															"nativeSrc": "3065:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "3065:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2952:146:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2998:3:12",
														"nodeType": "YulTypedName",
														"src": "2998:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3003:3:12",
														"nodeType": "YulTypedName",
														"src": "3003:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3008:6:12",
														"nodeType": "YulTypedName",
														"src": "3008:6:12",
														"type": ""
													}
												],
												"src": "2952:146:12"
											},
											{
												"body": {
													"nativeSrc": "3187:340:12",
													"nodeType": "YulBlock",
													"src": "3187:340:12",
													"statements": [
														{
															"nativeSrc": "3197:74:12",
															"nodeType": "YulAssignment",
															"src": "3197:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3263:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3263:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "3222:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "3222:40:12"
																		},
																		"nativeSrc": "3222:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3222:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3206:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "3206:15:12"
																},
																"nativeSrc": "3206:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3206:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3197:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3197:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3287:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3287:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3294:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3294:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3280:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:12"
																},
																"nativeSrc": "3280:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3280:21:12"
															},
															"nativeSrc": "3280:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "3280:21:12"
														},
														{
															"nativeSrc": "3310:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3310:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3325:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3325:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3332:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3332:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3321:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:12"
																},
																"nativeSrc": "3321:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3321:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3314:3:12",
																	"nodeType": "YulTypedName",
																	"src": "3314:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3375:83:12",
																"nodeType": "YulBlock",
																"src": "3375:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3377:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3377:77:12"
																			},
																			"nativeSrc": "3377:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3377:79:12"
																		},
																		"nativeSrc": "3377:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3377:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3356:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3356:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3361:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3361:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3352:3:12"
																		},
																		"nativeSrc": "3352:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3352:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3370:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3370:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3349:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3349:2:12"
																},
																"nativeSrc": "3349:25:12",
																"nodeType": "YulFunctionCall",
																"src": "3349:25:12"
															},
															"nativeSrc": "3346:112:12",
															"nodeType": "YulIf",
															"src": "3346:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3504:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3504:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3509:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3509:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3514:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3514:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "3467:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "3467:36:12"
																},
																"nativeSrc": "3467:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3467:54:12"
															},
															"nativeSrc": "3467:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "3467:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "3104:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3160:3:12",
														"nodeType": "YulTypedName",
														"src": "3160:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3165:6:12",
														"nodeType": "YulTypedName",
														"src": "3165:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3173:3:12",
														"nodeType": "YulTypedName",
														"src": "3173:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3181:5:12",
														"nodeType": "YulTypedName",
														"src": "3181:5:12",
														"type": ""
													}
												],
												"src": "3104:423:12"
											},
											{
												"body": {
													"nativeSrc": "3607:277:12",
													"nodeType": "YulBlock",
													"src": "3607:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3656:83:12",
																"nodeType": "YulBlock",
																"src": "3656:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3658:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3658:77:12"
																			},
																			"nativeSrc": "3658:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3658:79:12"
																		},
																		"nativeSrc": "3658:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3658:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3635:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3635:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3643:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3643:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3631:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3631:3:12"
																				},
																				"nativeSrc": "3631:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3631:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3650:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3650:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3627:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3627:3:12"
																		},
																		"nativeSrc": "3627:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3627:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3620:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3620:6:12"
																},
																"nativeSrc": "3620:35:12",
																"nodeType": "YulFunctionCall",
																"src": "3620:35:12"
															},
															"nativeSrc": "3617:122:12",
															"nodeType": "YulIf",
															"src": "3617:122:12"
														},
														{
															"nativeSrc": "3748:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3748:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3775:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3775:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3762:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3762:12:12"
																},
																"nativeSrc": "3762:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3762:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3752:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3752:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3791:87:12",
															"nodeType": "YulAssignment",
															"src": "3791:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3851:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3851:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3859:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3859:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3847:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:12"
																		},
																		"nativeSrc": "3847:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3847:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3866:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3866:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3874:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3874:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "3800:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "3800:46:12"
																},
																"nativeSrc": "3800:78:12",
																"nodeType": "YulFunctionCall",
																"src": "3800:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3791:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3791:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "3546:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3585:6:12",
														"nodeType": "YulTypedName",
														"src": "3585:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3593:3:12",
														"nodeType": "YulTypedName",
														"src": "3593:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3601:5:12",
														"nodeType": "YulTypedName",
														"src": "3601:5:12",
														"type": ""
													}
												],
												"src": "3546:338:12"
											},
											{
												"body": {
													"nativeSrc": "3982:560:12",
													"nodeType": "YulBlock",
													"src": "3982:560:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4028:83:12",
																"nodeType": "YulBlock",
																"src": "4028:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4030:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4030:77:12"
																			},
																			"nativeSrc": "4030:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4030:79:12"
																		},
																		"nativeSrc": "4030:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4030:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4003:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4003:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4012:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4012:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:12"
																		},
																		"nativeSrc": "3999:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4024:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4024:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3995:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3995:3:12"
																},
																"nativeSrc": "3995:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3995:32:12"
															},
															"nativeSrc": "3992:119:12",
															"nodeType": "YulIf",
															"src": "3992:119:12"
														},
														{
															"nativeSrc": "4121:117:12",
															"nodeType": "YulBlock",
															"src": "4121:117:12",
															"statements": [
																{
																	"nativeSrc": "4136:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4136:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4150:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4150:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4140:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4140:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4165:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4165:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4200:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4200:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4211:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4211:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4196:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4196:3:12"
																				},
																				"nativeSrc": "4196:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4196:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4220:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4220:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4175:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4175:20:12"
																		},
																		"nativeSrc": "4175:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4165:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4165:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4248:287:12",
															"nodeType": "YulBlock",
															"src": "4248:287:12",
															"statements": [
																{
																	"nativeSrc": "4263:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4263:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4294:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4294:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4305:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4305:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4290:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:12"
																				},
																				"nativeSrc": "4290:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4277:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "4277:12:12"
																		},
																		"nativeSrc": "4277:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4277:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4267:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4267:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4356:83:12",
																		"nodeType": "YulBlock",
																		"src": "4356:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4358:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "4358:77:12"
																					},
																					"nativeSrc": "4358:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4358:79:12"
																				},
																				"nativeSrc": "4358:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4358:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4328:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4328:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4336:18:12",
																				"nodeType": "YulLiteral",
																				"src": "4336:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4325:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4325:2:12"
																		},
																		"nativeSrc": "4325:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4325:30:12"
																	},
																	"nativeSrc": "4322:117:12",
																	"nodeType": "YulIf",
																	"src": "4322:117:12"
																},
																{
																	"nativeSrc": "4453:72:12",
																	"nodeType": "YulAssignment",
																	"src": "4453:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4497:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4497:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4508:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4508:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4493:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4493:3:12"
																				},
																				"nativeSrc": "4493:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4493:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4517:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4517:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "4463:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "4463:29:12"
																		},
																		"nativeSrc": "4463:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4463:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4453:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4453:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3890:652:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3944:9:12",
														"nodeType": "YulTypedName",
														"src": "3944:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3955:7:12",
														"nodeType": "YulTypedName",
														"src": "3955:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3967:6:12",
														"nodeType": "YulTypedName",
														"src": "3967:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3975:6:12",
														"nodeType": "YulTypedName",
														"src": "3975:6:12",
														"type": ""
													}
												],
												"src": "3890:652:12"
											},
											{
												"body": {
													"nativeSrc": "4593:32:12",
													"nodeType": "YulBlock",
													"src": "4593:32:12",
													"statements": [
														{
															"nativeSrc": "4603:16:12",
															"nodeType": "YulAssignment",
															"src": "4603:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "4614:5:12",
																"nodeType": "YulIdentifier",
																"src": "4614:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4603:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4603:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4548:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4575:5:12",
														"nodeType": "YulTypedName",
														"src": "4575:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4585:7:12",
														"nodeType": "YulTypedName",
														"src": "4585:7:12",
														"type": ""
													}
												],
												"src": "4548:77:12"
											},
											{
												"body": {
													"nativeSrc": "4696:53:12",
													"nodeType": "YulBlock",
													"src": "4696:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4713:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4713:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4736:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4736:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4718:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4718:17:12"
																		},
																		"nativeSrc": "4718:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4718:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4706:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:12"
																},
																"nativeSrc": "4706:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4706:37:12"
															},
															"nativeSrc": "4706:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4706:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4631:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4684:5:12",
														"nodeType": "YulTypedName",
														"src": "4684:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4691:3:12",
														"nodeType": "YulTypedName",
														"src": "4691:3:12",
														"type": ""
													}
												],
												"src": "4631:118:12"
											},
											{
												"body": {
													"nativeSrc": "4853:124:12",
													"nodeType": "YulBlock",
													"src": "4853:124:12",
													"statements": [
														{
															"nativeSrc": "4863:26:12",
															"nodeType": "YulAssignment",
															"src": "4863:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4875:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4875:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4886:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4886:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4871:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4871:3:12"
																},
																"nativeSrc": "4871:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4871:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4863:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4863:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4943:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4943:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4956:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4956:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4967:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4967:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4952:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4952:3:12"
																		},
																		"nativeSrc": "4952:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4952:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4899:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4899:43:12"
																},
																"nativeSrc": "4899:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4899:71:12"
															},
															"nativeSrc": "4899:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4899:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4755:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4825:9:12",
														"nodeType": "YulTypedName",
														"src": "4825:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4837:6:12",
														"nodeType": "YulTypedName",
														"src": "4837:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4848:4:12",
														"nodeType": "YulTypedName",
														"src": "4848:4:12",
														"type": ""
													}
												],
												"src": "4755:222:12"
											},
											{
												"body": {
													"nativeSrc": "5025:48:12",
													"nodeType": "YulBlock",
													"src": "5025:48:12",
													"statements": [
														{
															"nativeSrc": "5035:32:12",
															"nodeType": "YulAssignment",
															"src": "5035:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5060:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5060:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5053:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5053:6:12"
																		},
																		"nativeSrc": "5053:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5053:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5046:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5046:6:12"
																},
																"nativeSrc": "5046:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5046:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5035:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5035:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4983:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5007:5:12",
														"nodeType": "YulTypedName",
														"src": "5007:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5017:7:12",
														"nodeType": "YulTypedName",
														"src": "5017:7:12",
														"type": ""
													}
												],
												"src": "4983:90:12"
											},
											{
												"body": {
													"nativeSrc": "5138:50:12",
													"nodeType": "YulBlock",
													"src": "5138:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5155:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5155:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5175:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5175:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5160:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "5160:14:12"
																		},
																		"nativeSrc": "5160:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5148:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:12"
																},
																"nativeSrc": "5148:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5148:34:12"
															},
															"nativeSrc": "5148:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5148:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5079:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5126:5:12",
														"nodeType": "YulTypedName",
														"src": "5126:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5133:3:12",
														"nodeType": "YulTypedName",
														"src": "5133:3:12",
														"type": ""
													}
												],
												"src": "5079:109:12"
											},
											{
												"body": {
													"nativeSrc": "5286:118:12",
													"nodeType": "YulBlock",
													"src": "5286:118:12",
													"statements": [
														{
															"nativeSrc": "5296:26:12",
															"nodeType": "YulAssignment",
															"src": "5296:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5308:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5308:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5319:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5319:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5304:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5304:3:12"
																},
																"nativeSrc": "5304:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5304:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5296:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5296:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5370:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5370:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5383:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5383:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5394:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5394:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5379:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5379:3:12"
																		},
																		"nativeSrc": "5379:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5379:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5332:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "5332:37:12"
																},
																"nativeSrc": "5332:65:12",
																"nodeType": "YulFunctionCall",
																"src": "5332:65:12"
															},
															"nativeSrc": "5332:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "5332:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5194:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5258:9:12",
														"nodeType": "YulTypedName",
														"src": "5258:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5270:6:12",
														"nodeType": "YulTypedName",
														"src": "5270:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5281:4:12",
														"nodeType": "YulTypedName",
														"src": "5281:4:12",
														"type": ""
													}
												],
												"src": "5194:210:12"
											},
											{
												"body": {
													"nativeSrc": "5475:53:12",
													"nodeType": "YulBlock",
													"src": "5475:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5492:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5492:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5515:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5515:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5497:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5497:17:12"
																		},
																		"nativeSrc": "5497:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5497:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5485:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:12"
																},
																"nativeSrc": "5485:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5485:37:12"
															},
															"nativeSrc": "5485:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5485:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5410:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5463:5:12",
														"nodeType": "YulTypedName",
														"src": "5463:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5470:3:12",
														"nodeType": "YulTypedName",
														"src": "5470:3:12",
														"type": ""
													}
												],
												"src": "5410:118:12"
											},
											{
												"body": {
													"nativeSrc": "5632:124:12",
													"nodeType": "YulBlock",
													"src": "5632:124:12",
													"statements": [
														{
															"nativeSrc": "5642:26:12",
															"nodeType": "YulAssignment",
															"src": "5642:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5654:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5654:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5665:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5650:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5650:3:12"
																},
																"nativeSrc": "5650:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5650:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5642:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5642:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5722:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5722:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5735:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5735:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5746:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5746:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5731:3:12"
																		},
																		"nativeSrc": "5731:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5731:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5678:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5678:43:12"
																},
																"nativeSrc": "5678:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5678:71:12"
															},
															"nativeSrc": "5678:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5678:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5534:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5604:9:12",
														"nodeType": "YulTypedName",
														"src": "5604:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5616:6:12",
														"nodeType": "YulTypedName",
														"src": "5616:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5627:4:12",
														"nodeType": "YulTypedName",
														"src": "5627:4:12",
														"type": ""
													}
												],
												"src": "5534:222:12"
											},
											{
												"body": {
													"nativeSrc": "5821:40:12",
													"nodeType": "YulBlock",
													"src": "5821:40:12",
													"statements": [
														{
															"nativeSrc": "5832:22:12",
															"nodeType": "YulAssignment",
															"src": "5832:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5848:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5848:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5842:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5842:5:12"
																},
																"nativeSrc": "5842:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5842:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5832:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5832:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5762:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5804:5:12",
														"nodeType": "YulTypedName",
														"src": "5804:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5814:6:12",
														"nodeType": "YulTypedName",
														"src": "5814:6:12",
														"type": ""
													}
												],
												"src": "5762:99:12"
											},
											{
												"body": {
													"nativeSrc": "5963:73:12",
													"nodeType": "YulBlock",
													"src": "5963:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5980:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5980:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5985:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5985:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5973:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5973:6:12"
																},
																"nativeSrc": "5973:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5973:19:12"
															},
															"nativeSrc": "5973:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "5973:19:12"
														},
														{
															"nativeSrc": "6001:29:12",
															"nodeType": "YulAssignment",
															"src": "6001:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6020:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6020:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6025:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6025:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6016:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6016:3:12"
																},
																"nativeSrc": "6016:14:12",
																"nodeType": "YulFunctionCall",
																"src": "6016:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6001:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "6001:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5867:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5935:3:12",
														"nodeType": "YulTypedName",
														"src": "5935:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5940:6:12",
														"nodeType": "YulTypedName",
														"src": "5940:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5951:11:12",
														"nodeType": "YulTypedName",
														"src": "5951:11:12",
														"type": ""
													}
												],
												"src": "5867:169:12"
											},
											{
												"body": {
													"nativeSrc": "6104:184:12",
													"nodeType": "YulBlock",
													"src": "6104:184:12",
													"statements": [
														{
															"nativeSrc": "6114:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6114:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "6123:1:12",
																"nodeType": "YulLiteral",
																"src": "6123:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6118:1:12",
																	"nodeType": "YulTypedName",
																	"src": "6118:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6183:63:12",
																"nodeType": "YulBlock",
																"src": "6183:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6208:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6208:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6213:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "6213:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6204:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "6204:3:12"
																					},
																					"nativeSrc": "6204:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6204:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6227:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "6227:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6232:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "6232:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6223:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "6223:3:12"
																							},
																							"nativeSrc": "6223:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6223:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6217:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6217:5:12"
																					},
																					"nativeSrc": "6217:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6217:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6197:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:6:12"
																			},
																			"nativeSrc": "6197:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6197:39:12"
																		},
																		"nativeSrc": "6197:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6197:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6144:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6144:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6147:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6147:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6141:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6141:2:12"
																},
																"nativeSrc": "6141:13:12",
																"nodeType": "YulFunctionCall",
																"src": "6141:13:12"
															},
															"nativeSrc": "6133:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6155:19:12",
																"nodeType": "YulBlock",
																"src": "6155:19:12",
																"statements": [
																	{
																		"nativeSrc": "6157:15:12",
																		"nodeType": "YulAssignment",
																		"src": "6157:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6166:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "6166:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6169:2:12",
																					"nodeType": "YulLiteral",
																					"src": "6169:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6162:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6162:3:12"
																			},
																			"nativeSrc": "6162:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6162:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6157:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6157:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6137:3:12",
																"nodeType": "YulBlock",
																"src": "6137:3:12",
																"statements": []
															},
															"src": "6133:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6266:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6266:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6271:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6271:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6262:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6262:3:12"
																		},
																		"nativeSrc": "6262:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6280:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6280:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6255:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:12"
																},
																"nativeSrc": "6255:27:12",
																"nodeType": "YulFunctionCall",
																"src": "6255:27:12"
															},
															"nativeSrc": "6255:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "6255:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6042:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6086:3:12",
														"nodeType": "YulTypedName",
														"src": "6086:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6091:3:12",
														"nodeType": "YulTypedName",
														"src": "6091:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6096:6:12",
														"nodeType": "YulTypedName",
														"src": "6096:6:12",
														"type": ""
													}
												],
												"src": "6042:246:12"
											},
											{
												"body": {
													"nativeSrc": "6386:285:12",
													"nodeType": "YulBlock",
													"src": "6386:285:12",
													"statements": [
														{
															"nativeSrc": "6396:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6396:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6443:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6443:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6410:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "6410:32:12"
																},
																"nativeSrc": "6410:39:12",
																"nodeType": "YulFunctionCall",
																"src": "6410:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6400:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6400:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6458:78:12",
															"nodeType": "YulAssignment",
															"src": "6458:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6524:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6524:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6529:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6529:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6465:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "6465:58:12"
																},
																"nativeSrc": "6465:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6465:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6458:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6458:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6584:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6584:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6591:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6591:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:12"
																		},
																		"nativeSrc": "6580:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6598:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6598:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6603:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6603:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6545:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "6545:34:12"
																},
																"nativeSrc": "6545:65:12",
																"nodeType": "YulFunctionCall",
																"src": "6545:65:12"
															},
															"nativeSrc": "6545:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "6545:65:12"
														},
														{
															"nativeSrc": "6619:46:12",
															"nodeType": "YulAssignment",
															"src": "6619:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6630:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6630:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6657:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6657:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6635:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "6635:21:12"
																		},
																		"nativeSrc": "6635:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6626:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:12"
																},
																"nativeSrc": "6626:39:12",
																"nodeType": "YulFunctionCall",
																"src": "6626:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6619:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6294:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6367:5:12",
														"nodeType": "YulTypedName",
														"src": "6367:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6374:3:12",
														"nodeType": "YulTypedName",
														"src": "6374:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6382:3:12",
														"nodeType": "YulTypedName",
														"src": "6382:3:12",
														"type": ""
													}
												],
												"src": "6294:377:12"
											},
											{
												"body": {
													"nativeSrc": "6795:195:12",
													"nodeType": "YulBlock",
													"src": "6795:195:12",
													"statements": [
														{
															"nativeSrc": "6805:26:12",
															"nodeType": "YulAssignment",
															"src": "6805:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6817:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6817:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6828:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6828:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6813:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6813:3:12"
																},
																"nativeSrc": "6813:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6813:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6805:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6805:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6852:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6852:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6863:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6863:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6848:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6848:3:12"
																		},
																		"nativeSrc": "6848:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6848:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6871:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6871:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6877:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6877:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6867:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6867:3:12"
																		},
																		"nativeSrc": "6867:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6867:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6841:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6841:6:12"
																},
																"nativeSrc": "6841:47:12",
																"nodeType": "YulFunctionCall",
																"src": "6841:47:12"
															},
															"nativeSrc": "6841:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "6841:47:12"
														},
														{
															"nativeSrc": "6897:86:12",
															"nodeType": "YulAssignment",
															"src": "6897:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6969:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6969:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6978:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6978:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6905:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "6905:63:12"
																},
																"nativeSrc": "6905:78:12",
																"nodeType": "YulFunctionCall",
																"src": "6905:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6897:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6897:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6677:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6767:9:12",
														"nodeType": "YulTypedName",
														"src": "6767:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6779:6:12",
														"nodeType": "YulTypedName",
														"src": "6779:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6790:4:12",
														"nodeType": "YulTypedName",
														"src": "6790:4:12",
														"type": ""
													}
												],
												"src": "6677:313:12"
											},
											{
												"body": {
													"nativeSrc": "7062:263:12",
													"nodeType": "YulBlock",
													"src": "7062:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7108:83:12",
																"nodeType": "YulBlock",
																"src": "7108:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7110:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7110:77:12"
																			},
																			"nativeSrc": "7110:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7110:79:12"
																		},
																		"nativeSrc": "7110:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7110:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7083:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7083:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7092:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7092:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7079:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7079:3:12"
																		},
																		"nativeSrc": "7079:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7079:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7104:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7104:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7075:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7075:3:12"
																},
																"nativeSrc": "7075:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7075:32:12"
															},
															"nativeSrc": "7072:119:12",
															"nodeType": "YulIf",
															"src": "7072:119:12"
														},
														{
															"nativeSrc": "7201:117:12",
															"nodeType": "YulBlock",
															"src": "7201:117:12",
															"statements": [
																{
																	"nativeSrc": "7216:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7216:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7230:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7230:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7220:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7220:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7245:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7245:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7280:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7280:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7291:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7291:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7276:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7276:3:12"
																				},
																				"nativeSrc": "7276:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7276:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7300:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7255:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7255:20:12"
																		},
																		"nativeSrc": "7255:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7255:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7245:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7245:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6996:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7032:9:12",
														"nodeType": "YulTypedName",
														"src": "7032:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7043:7:12",
														"nodeType": "YulTypedName",
														"src": "7043:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7055:6:12",
														"nodeType": "YulTypedName",
														"src": "7055:6:12",
														"type": ""
													}
												],
												"src": "6996:329:12"
											},
											{
												"body": {
													"nativeSrc": "7414:391:12",
													"nodeType": "YulBlock",
													"src": "7414:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7460:83:12",
																"nodeType": "YulBlock",
																"src": "7460:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7462:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7462:77:12"
																			},
																			"nativeSrc": "7462:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7462:79:12"
																		},
																		"nativeSrc": "7462:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7462:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7435:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7435:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7444:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7444:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7431:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7431:3:12"
																		},
																		"nativeSrc": "7431:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7431:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7456:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7456:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7427:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7427:3:12"
																},
																"nativeSrc": "7427:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7427:32:12"
															},
															"nativeSrc": "7424:119:12",
															"nodeType": "YulIf",
															"src": "7424:119:12"
														},
														{
															"nativeSrc": "7553:117:12",
															"nodeType": "YulBlock",
															"src": "7553:117:12",
															"statements": [
																{
																	"nativeSrc": "7568:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7568:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7582:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7582:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7572:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7572:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7597:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7597:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7632:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7632:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7643:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7643:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7628:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7628:3:12"
																				},
																				"nativeSrc": "7628:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7628:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7652:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7652:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7607:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7607:20:12"
																		},
																		"nativeSrc": "7607:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7607:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7597:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7597:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7680:118:12",
															"nodeType": "YulBlock",
															"src": "7680:118:12",
															"statements": [
																{
																	"nativeSrc": "7695:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7695:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7709:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7709:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7699:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7699:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7725:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7725:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7760:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7760:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7771:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7771:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7756:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7756:3:12"
																				},
																				"nativeSrc": "7756:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7756:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7780:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7780:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7735:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7735:20:12"
																		},
																		"nativeSrc": "7735:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7735:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7725:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7725:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7331:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7376:9:12",
														"nodeType": "YulTypedName",
														"src": "7376:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7387:7:12",
														"nodeType": "YulTypedName",
														"src": "7387:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7399:6:12",
														"nodeType": "YulTypedName",
														"src": "7399:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7407:6:12",
														"nodeType": "YulTypedName",
														"src": "7407:6:12",
														"type": ""
													}
												],
												"src": "7331:474:12"
											},
											{
												"body": {
													"nativeSrc": "7876:53:12",
													"nodeType": "YulBlock",
													"src": "7876:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7893:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7893:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7916:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7916:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7898:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "7898:17:12"
																		},
																		"nativeSrc": "7898:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7898:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7886:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7886:6:12"
																},
																"nativeSrc": "7886:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7886:37:12"
															},
															"nativeSrc": "7886:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "7886:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7811:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7864:5:12",
														"nodeType": "YulTypedName",
														"src": "7864:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7871:3:12",
														"nodeType": "YulTypedName",
														"src": "7871:3:12",
														"type": ""
													}
												],
												"src": "7811:118:12"
											},
											{
												"body": {
													"nativeSrc": "8033:124:12",
													"nodeType": "YulBlock",
													"src": "8033:124:12",
													"statements": [
														{
															"nativeSrc": "8043:26:12",
															"nodeType": "YulAssignment",
															"src": "8043:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8055:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8055:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8066:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8066:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8051:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8051:3:12"
																},
																"nativeSrc": "8051:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8051:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8043:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8043:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8123:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8123:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8136:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8136:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8147:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8147:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8132:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8132:3:12"
																		},
																		"nativeSrc": "8132:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8132:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8079:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8079:43:12"
																},
																"nativeSrc": "8079:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8079:71:12"
															},
															"nativeSrc": "8079:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8079:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7935:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8005:9:12",
														"nodeType": "YulTypedName",
														"src": "8005:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8017:6:12",
														"nodeType": "YulTypedName",
														"src": "8017:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8028:4:12",
														"nodeType": "YulTypedName",
														"src": "8028:4:12",
														"type": ""
													}
												],
												"src": "7935:222:12"
											},
											{
												"body": {
													"nativeSrc": "8226:80:12",
													"nodeType": "YulBlock",
													"src": "8226:80:12",
													"statements": [
														{
															"nativeSrc": "8236:22:12",
															"nodeType": "YulAssignment",
															"src": "8236:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8251:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8251:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8245:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8245:5:12"
																},
																"nativeSrc": "8245:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8245:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8236:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8236:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8294:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8294:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8267:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "8267:26:12"
																},
																"nativeSrc": "8267:33:12",
																"nodeType": "YulFunctionCall",
																"src": "8267:33:12"
															},
															"nativeSrc": "8267:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "8267:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8163:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8204:6:12",
														"nodeType": "YulTypedName",
														"src": "8204:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8212:3:12",
														"nodeType": "YulTypedName",
														"src": "8212:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8220:5:12",
														"nodeType": "YulTypedName",
														"src": "8220:5:12",
														"type": ""
													}
												],
												"src": "8163:143:12"
											},
											{
												"body": {
													"nativeSrc": "8389:274:12",
													"nodeType": "YulBlock",
													"src": "8389:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8435:83:12",
																"nodeType": "YulBlock",
																"src": "8435:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8437:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8437:77:12"
																			},
																			"nativeSrc": "8437:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8437:79:12"
																		},
																		"nativeSrc": "8437:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8437:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8410:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8410:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8419:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8406:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8406:3:12"
																		},
																		"nativeSrc": "8406:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8406:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8431:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8431:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8402:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8402:3:12"
																},
																"nativeSrc": "8402:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8402:32:12"
															},
															"nativeSrc": "8399:119:12",
															"nodeType": "YulIf",
															"src": "8399:119:12"
														},
														{
															"nativeSrc": "8528:128:12",
															"nodeType": "YulBlock",
															"src": "8528:128:12",
															"statements": [
																{
																	"nativeSrc": "8543:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8543:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8557:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8557:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8547:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8547:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8572:74:12",
																	"nodeType": "YulAssignment",
																	"src": "8572:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8618:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8618:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8629:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8629:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8614:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8614:3:12"
																				},
																				"nativeSrc": "8614:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8614:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8638:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8638:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8582:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "8582:31:12"
																		},
																		"nativeSrc": "8582:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8582:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8572:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8572:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8312:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8359:9:12",
														"nodeType": "YulTypedName",
														"src": "8359:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8370:7:12",
														"nodeType": "YulTypedName",
														"src": "8370:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8382:6:12",
														"nodeType": "YulTypedName",
														"src": "8382:6:12",
														"type": ""
													}
												],
												"src": "8312:351:12"
											},
											{
												"body": {
													"nativeSrc": "8775:64:12",
													"nodeType": "YulBlock",
													"src": "8775:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8797:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8797:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8805:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8805:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8793:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8793:3:12"
																		},
																		"nativeSrc": "8793:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8793:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8809:22:12",
																		"nodeType": "YulLiteral",
																		"src": "8809:22:12",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8786:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8786:6:12"
																},
																"nativeSrc": "8786:46:12",
																"nodeType": "YulFunctionCall",
																"src": "8786:46:12"
															},
															"nativeSrc": "8786:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "8786:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "8669:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8767:6:12",
														"nodeType": "YulTypedName",
														"src": "8767:6:12",
														"type": ""
													}
												],
												"src": "8669:170:12"
											},
											{
												"body": {
													"nativeSrc": "8991:220:12",
													"nodeType": "YulBlock",
													"src": "8991:220:12",
													"statements": [
														{
															"nativeSrc": "9001:74:12",
															"nodeType": "YulAssignment",
															"src": "9001:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9067:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9067:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9072:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9072:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9008:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9008:58:12"
																},
																"nativeSrc": "9008:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9008:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9001:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9001:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9173:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9173:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "9084:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9084:88:12"
																},
																"nativeSrc": "9084:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9084:93:12"
															},
															"nativeSrc": "9084:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9084:93:12"
														},
														{
															"nativeSrc": "9186:19:12",
															"nodeType": "YulAssignment",
															"src": "9186:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9197:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9197:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9202:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9202:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9193:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9193:3:12"
																},
																"nativeSrc": "9193:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9193:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9186:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9186:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8845:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8979:3:12",
														"nodeType": "YulTypedName",
														"src": "8979:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8987:3:12",
														"nodeType": "YulTypedName",
														"src": "8987:3:12",
														"type": ""
													}
												],
												"src": "8845:366:12"
											},
											{
												"body": {
													"nativeSrc": "9388:248:12",
													"nodeType": "YulBlock",
													"src": "9388:248:12",
													"statements": [
														{
															"nativeSrc": "9398:26:12",
															"nodeType": "YulAssignment",
															"src": "9398:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9410:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9410:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9421:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9421:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9406:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9406:3:12"
																},
																"nativeSrc": "9406:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9406:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9398:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9398:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9445:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9445:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9456:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9456:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9441:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9441:3:12"
																		},
																		"nativeSrc": "9441:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9441:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9464:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9464:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9470:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9470:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9460:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9460:3:12"
																		},
																		"nativeSrc": "9460:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9460:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9434:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9434:6:12"
																},
																"nativeSrc": "9434:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9434:47:12"
															},
															"nativeSrc": "9434:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9434:47:12"
														},
														{
															"nativeSrc": "9490:139:12",
															"nodeType": "YulAssignment",
															"src": "9490:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9624:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9624:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9498:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9498:124:12"
																},
																"nativeSrc": "9498:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9498:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9490:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9490:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9217:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9368:9:12",
														"nodeType": "YulTypedName",
														"src": "9368:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9383:4:12",
														"nodeType": "YulTypedName",
														"src": "9383:4:12",
														"type": ""
													}
												],
												"src": "9217:419:12"
											},
											{
												"body": {
													"nativeSrc": "9670:152:12",
													"nodeType": "YulBlock",
													"src": "9670:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9687:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9687:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9690:77:12",
																		"nodeType": "YulLiteral",
																		"src": "9690:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9680:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9680:6:12"
																},
																"nativeSrc": "9680:88:12",
																"nodeType": "YulFunctionCall",
																"src": "9680:88:12"
															},
															"nativeSrc": "9680:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "9680:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9784:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9784:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9787:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9787:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9777:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9777:6:12"
																},
																"nativeSrc": "9777:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9777:15:12"
															},
															"nativeSrc": "9777:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9777:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9808:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9808:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9811:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9811:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9801:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9801:6:12"
																},
																"nativeSrc": "9801:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9801:15:12"
															},
															"nativeSrc": "9801:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9801:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9642:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9642:180:12"
											},
											{
												"body": {
													"nativeSrc": "9872:147:12",
													"nodeType": "YulBlock",
													"src": "9872:147:12",
													"statements": [
														{
															"nativeSrc": "9882:25:12",
															"nodeType": "YulAssignment",
															"src": "9882:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9905:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9905:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9887:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9887:17:12"
																},
																"nativeSrc": "9887:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9887:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9882:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9882:1:12"
																}
															]
														},
														{
															"nativeSrc": "9916:25:12",
															"nodeType": "YulAssignment",
															"src": "9916:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9921:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9921:17:12"
																},
																"nativeSrc": "9921:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9921:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9916:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9916:1:12"
																}
															]
														},
														{
															"nativeSrc": "9950:16:12",
															"nodeType": "YulAssignment",
															"src": "9950:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9961:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9961:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9964:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9964:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9957:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9957:3:12"
																},
																"nativeSrc": "9957:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9957:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9950:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9950:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9990:22:12",
																"nodeType": "YulBlock",
																"src": "9990:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9992:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9992:16:12"
																			},
																			"nativeSrc": "9992:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9992:18:12"
																		},
																		"nativeSrc": "9992:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9992:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9982:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9982:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9985:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9985:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9979:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9979:2:12"
																},
																"nativeSrc": "9979:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9979:10:12"
															},
															"nativeSrc": "9976:36:12",
															"nodeType": "YulIf",
															"src": "9976:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9828:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9859:1:12",
														"nodeType": "YulTypedName",
														"src": "9859:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9862:1:12",
														"nodeType": "YulTypedName",
														"src": "9862:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9868:3:12",
														"nodeType": "YulTypedName",
														"src": "9868:3:12",
														"type": ""
													}
												],
												"src": "9828:191:12"
											},
											{
												"body": {
													"nativeSrc": "10078:32:12",
													"nodeType": "YulBlock",
													"src": "10078:32:12",
													"statements": [
														{
															"nativeSrc": "10088:16:12",
															"nodeType": "YulAssignment",
															"src": "10088:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "10099:5:12",
																"nodeType": "YulIdentifier",
																"src": "10099:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10088:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "10088:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "10025:85:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10060:5:12",
														"nodeType": "YulTypedName",
														"src": "10060:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10070:7:12",
														"nodeType": "YulTypedName",
														"src": "10070:7:12",
														"type": ""
													}
												],
												"src": "10025:85:12"
											},
											{
												"body": {
													"nativeSrc": "10160:57:12",
													"nodeType": "YulBlock",
													"src": "10160:57:12",
													"statements": [
														{
															"nativeSrc": "10170:41:12",
															"nodeType": "YulAssignment",
															"src": "10170:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10185:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10185:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10192:18:12",
																		"nodeType": "YulLiteral",
																		"src": "10192:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10181:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10181:3:12"
																},
																"nativeSrc": "10181:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10181:30:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10170:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "10170:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "10116:101:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10142:5:12",
														"nodeType": "YulTypedName",
														"src": "10142:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10152:7:12",
														"nodeType": "YulTypedName",
														"src": "10152:7:12",
														"type": ""
													}
												],
												"src": "10116:101:12"
											},
											{
												"body": {
													"nativeSrc": "10255:28:12",
													"nodeType": "YulBlock",
													"src": "10255:28:12",
													"statements": [
														{
															"nativeSrc": "10265:12:12",
															"nodeType": "YulAssignment",
															"src": "10265:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "10272:5:12",
																"nodeType": "YulIdentifier",
																"src": "10272:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10265:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10265:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "10223:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10241:5:12",
														"nodeType": "YulTypedName",
														"src": "10241:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10251:3:12",
														"nodeType": "YulTypedName",
														"src": "10251:3:12",
														"type": ""
													}
												],
												"src": "10223:60:12"
											},
											{
												"body": {
													"nativeSrc": "10356:89:12",
													"nodeType": "YulBlock",
													"src": "10356:89:12",
													"statements": [
														{
															"nativeSrc": "10366:73:12",
															"nodeType": "YulAssignment",
															"src": "10366:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10431:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10431:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "10405:25:12",
																					"nodeType": "YulIdentifier",
																					"src": "10405:25:12"
																				},
																				"nativeSrc": "10405:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10405:32:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10396:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "10396:8:12"
																		},
																		"nativeSrc": "10396:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10396:42:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "10379:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "10379:16:12"
																},
																"nativeSrc": "10379:60:12",
																"nodeType": "YulFunctionCall",
																"src": "10379:60:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10366:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "10366:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "10289:156:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10336:5:12",
														"nodeType": "YulTypedName",
														"src": "10336:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10346:9:12",
														"nodeType": "YulTypedName",
														"src": "10346:9:12",
														"type": ""
													}
												],
												"src": "10289:156:12"
											},
											{
												"body": {
													"nativeSrc": "10523:73:12",
													"nodeType": "YulBlock",
													"src": "10523:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10540:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10540:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10583:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10583:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "10545:37:12",
																			"nodeType": "YulIdentifier",
																			"src": "10545:37:12"
																		},
																		"nativeSrc": "10545:44:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10545:44:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10533:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10533:6:12"
																},
																"nativeSrc": "10533:57:12",
																"nodeType": "YulFunctionCall",
																"src": "10533:57:12"
															},
															"nativeSrc": "10533:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "10533:57:12"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "10451:145:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10511:5:12",
														"nodeType": "YulTypedName",
														"src": "10511:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10518:3:12",
														"nodeType": "YulTypedName",
														"src": "10518:3:12",
														"type": ""
													}
												],
												"src": "10451:145:12"
											},
											{
												"body": {
													"nativeSrc": "10707:131:12",
													"nodeType": "YulBlock",
													"src": "10707:131:12",
													"statements": [
														{
															"nativeSrc": "10717:26:12",
															"nodeType": "YulAssignment",
															"src": "10717:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10729:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10729:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10740:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10740:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10725:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10725:3:12"
																},
																"nativeSrc": "10725:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10725:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10717:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10717:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10804:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10804:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10817:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10817:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10828:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10828:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10813:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10813:3:12"
																		},
																		"nativeSrc": "10813:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10813:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "10753:50:12",
																	"nodeType": "YulIdentifier",
																	"src": "10753:50:12"
																},
																"nativeSrc": "10753:78:12",
																"nodeType": "YulFunctionCall",
																"src": "10753:78:12"
															},
															"nativeSrc": "10753:78:12",
															"nodeType": "YulExpressionStatement",
															"src": "10753:78:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "10602:236:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10679:9:12",
														"nodeType": "YulTypedName",
														"src": "10679:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10691:6:12",
														"nodeType": "YulTypedName",
														"src": "10691:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10702:4:12",
														"nodeType": "YulTypedName",
														"src": "10702:4:12",
														"type": ""
													}
												],
												"src": "10602:236:12"
											},
											{
												"body": {
													"nativeSrc": "10970:206:12",
													"nodeType": "YulBlock",
													"src": "10970:206:12",
													"statements": [
														{
															"nativeSrc": "10980:26:12",
															"nodeType": "YulAssignment",
															"src": "10980:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10992:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10992:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11003:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11003:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10988:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10988:3:12"
																},
																"nativeSrc": "10988:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10988:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10980:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10980:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11060:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11060:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11073:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11073:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11084:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11084:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11069:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11069:3:12"
																		},
																		"nativeSrc": "11069:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11069:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11016:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11016:43:12"
																},
																"nativeSrc": "11016:71:12",
																"nodeType": "YulFunctionCall",
																"src": "11016:71:12"
															},
															"nativeSrc": "11016:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "11016:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11141:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11141:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11154:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11154:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11165:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11165:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11150:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11150:3:12"
																		},
																		"nativeSrc": "11150:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11150:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11097:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11097:43:12"
																},
																"nativeSrc": "11097:72:12",
																"nodeType": "YulFunctionCall",
																"src": "11097:72:12"
															},
															"nativeSrc": "11097:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "11097:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10844:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10934:9:12",
														"nodeType": "YulTypedName",
														"src": "10934:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10946:6:12",
														"nodeType": "YulTypedName",
														"src": "10946:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10954:6:12",
														"nodeType": "YulTypedName",
														"src": "10954:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10965:4:12",
														"nodeType": "YulTypedName",
														"src": "10965:4:12",
														"type": ""
													}
												],
												"src": "10844:332:12"
											},
											{
												"body": {
													"nativeSrc": "11222:76:12",
													"nodeType": "YulBlock",
													"src": "11222:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11276:16:12",
																"nodeType": "YulBlock",
																"src": "11276:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11285:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11285:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11288:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11288:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11278:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11278:6:12"
																			},
																			"nativeSrc": "11278:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11278:12:12"
																		},
																		"nativeSrc": "11278:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11278:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11245:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11245:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11267:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "11267:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11252:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "11252:14:12"
																				},
																				"nativeSrc": "11252:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11252:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11242:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11242:2:12"
																		},
																		"nativeSrc": "11242:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11242:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11235:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11235:6:12"
																},
																"nativeSrc": "11235:40:12",
																"nodeType": "YulFunctionCall",
																"src": "11235:40:12"
															},
															"nativeSrc": "11232:60:12",
															"nodeType": "YulIf",
															"src": "11232:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11182:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11215:5:12",
														"nodeType": "YulTypedName",
														"src": "11215:5:12",
														"type": ""
													}
												],
												"src": "11182:116:12"
											},
											{
												"body": {
													"nativeSrc": "11364:77:12",
													"nodeType": "YulBlock",
													"src": "11364:77:12",
													"statements": [
														{
															"nativeSrc": "11374:22:12",
															"nodeType": "YulAssignment",
															"src": "11374:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11389:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11389:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11383:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11383:5:12"
																},
																"nativeSrc": "11383:13:12",
																"nodeType": "YulFunctionCall",
																"src": "11383:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11374:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11374:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11429:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11429:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11405:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "11405:23:12"
																},
																"nativeSrc": "11405:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11405:30:12"
															},
															"nativeSrc": "11405:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11405:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11304:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11342:6:12",
														"nodeType": "YulTypedName",
														"src": "11342:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11350:3:12",
														"nodeType": "YulTypedName",
														"src": "11350:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11358:5:12",
														"nodeType": "YulTypedName",
														"src": "11358:5:12",
														"type": ""
													}
												],
												"src": "11304:137:12"
											},
											{
												"body": {
													"nativeSrc": "11521:271:12",
													"nodeType": "YulBlock",
													"src": "11521:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11567:83:12",
																"nodeType": "YulBlock",
																"src": "11567:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11569:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11569:77:12"
																			},
																			"nativeSrc": "11569:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11569:79:12"
																		},
																		"nativeSrc": "11569:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11569:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11542:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11542:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11551:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11551:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11538:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11538:3:12"
																		},
																		"nativeSrc": "11538:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11538:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11563:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11563:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11534:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11534:3:12"
																},
																"nativeSrc": "11534:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11534:32:12"
															},
															"nativeSrc": "11531:119:12",
															"nodeType": "YulIf",
															"src": "11531:119:12"
														},
														{
															"nativeSrc": "11660:125:12",
															"nodeType": "YulBlock",
															"src": "11660:125:12",
															"statements": [
																{
																	"nativeSrc": "11675:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11675:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11689:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11689:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11679:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11679:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11704:71:12",
																	"nodeType": "YulAssignment",
																	"src": "11704:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11747:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11747:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11758:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11758:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11743:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11743:3:12"
																				},
																				"nativeSrc": "11743:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11743:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11767:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11767:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11714:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "11714:28:12"
																		},
																		"nativeSrc": "11714:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11714:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11704:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11704:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11447:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11491:9:12",
														"nodeType": "YulTypedName",
														"src": "11491:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11502:7:12",
														"nodeType": "YulTypedName",
														"src": "11502:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11514:6:12",
														"nodeType": "YulTypedName",
														"src": "11514:6:12",
														"type": ""
													}
												],
												"src": "11447:345:12"
											},
											{
												"body": {
													"nativeSrc": "11843:149:12",
													"nodeType": "YulBlock",
													"src": "11843:149:12",
													"statements": [
														{
															"nativeSrc": "11853:25:12",
															"nodeType": "YulAssignment",
															"src": "11853:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11876:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11876:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11858:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11858:17:12"
																},
																"nativeSrc": "11858:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11858:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11853:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11853:1:12"
																}
															]
														},
														{
															"nativeSrc": "11887:25:12",
															"nodeType": "YulAssignment",
															"src": "11887:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11910:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11910:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11892:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11892:17:12"
																},
																"nativeSrc": "11892:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11892:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11887:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11887:1:12"
																}
															]
														},
														{
															"nativeSrc": "11921:17:12",
															"nodeType": "YulAssignment",
															"src": "11921:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11933:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11933:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11936:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11936:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11929:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11929:3:12"
																},
																"nativeSrc": "11929:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11929:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11921:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11921:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11963:22:12",
																"nodeType": "YulBlock",
																"src": "11963:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11965:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11965:16:12"
																			},
																			"nativeSrc": "11965:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11965:18:12"
																		},
																		"nativeSrc": "11965:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11965:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11954:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11954:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11960:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11960:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11951:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11951:2:12"
																},
																"nativeSrc": "11951:11:12",
																"nodeType": "YulFunctionCall",
																"src": "11951:11:12"
															},
															"nativeSrc": "11948:37:12",
															"nodeType": "YulIf",
															"src": "11948:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11798:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11829:1:12",
														"nodeType": "YulTypedName",
														"src": "11829:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11832:1:12",
														"nodeType": "YulTypedName",
														"src": "11832:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11838:4:12",
														"nodeType": "YulTypedName",
														"src": "11838:4:12",
														"type": ""
													}
												],
												"src": "11798:194:12"
											},
											{
												"body": {
													"nativeSrc": "12041:79:12",
													"nodeType": "YulBlock",
													"src": "12041:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12098:16:12",
																"nodeType": "YulBlock",
																"src": "12098:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12107:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12107:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12110:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12110:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12100:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12100:6:12"
																			},
																			"nativeSrc": "12100:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12100:12:12"
																		},
																		"nativeSrc": "12100:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12100:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12064:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12064:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12089:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "12089:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "12071:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "12071:17:12"
																				},
																				"nativeSrc": "12071:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12071:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12061:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "12061:2:12"
																		},
																		"nativeSrc": "12061:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12061:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12054:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12054:6:12"
																},
																"nativeSrc": "12054:43:12",
																"nodeType": "YulFunctionCall",
																"src": "12054:43:12"
															},
															"nativeSrc": "12051:63:12",
															"nodeType": "YulIf",
															"src": "12051:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "11998:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12034:5:12",
														"nodeType": "YulTypedName",
														"src": "12034:5:12",
														"type": ""
													}
												],
												"src": "11998:122:12"
											},
											{
												"body": {
													"nativeSrc": "12189:80:12",
													"nodeType": "YulBlock",
													"src": "12189:80:12",
													"statements": [
														{
															"nativeSrc": "12199:22:12",
															"nodeType": "YulAssignment",
															"src": "12199:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12214:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12214:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12208:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12208:5:12"
																},
																"nativeSrc": "12208:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12208:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12199:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12199:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12257:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12257:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "12230:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "12230:26:12"
																},
																"nativeSrc": "12230:33:12",
																"nodeType": "YulFunctionCall",
																"src": "12230:33:12"
															},
															"nativeSrc": "12230:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "12230:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "12126:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12167:6:12",
														"nodeType": "YulTypedName",
														"src": "12167:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12175:3:12",
														"nodeType": "YulTypedName",
														"src": "12175:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12183:5:12",
														"nodeType": "YulTypedName",
														"src": "12183:5:12",
														"type": ""
													}
												],
												"src": "12126:143:12"
											},
											{
												"body": {
													"nativeSrc": "12352:274:12",
													"nodeType": "YulBlock",
													"src": "12352:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12398:83:12",
																"nodeType": "YulBlock",
																"src": "12398:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12400:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "12400:77:12"
																			},
																			"nativeSrc": "12400:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12400:79:12"
																		},
																		"nativeSrc": "12400:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12400:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12373:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12373:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12382:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12382:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12369:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12369:3:12"
																		},
																		"nativeSrc": "12369:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12369:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12394:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12394:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12365:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12365:3:12"
																},
																"nativeSrc": "12365:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12365:32:12"
															},
															"nativeSrc": "12362:119:12",
															"nodeType": "YulIf",
															"src": "12362:119:12"
														},
														{
															"nativeSrc": "12491:128:12",
															"nodeType": "YulBlock",
															"src": "12491:128:12",
															"statements": [
																{
																	"nativeSrc": "12506:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12506:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12520:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12520:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12510:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12510:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12535:74:12",
																	"nodeType": "YulAssignment",
																	"src": "12535:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12581:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12581:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12592:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12592:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12577:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12577:3:12"
																				},
																				"nativeSrc": "12577:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12577:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12601:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12601:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "12545:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "12545:31:12"
																		},
																		"nativeSrc": "12545:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12545:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12535:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12535:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "12275:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12322:9:12",
														"nodeType": "YulTypedName",
														"src": "12322:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12333:7:12",
														"nodeType": "YulTypedName",
														"src": "12333:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12345:6:12",
														"nodeType": "YulTypedName",
														"src": "12345:6:12",
														"type": ""
													}
												],
												"src": "12275:351:12"
											},
											{
												"body": {
													"nativeSrc": "12690:40:12",
													"nodeType": "YulBlock",
													"src": "12690:40:12",
													"statements": [
														{
															"nativeSrc": "12701:22:12",
															"nodeType": "YulAssignment",
															"src": "12701:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12717:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12717:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12711:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12711:5:12"
																},
																"nativeSrc": "12711:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12711:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12701:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12701:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12632:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12673:5:12",
														"nodeType": "YulTypedName",
														"src": "12673:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12683:6:12",
														"nodeType": "YulTypedName",
														"src": "12683:6:12",
														"type": ""
													}
												],
												"src": "12632:98:12"
											},
											{
												"body": {
													"nativeSrc": "12849:34:12",
													"nodeType": "YulBlock",
													"src": "12849:34:12",
													"statements": [
														{
															"nativeSrc": "12859:18:12",
															"nodeType": "YulAssignment",
															"src": "12859:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "12874:3:12",
																"nodeType": "YulIdentifier",
																"src": "12874:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12859:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "12859:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12736:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12821:3:12",
														"nodeType": "YulTypedName",
														"src": "12821:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12826:6:12",
														"nodeType": "YulTypedName",
														"src": "12826:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12837:11:12",
														"nodeType": "YulTypedName",
														"src": "12837:11:12",
														"type": ""
													}
												],
												"src": "12736:147:12"
											},
											{
												"body": {
													"nativeSrc": "12997:278:12",
													"nodeType": "YulBlock",
													"src": "12997:278:12",
													"statements": [
														{
															"nativeSrc": "13007:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13007:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13053:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13053:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "13021:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "13021:31:12"
																},
																"nativeSrc": "13021:38:12",
																"nodeType": "YulFunctionCall",
																"src": "13021:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13011:6:12",
																	"nodeType": "YulTypedName",
																	"src": "13011:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13068:95:12",
															"nodeType": "YulAssignment",
															"src": "13068:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13151:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13151:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13156:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13156:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13075:75:12",
																	"nodeType": "YulIdentifier",
																	"src": "13075:75:12"
																},
																"nativeSrc": "13075:88:12",
																"nodeType": "YulFunctionCall",
																"src": "13075:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13068:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13068:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13211:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13211:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13218:4:12",
																				"nodeType": "YulLiteral",
																				"src": "13218:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13207:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13207:3:12"
																		},
																		"nativeSrc": "13207:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13207:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13225:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13225:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13230:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13230:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13172:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "13172:34:12"
																},
																"nativeSrc": "13172:65:12",
																"nodeType": "YulFunctionCall",
																"src": "13172:65:12"
															},
															"nativeSrc": "13172:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "13172:65:12"
														},
														{
															"nativeSrc": "13246:23:12",
															"nodeType": "YulAssignment",
															"src": "13246:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13257:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13257:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13262:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13262:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13253:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13253:3:12"
																},
																"nativeSrc": "13253:16:12",
																"nodeType": "YulFunctionCall",
																"src": "13253:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13246:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13246:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12889:386:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12978:5:12",
														"nodeType": "YulTypedName",
														"src": "12978:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12985:3:12",
														"nodeType": "YulTypedName",
														"src": "12985:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12993:3:12",
														"nodeType": "YulTypedName",
														"src": "12993:3:12",
														"type": ""
													}
												],
												"src": "12889:386:12"
											},
											{
												"body": {
													"nativeSrc": "13415:137:12",
													"nodeType": "YulBlock",
													"src": "13415:137:12",
													"statements": [
														{
															"nativeSrc": "13426:100:12",
															"nodeType": "YulAssignment",
															"src": "13426:100:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13513:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13513:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13522:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13522:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13433:79:12",
																	"nodeType": "YulIdentifier",
																	"src": "13433:79:12"
																},
																"nativeSrc": "13433:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13433:93:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13426:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13426:3:12"
																}
															]
														},
														{
															"nativeSrc": "13536:10:12",
															"nodeType": "YulAssignment",
															"src": "13536:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "13543:3:12",
																"nodeType": "YulIdentifier",
																"src": "13543:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13536:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13536:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13281:271:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13394:3:12",
														"nodeType": "YulTypedName",
														"src": "13394:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13400:6:12",
														"nodeType": "YulTypedName",
														"src": "13400:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13411:3:12",
														"nodeType": "YulTypedName",
														"src": "13411:3:12",
														"type": ""
													}
												],
												"src": "13281:271:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 3022
									},
									{
										"length": 32,
										"start": 3107
									},
									{
										"length": 32,
										"start": 3549
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100c1575f3560e01c80638129fc1c1161007e578063ad3cb1cc11610058578063ad3cb1cc146101df578063f2fde38b14610209578063f3fef3a314610231578063f7888aec14610259576100c1565b80638129fc1c146101895780638456cb591461019f5780638da5cb5b146101b5576100c1565b80633f4ba83a146100c557806347e7ef24146100db5780634f1ef2861461010357806352d1902d1461011f5780635c975abb14610149578063715018a614610173575b5f80fd5b3480156100d0575f80fd5b506100d9610295565b005b3480156100e6575f80fd5b5061010160048036038101906100fc91906115a3565b6102a7565b005b61011d6004803603810190610118919061171d565b610457565b005b34801561012a575f80fd5b50610133610476565b604051610140919061178f565b60405180910390f35b348015610154575f80fd5b5061015d6104a7565b60405161016a91906117c2565b60405180910390f35b34801561017e575f80fd5b506101876104c9565b005b348015610194575f80fd5b5061019d6104dc565b005b3480156101aa575f80fd5b506101b361066c565b005b3480156101c0575f80fd5b506101c961067e565b6040516101d691906117ea565b60405180910390f35b3480156101ea575f80fd5b506101f36106b3565b604051610200919061187d565b60405180910390f35b348015610214575f80fd5b5061022f600480360381019061022a919061189d565b6106ec565b005b34801561023c575f80fd5b50610257600480360381019061025291906115a3565b610770565b005b348015610264575f80fd5b5061027f600480360381019061027a91906118c8565b610a56565b60405161028c9190611915565b60405180910390f35b61029d610ad7565b6102a5610b5e565b565b808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102e191906117ea565b602060405180830381865afa1580156102fc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103209190611942565b1015610361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610358906119b7565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103e79190611a02565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f4955178360405161044b9190611915565b60405180910390a35050565b61045f610bcc565b61046882610cb2565b6104728282610cbd565b5050565b5f61047f610ddb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f806104b1610e62565b9050805f015f9054906101000a900460ff1691505090565b6104d1610ad7565b6104da5f610e89565b565b5f6104e5610f5a565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561052d5750825b90505f60018367ffffffffffffffff1614801561056057505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561056e575080155b156105a5576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156105f2576001855f0160086101000a81548160ff0219169083151502179055505b6105fa610f81565b61060333610f93565b61060b610fa7565b8315610665575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161065c9190611a8a565b60405180910390a15b5050505050565b610674610ad7565b61067c610fb1565b565b5f80610688611020565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6106f4610ad7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610764575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161075b91906117ea565b60405180910390fd5b61076d81610e89565b50565b808273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107aa91906117ea565b602060405180830381865afa1580156107c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107e99190611942565b101561082a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610821906119b7565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db906119b7565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161091f929190611aa3565b6020604051808303815f875af115801561093b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061095f9190611af4565b50805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109e69190611b1f565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a483604051610a4a9190611915565b60405180910390a35050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610adf611047565b73ffffffffffffffffffffffffffffffffffffffff16610afd61067e565b73ffffffffffffffffffffffffffffffffffffffff1614610b5c57610b20611047565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b5391906117ea565b60405180910390fd5b565b610b6661104e565b5f610b6f610e62565b90505f815f015f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610bb4611047565b604051610bc191906117ea565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610c7957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c6061108e565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610cb0576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610cba610ad7565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d2557506040513d601f19601f82011682018060405250810190610d229190611b7c565b60015b610d6657816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610d5d91906117ea565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114610dcc57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610dc3919061178f565b60405180910390fd5b610dd683836110e1565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610e60576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b5f610e92611020565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610f89611153565b610f91611193565b565b610f9b611153565b610fa4816111c3565b50565b610faf611153565b565b610fb9611247565b5f610fc2610e62565b90506001815f015f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611008611047565b60405161101591906117ea565b60405180910390a150565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f33905090565b6110566104a7565b61108c576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6110ba7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611288565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110ea82611291565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111561114657611140828261135a565b5061114f565b61114e6113da565b5b5050565b61115b611416565b611191576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61119b611153565b5f6111a4610e62565b90505f815f015f6101000a81548160ff02191690831515021790555050565b6111cb611153565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361123b575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161123291906117ea565b60405180910390fd5b61124481610e89565b50565b61124f6104a7565b15611286576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036112ec57806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016112e391906117ea565b60405180910390fd5b806113187f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611288565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516113839190611beb565b5f60405180830381855af49150503d805f81146113bb576040519150601f19603f3d011682016040523d82523d5f602084013e6113c0565b606091505b50915091506113d0858383611434565b9250505092915050565b5f341115611414576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61141f610f5a565b5f0160089054906101000a900460ff16905090565b60608261144957611444826114c1565b6114b9565b5f825114801561146f57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156114b157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016114a891906117ea565b60405180910390fd5b8190506114ba565b5b9392505050565b5f815111156114d35780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61153f82611516565b9050919050565b61154f81611535565b8114611559575f80fd5b50565b5f8135905061156a81611546565b92915050565b5f819050919050565b61158281611570565b811461158c575f80fd5b50565b5f8135905061159d81611579565b92915050565b5f80604083850312156115b9576115b861150e565b5b5f6115c68582860161155c565b92505060206115d78582860161158f565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61162f826115e9565b810181811067ffffffffffffffff8211171561164e5761164d6115f9565b5b80604052505050565b5f611660611505565b905061166c8282611626565b919050565b5f67ffffffffffffffff82111561168b5761168a6115f9565b5b611694826115e9565b9050602081019050919050565b828183375f83830152505050565b5f6116c16116bc84611671565b611657565b9050828152602081018484840111156116dd576116dc6115e5565b5b6116e88482856116a1565b509392505050565b5f82601f830112611704576117036115e1565b5b81356117148482602086016116af565b91505092915050565b5f80604083850312156117335761173261150e565b5b5f6117408582860161155c565b925050602083013567ffffffffffffffff81111561176157611760611512565b5b61176d858286016116f0565b9150509250929050565b5f819050919050565b61178981611777565b82525050565b5f6020820190506117a25f830184611780565b92915050565b5f8115159050919050565b6117bc816117a8565b82525050565b5f6020820190506117d55f8301846117b3565b92915050565b6117e481611535565b82525050565b5f6020820190506117fd5f8301846117db565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561183a57808201518184015260208101905061181f565b5f8484015250505050565b5f61184f82611803565b611859818561180d565b935061186981856020860161181d565b611872816115e9565b840191505092915050565b5f6020820190508181035f8301526118958184611845565b905092915050565b5f602082840312156118b2576118b161150e565b5b5f6118bf8482850161155c565b91505092915050565b5f80604083850312156118de576118dd61150e565b5b5f6118eb8582860161155c565b92505060206118fc8582860161155c565b9150509250929050565b61190f81611570565b82525050565b5f6020820190506119285f830184611906565b92915050565b5f8151905061193c81611579565b92915050565b5f602082840312156119575761195661150e565b5b5f6119648482850161192e565b91505092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6119a160148361180d565b91506119ac8261196d565b602082019050919050565b5f6020820190508181035f8301526119ce81611995565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a0c82611570565b9150611a1783611570565b9250828201905080821115611a2f57611a2e6119d5565b5b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f611a74611a6f611a6a84611a35565b611a51565b611a3e565b9050919050565b611a8481611a5a565b82525050565b5f602082019050611a9d5f830184611a7b565b92915050565b5f604082019050611ab65f8301856117db565b611ac36020830184611906565b9392505050565b611ad3816117a8565b8114611add575f80fd5b50565b5f81519050611aee81611aca565b92915050565b5f60208284031215611b0957611b0861150e565b5b5f611b1684828501611ae0565b91505092915050565b5f611b2982611570565b9150611b3483611570565b9250828203905081811115611b4c57611b4b6119d5565b5b92915050565b611b5b81611777565b8114611b65575f80fd5b50565b5f81519050611b7681611b52565b92915050565b5f60208284031215611b9157611b9061150e565b5b5f611b9e84828501611b68565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611bc582611ba7565b611bcf8185611bb1565b9350611bdf81856020860161181d565b80840191505092915050565b5f611bf68284611bbb565b91508190509291505056fea2646970667358221220fd8f775608db2ab13067eb08f785e8341875e97808d2a4f0794ed447ef81df4f64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8129FC1C GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x259 JUMPI PUSH2 0xC1 JUMP JUMPDEST DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B5 JUMPI PUSH2 0xC1 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0x295 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x4C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x4DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x66C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0xB5E JUMP JUMPDEST JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1942 JUMP JUMPDEST LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 DUP4 PUSH1 0x40 MLOAD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x45F PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x468 DUP3 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x472 DUP3 DUP3 PUSH2 0xCBD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47F PUSH2 0xDDB JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4B1 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x4D1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x4DA PUSH0 PUSH2 0xE89 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x4E5 PUSH2 0xF5A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x52D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x560 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x56E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x5FA PUSH2 0xF81 JUMP JUMPDEST PUSH2 0x603 CALLER PUSH2 0xF93 JUMP JUMPDEST PUSH2 0x60B PUSH2 0xFA7 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x665 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x674 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x67C PUSH2 0xFB1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x688 PUSH2 0x1020 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x6F4 PUSH2 0xAD7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x764 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76D DUP2 PUSH2 0xE89 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AA SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x1942 JUMP JUMPDEST LT ISZERO PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91F SWAP3 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST POP DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9E6 SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6337ED398C0E8467698C581374FDCE4DB14922DF487B5A39483079F5F59B60A4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADF PUSH2 0x1047 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAFD PUSH2 0x67E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5C JUMPI PUSH2 0xB20 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB66 PUSH2 0x104E JUMP JUMPDEST PUSH0 PUSH2 0xB6F PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBB4 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC1 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC79 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC60 PUSH2 0x108E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xCBA PUSH2 0xAD7 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD25 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD66 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xDCC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD6 DUP4 DUP4 PUSH2 0x10E1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE60 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xE92 PUSH2 0x1020 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF89 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0xF91 PUSH2 0x1193 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF9B PUSH2 0x1153 JUMP JUMPDEST PUSH2 0xFA4 DUP2 PUSH2 0x11C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFAF PUSH2 0x1153 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFB9 PUSH2 0x1247 JUMP JUMPDEST PUSH0 PUSH2 0xFC2 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1008 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1015 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1056 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x10BA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1288 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10EA DUP3 PUSH2 0x1291 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1146 JUMPI PUSH2 0x1140 DUP3 DUP3 PUSH2 0x135A JUMP JUMPDEST POP PUSH2 0x114F JUMP JUMPDEST PUSH2 0x114E PUSH2 0x13DA JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x115B PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x1191 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x119B PUSH2 0x1153 JUMP JUMPDEST PUSH0 PUSH2 0x11A4 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x11CB PUSH2 0x1153 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1244 DUP2 PUSH2 0xE89 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x124F PUSH2 0x4A7 JUMP JUMPDEST ISZERO PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x12EC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E3 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1318 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1288 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13D0 DUP6 DUP4 DUP4 PUSH2 0x1434 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1414 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x141F PUSH2 0xF5A JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1449 JUMPI PUSH2 0x1444 DUP3 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x14B9 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x146F JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x14B1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x14BA JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x14D3 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x153F DUP3 PUSH2 0x1516 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x154F DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP2 EQ PUSH2 0x1559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156A DUP2 PUSH2 0x1546 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1582 DUP2 PUSH2 0x1570 JUMP JUMPDEST DUP2 EQ PUSH2 0x158C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x159D DUP2 PUSH2 0x1579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B9 JUMPI PUSH2 0x15B8 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15C6 DUP6 DUP3 DUP7 ADD PUSH2 0x155C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15D7 DUP6 DUP3 DUP7 ADD PUSH2 0x158F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x162F DUP3 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x164E JUMPI PUSH2 0x164D PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1660 PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP PUSH2 0x166C DUP3 DUP3 PUSH2 0x1626 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x168B JUMPI PUSH2 0x168A PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST PUSH2 0x1694 DUP3 PUSH2 0x15E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C1 PUSH2 0x16BC DUP5 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x15E5 JUMP JUMPDEST JUMPDEST PUSH2 0x16E8 DUP5 DUP3 DUP6 PUSH2 0x16A1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1704 JUMPI PUSH2 0x1703 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1714 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1740 DUP6 DUP3 DUP7 ADD PUSH2 0x155C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH2 0x176D DUP6 DUP3 DUP7 ADD PUSH2 0x16F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1789 DUP2 PUSH2 0x1777 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BC DUP2 PUSH2 0x17A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x17B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E4 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17FD PUSH0 DUP4 ADD DUP5 PUSH2 0x17DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x183A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x181F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x184F DUP3 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x1859 DUP2 DUP6 PUSH2 0x180D JUMP JUMPDEST SWAP4 POP PUSH2 0x1869 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1872 DUP2 PUSH2 0x15E9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1895 DUP2 DUP5 PUSH2 0x1845 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x18B1 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18BF DUP5 DUP3 DUP6 ADD PUSH2 0x155C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18EB DUP6 DUP3 DUP7 ADD PUSH2 0x155C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18FC DUP6 DUP3 DUP7 ADD PUSH2 0x155C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x190F DUP2 PUSH2 0x1570 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1928 PUSH0 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x193C DUP2 PUSH2 0x1579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH2 0x1956 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1964 DUP5 DUP3 DUP6 ADD PUSH2 0x192E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19A1 PUSH1 0x14 DUP4 PUSH2 0x180D JUMP JUMPDEST SWAP2 POP PUSH2 0x19AC DUP3 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19CE DUP2 PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A0C DUP3 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A17 DUP4 PUSH2 0x1570 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A2F JUMPI PUSH2 0x1A2E PUSH2 0x19D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A74 PUSH2 0x1A6F PUSH2 0x1A6A DUP5 PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A84 DUP2 PUSH2 0x1A5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9D PUSH0 DUP4 ADD DUP5 PUSH2 0x1A7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AB6 PUSH0 DUP4 ADD DUP6 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x1AC3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1AD3 DUP2 PUSH2 0x17A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ADD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AEE DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B09 JUMPI PUSH2 0x1B08 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B16 DUP5 DUP3 DUP6 ADD PUSH2 0x1AE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B29 DUP3 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B34 DUP4 PUSH2 0x1570 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B4C JUMPI PUSH2 0x1B4B PUSH2 0x19D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5B DUP2 PUSH2 0x1777 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B65 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B76 DUP2 PUSH2 0x1B52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B9E DUP5 DUP3 DUP6 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC5 DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH2 0x1BCF DUP2 DUP6 PUSH2 0x1BB1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BDF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x181D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF6 DUP3 DUP5 PUSH2 0x1BBB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DUP16 PUSH24 0x5608DB2AB13067EB08F785E8341875E97808D2A4F0794ED4 SELFBALANCE 0xEF DUP2 0xDF 0x4F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "487:1893:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:65;;;;;;;;;;;;;:::i;:::-;;1136:416;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4158:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2692:145:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;979:149:11;;;;;;;;;;;;;:::i;:::-;;2119:61;;;;;;;;;;;;;:::i;:::-;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1560:410:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1978:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2188:65;2334:13:0;:11;:13::i;:::-;2235:10:11::1;:8;:10::i;:::-;2188:65::o:0;1136:416::-;1251:6;1219:5;1212:23;;;1236:10;1212:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;1204:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1480:6;1449:8;:20;1458:10;1449:20;;;;;;;;;;;;;;;:27;1470:5;1449:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1525:10;1502:42;;1518:5;1502:42;;;1537:6;1502:42;;;;;;:::i;:::-;;;;;;;;1136:416;;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;1327:66:6::1;3800:32:2;;3793:39;;3705:134:::0;:::o;2692:145:4:-;2739:4;2755:25;2783:21;:19;:21::i;:::-;2755:49;;2821:1;:9;;;;;;;;;;;;2814:16;;;2692:145;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;979:149:11:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1031:17:11::1;:15;:17::i;:::-;1059:26;1074:10;1059:14;:26::i;:::-;1096:24;:22;:24::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;979:149:11:o;2119:61::-;2334:13:0;:11;:13::i;:::-;2164:8:11::1;:6;:8::i;:::-;2119:61::o:0;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1560:410:11:-;1679:6;1644:5;1637:23;;;1669:4;1637:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;1629:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1760:6;1729:8;:20;1738:10;1729:20;;;;;;;;;;;;;;;:27;1750:5;1729:27;;;;;;;;;;;;;;;;:37;;1721:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1819:5;1812:22;;;1835:10;1847:6;1812:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1896:6;1865:8;:20;1874:10;1865:20;;;;;;;;;;;;;;;:27;1886:5;1865:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1943:10;1920:42;;1936:5;1920:42;;;1955:6;1920:42;;;;;;:::i;:::-;;;;;;;;1560:410;;:::o;1978:133::-;2052:7;2079:8;:17;2088:7;2079:17;;;;;;;;;;;;;;;:24;2097:5;2079:24;;;;;;;;;;;;;;;;2072:31;;1978:133;;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3674:178:4:-;2563:16;:14;:16::i;:::-;3732:25:::1;3760:21;:19;:21::i;:::-;3732:49;;3803:5;3791:1;:9;;;:17;;;;;;;;;;;;;;;;;;3823:22;3832:12;:10;:12::i;:::-;3823:22;;;;;;:::i;:::-;;;;;;;;3722:130;3674:178::o:0;4599:312:2:-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;2261:116:11:-;2334:13:0;:11;:13::i;:::-;2261:116:11;:::o;6052:538:2:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:6;6253:32:2;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;1147:162:4:-;1200:25;1270:23;1260:33;;1147:162;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1836:97:4:-;6931:20:1;:18;:20::i;:::-;1899:27:4::1;:25;:27::i;:::-;1836:97::o:0;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2968:67:2:-;6931:20:1;:18;:20::i;:::-;2968:67:2:o;3366:176:4:-;2316:19;:17;:19::i;:::-;3425:25:::1;3453:21;:19;:21::i;:::-;3425:49;;3496:4;3484:1;:9;;;:16;;;;;;;;;;;;;;;;;;3515:20;3522:12;:10;:12::i;:::-;3515:20;;;;;;:::i;:::-;;;;;;;;3415:127;3366:176::o:0;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;3105:126:4:-;3168:8;:6;:8::i;:::-;3163:62;;3199:15;;;;;;;;;;;;;;3163:62;3105:126::o;1957:138:6:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1939:156:4:-;6931:20:1;:18;:20::i;:::-;2012:25:4::1;2040:21;:19;:21::i;:::-;2012:49;;2083:5;2071:1;:9;;;:17;;;;;;;;;;;;;;;;;;2002:93;1939:156::o:0;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2905:128:4:-;2970:8;:6;:8::i;:::-;2966:61;;;3001:15;;;;;;;;;;;;;;2966:61;2905:128::o;1684:190:10:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:6:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:9:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:6:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4625:582:9:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:117::-;1786:1;1783;1776:12;1800:117;1909:1;1906;1899:12;1923:102;1964:6;2015:2;2011:7;2006:2;1999:5;1995:14;1991:28;1981:38;;1923:102;;;:::o;2031:180::-;2079:77;2076:1;2069:88;2176:4;2173:1;2166:15;2200:4;2197:1;2190:15;2217:281;2300:27;2322:4;2300:27;:::i;:::-;2292:6;2288:40;2430:6;2418:10;2415:22;2394:18;2382:10;2379:34;2376:62;2373:88;;;2441:18;;:::i;:::-;2373:88;2481:10;2477:2;2470:22;2260:238;2217:281;;:::o;2504:129::-;2538:6;2565:20;;:::i;:::-;2555:30;;2594:33;2622:4;2614:6;2594:33;:::i;:::-;2504:129;;;:::o;2639:307::-;2700:4;2790:18;2782:6;2779:30;2776:56;;;2812:18;;:::i;:::-;2776:56;2850:29;2872:6;2850:29;:::i;:::-;2842:37;;2934:4;2928;2924:15;2916:23;;2639:307;;;:::o;2952:146::-;3049:6;3044:3;3039;3026:30;3090:1;3081:6;3076:3;3072:16;3065:27;2952:146;;;:::o;3104:423::-;3181:5;3206:65;3222:48;3263:6;3222:48;:::i;:::-;3206:65;:::i;:::-;3197:74;;3294:6;3287:5;3280:21;3332:4;3325:5;3321:16;3370:3;3361:6;3356:3;3352:16;3349:25;3346:112;;;3377:79;;:::i;:::-;3346:112;3467:54;3514:6;3509:3;3504;3467:54;:::i;:::-;3187:340;3104:423;;;;;:::o;3546:338::-;3601:5;3650:3;3643:4;3635:6;3631:17;3627:27;3617:122;;3658:79;;:::i;:::-;3617:122;3775:6;3762:20;3800:78;3874:3;3866:6;3859:4;3851:6;3847:17;3800:78;:::i;:::-;3791:87;;3607:277;3546:338;;;;:::o;3890:652::-;3967:6;3975;4024:2;4012:9;4003:7;3999:23;3995:32;3992:119;;;4030:79;;:::i;:::-;3992:119;4150:1;4175:53;4220:7;4211:6;4200:9;4196:22;4175:53;:::i;:::-;4165:63;;4121:117;4305:2;4294:9;4290:18;4277:32;4336:18;4328:6;4325:30;4322:117;;;4358:79;;:::i;:::-;4322:117;4463:62;4517:7;4508:6;4497:9;4493:22;4463:62;:::i;:::-;4453:72;;4248:287;3890:652;;;;;:::o;4548:77::-;4585:7;4614:5;4603:16;;4548:77;;;:::o;4631:118::-;4718:24;4736:5;4718:24;:::i;:::-;4713:3;4706:37;4631:118;;:::o;4755:222::-;4848:4;4886:2;4875:9;4871:18;4863:26;;4899:71;4967:1;4956:9;4952:17;4943:6;4899:71;:::i;:::-;4755:222;;;;:::o;4983:90::-;5017:7;5060:5;5053:13;5046:21;5035:32;;4983:90;;;:::o;5079:109::-;5160:21;5175:5;5160:21;:::i;:::-;5155:3;5148:34;5079:109;;:::o;5194:210::-;5281:4;5319:2;5308:9;5304:18;5296:26;;5332:65;5394:1;5383:9;5379:17;5370:6;5332:65;:::i;:::-;5194:210;;;;:::o;5410:118::-;5497:24;5515:5;5497:24;:::i;:::-;5492:3;5485:37;5410:118;;:::o;5534:222::-;5627:4;5665:2;5654:9;5650:18;5642:26;;5678:71;5746:1;5735:9;5731:17;5722:6;5678:71;:::i;:::-;5534:222;;;;:::o;5762:99::-;5814:6;5848:5;5842:12;5832:22;;5762:99;;;:::o;5867:169::-;5951:11;5985:6;5980:3;5973:19;6025:4;6020:3;6016:14;6001:29;;5867:169;;;;:::o;6042:246::-;6123:1;6133:113;6147:6;6144:1;6141:13;6133:113;;;6232:1;6227:3;6223:11;6217:18;6213:1;6208:3;6204:11;6197:39;6169:2;6166:1;6162:10;6157:15;;6133:113;;;6280:1;6271:6;6266:3;6262:16;6255:27;6104:184;6042:246;;;:::o;6294:377::-;6382:3;6410:39;6443:5;6410:39;:::i;:::-;6465:71;6529:6;6524:3;6465:71;:::i;:::-;6458:78;;6545:65;6603:6;6598:3;6591:4;6584:5;6580:16;6545:65;:::i;:::-;6635:29;6657:6;6635:29;:::i;:::-;6630:3;6626:39;6619:46;;6386:285;6294:377;;;;:::o;6677:313::-;6790:4;6828:2;6817:9;6813:18;6805:26;;6877:9;6871:4;6867:20;6863:1;6852:9;6848:17;6841:47;6905:78;6978:4;6969:6;6905:78;:::i;:::-;6897:86;;6677:313;;;;:::o;6996:329::-;7055:6;7104:2;7092:9;7083:7;7079:23;7075:32;7072:119;;;7110:79;;:::i;:::-;7072:119;7230:1;7255:53;7300:7;7291:6;7280:9;7276:22;7255:53;:::i;:::-;7245:63;;7201:117;6996:329;;;;:::o;7331:474::-;7399:6;7407;7456:2;7444:9;7435:7;7431:23;7427:32;7424:119;;;7462:79;;:::i;:::-;7424:119;7582:1;7607:53;7652:7;7643:6;7632:9;7628:22;7607:53;:::i;:::-;7597:63;;7553:117;7709:2;7735:53;7780:7;7771:6;7760:9;7756:22;7735:53;:::i;:::-;7725:63;;7680:118;7331:474;;;;;:::o;7811:118::-;7898:24;7916:5;7898:24;:::i;:::-;7893:3;7886:37;7811:118;;:::o;7935:222::-;8028:4;8066:2;8055:9;8051:18;8043:26;;8079:71;8147:1;8136:9;8132:17;8123:6;8079:71;:::i;:::-;7935:222;;;;:::o;8163:143::-;8220:5;8251:6;8245:13;8236:22;;8267:33;8294:5;8267:33;:::i;:::-;8163:143;;;;:::o;8312:351::-;8382:6;8431:2;8419:9;8410:7;8406:23;8402:32;8399:119;;;8437:79;;:::i;:::-;8399:119;8557:1;8582:64;8638:7;8629:6;8618:9;8614:22;8582:64;:::i;:::-;8572:74;;8528:128;8312:351;;;;:::o;8669:170::-;8809:22;8805:1;8797:6;8793:14;8786:46;8669:170;:::o;8845:366::-;8987:3;9008:67;9072:2;9067:3;9008:67;:::i;:::-;9001:74;;9084:93;9173:3;9084:93;:::i;:::-;9202:2;9197:3;9193:12;9186:19;;8845:366;;;:::o;9217:419::-;9383:4;9421:2;9410:9;9406:18;9398:26;;9470:9;9464:4;9460:20;9456:1;9445:9;9441:17;9434:47;9498:131;9624:4;9498:131;:::i;:::-;9490:139;;9217:419;;;:::o;9642:180::-;9690:77;9687:1;9680:88;9787:4;9784:1;9777:15;9811:4;9808:1;9801:15;9828:191;9868:3;9887:20;9905:1;9887:20;:::i;:::-;9882:25;;9921:20;9939:1;9921:20;:::i;:::-;9916:25;;9964:1;9961;9957:9;9950:16;;9985:3;9982:1;9979:10;9976:36;;;9992:18;;:::i;:::-;9976:36;9828:191;;;;:::o;10025:85::-;10070:7;10099:5;10088:16;;10025:85;;;:::o;10116:101::-;10152:7;10192:18;10185:5;10181:30;10170:41;;10116:101;;;:::o;10223:60::-;10251:3;10272:5;10265:12;;10223:60;;;:::o;10289:156::-;10346:9;10379:60;10396:42;10405:32;10431:5;10405:32;:::i;:::-;10396:42;:::i;:::-;10379:60;:::i;:::-;10366:73;;10289:156;;;:::o;10451:145::-;10545:44;10583:5;10545:44;:::i;:::-;10540:3;10533:57;10451:145;;:::o;10602:236::-;10702:4;10740:2;10729:9;10725:18;10717:26;;10753:78;10828:1;10817:9;10813:17;10804:6;10753:78;:::i;:::-;10602:236;;;;:::o;10844:332::-;10965:4;11003:2;10992:9;10988:18;10980:26;;11016:71;11084:1;11073:9;11069:17;11060:6;11016:71;:::i;:::-;11097:72;11165:2;11154:9;11150:18;11141:6;11097:72;:::i;:::-;10844:332;;;;;:::o;11182:116::-;11252:21;11267:5;11252:21;:::i;:::-;11245:5;11242:32;11232:60;;11288:1;11285;11278:12;11232:60;11182:116;:::o;11304:137::-;11358:5;11389:6;11383:13;11374:22;;11405:30;11429:5;11405:30;:::i;:::-;11304:137;;;;:::o;11447:345::-;11514:6;11563:2;11551:9;11542:7;11538:23;11534:32;11531:119;;;11569:79;;:::i;:::-;11531:119;11689:1;11714:61;11767:7;11758:6;11747:9;11743:22;11714:61;:::i;:::-;11704:71;;11660:125;11447:345;;;;:::o;11798:194::-;11838:4;11858:20;11876:1;11858:20;:::i;:::-;11853:25;;11892:20;11910:1;11892:20;:::i;:::-;11887:25;;11936:1;11933;11929:9;11921:17;;11960:1;11954:4;11951:11;11948:37;;;11965:18;;:::i;:::-;11948:37;11798:194;;;;:::o;11998:122::-;12071:24;12089:5;12071:24;:::i;:::-;12064:5;12061:35;12051:63;;12110:1;12107;12100:12;12051:63;11998:122;:::o;12126:143::-;12183:5;12214:6;12208:13;12199:22;;12230:33;12257:5;12230:33;:::i;:::-;12126:143;;;;:::o;12275:351::-;12345:6;12394:2;12382:9;12373:7;12369:23;12365:32;12362:119;;;12400:79;;:::i;:::-;12362:119;12520:1;12545:64;12601:7;12592:6;12581:9;12577:22;12545:64;:::i;:::-;12535:74;;12491:128;12275:351;;;;:::o;12632:98::-;12683:6;12717:5;12711:12;12701:22;;12632:98;;;:::o;12736:147::-;12837:11;12874:3;12859:18;;12736:147;;;;:::o;12889:386::-;12993:3;13021:38;13053:5;13021:38;:::i;:::-;13075:88;13156:6;13151:3;13075:88;:::i;:::-;13068:95;;13172:65;13230:6;13225:3;13218:4;13211:5;13207:16;13172:65;:::i;:::-;13262:6;13257:3;13253:16;13246:23;;12997:278;12889:386;;;;:::o;13281:271::-;13411:3;13433:93;13522:3;13513:6;13433:93;:::i;:::-;13426:100;;13543:3;13536:10;;13281:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1444600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"balanceOf(address,address)": "infinite",
								"deposit(address,uint256)": "infinite",
								"initialize()": "infinite",
								"owner()": "2634",
								"pause()": "infinite",
								"paused()": "2614",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"withdraw(address,uint256)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "468"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 2380,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd8f775608db2ab13067eb08f785e8341875e97808d2a4f0794ed447ef81df4f64736f6c63430008180033",
									".code": [
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "8129FC1C"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "AD3CB1CC"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "AD3CB1CC"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "F3FEF3A3"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "F7888AEC"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "8129FC1C"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "47E7EF24"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "4F1EF286"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "52D1902D"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 2380,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2188,
											"end": 2253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1136,
											"end": 1552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1136,
											"end": 1552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 979,
											"end": 1128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2119,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1560,
											"end": 1970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1560,
											"end": 1970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1978,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1978,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1978,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2188,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 2235,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2235,
											"end": 2245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2188,
											"end": 2253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1224,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1235,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1212,
											"end": 1235,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1235,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1236,
											"end": 1246,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1212,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1212,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1257,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1257,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1204,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1204,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1457,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1458,
											"end": 1468,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1469,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1475,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1449,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "CBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517"
										},
										{
											"begin": 1537,
											"end": 1543,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1502,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1544,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2783,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 979,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1031,
											"end": 1046,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 1031,
											"end": 1048,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1048,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1031,
											"end": 1048,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 1074,
											"end": 1084,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 1059,
											"end": 1085,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 1059,
											"end": 1085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1096,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 1096,
											"end": 1118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 1096,
											"end": 1120,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1096,
											"end": 1120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 1096,
											"end": 1120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2119,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2164,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2164,
											"end": 2170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2164,
											"end": 2172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2164,
											"end": 2172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1644,
											"end": 1649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1660,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1637,
											"end": 1660,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1660,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1669,
											"end": 1673,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1637,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1637,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1637,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1685,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1685,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1629,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1629,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1737,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1748,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1755,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1756,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1766,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1766,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1721,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1721,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1819,
											"end": 1824,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1812,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 1812,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 1884,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1891,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1892,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1865,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1865,
											"end": 1902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1936,
											"end": 1941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "PUSH",
											"source": 11,
											"value": "6337ED398C0E8467698C581374FDCE4DB14922DF487B5A39483079F5F59B60A4"
										},
										{
											"begin": 1955,
											"end": 1961,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 1962,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2095,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2102,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2072,
											"end": 2103,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2072,
											"end": 2103,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3732,
											"end": 3757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3760,
											"end": 3779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3760,
											"end": 3781,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3732,
											"end": 3781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3732,
											"end": 3781,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3832,
											"end": 3842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3832,
											"end": 3844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3823,
											"end": 3845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3674,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 4749,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4749,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2377,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 2261,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6555,
											"end": 6572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6513,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 6312,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1293,
											"name": "PUSH",
											"source": 4,
											"value": "CD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300"
										},
										{
											"begin": 1260,
											"end": 1293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1899,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1899,
											"end": 1926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 3453,
											"end": 3472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3453,
											"end": 3474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3474,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3485,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3522,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3522,
											"end": 3534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3515,
											"end": 3535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3366,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3168,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2035,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 3114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2040,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2040,
											"end": 2061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2970,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2970,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2366,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2320,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2387,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6598,
											"end": 6720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 9,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1794,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 1677,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1788,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1917,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 1800,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 2025,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 1923,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2017,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2011,
											"end": 2018,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2008,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1995,
											"end": 2009,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1981,
											"end": 2019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1981,
											"end": 2019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 2025,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 2025,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 2025,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 2025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2211,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2031,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2156,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2076,
											"end": 2077,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2157,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2204,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2205,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2498,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2217,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2322,
											"end": 2326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 2300,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2327,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2300,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2418,
											"end": 2428,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2437,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2382,
											"end": 2392,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2379,
											"end": 2413,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2438,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2373,
											"end": 2461,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2373,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2373,
											"end": 2461,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2441,
											"end": 2459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2373,
											"end": 2461,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2373,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2491,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2479,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 2492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2260,
											"end": 2498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2633,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2504,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2565,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2565,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2585,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2565,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2622,
											"end": 2626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2594,
											"end": 2627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2627,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2594,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2633,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2946,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 2639,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2700,
											"end": 2704,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2808,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2779,
											"end": 2809,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2832,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 2776,
											"end": 2832,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2812,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2832,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 2776,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 2850,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2842,
											"end": 2879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2842,
											"end": 2879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2934,
											"end": 2938,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2928,
											"end": 2932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2946,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2952,
											"end": 3098,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2952,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3044,
											"end": 3047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3056,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3087,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3072,
											"end": 3088,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3092,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2952,
											"end": 3098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2952,
											"end": 3098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2952,
											"end": 3098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2952,
											"end": 3098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3527,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3104,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3181,
											"end": 3186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 3222,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 3263,
											"end": 3269,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 3222,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3270,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 3222,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3206,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3294,
											"end": 3300,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3280,
											"end": 3301,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3332,
											"end": 3336,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3330,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3321,
											"end": 3337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3370,
											"end": 3373,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3359,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3374,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3346,
											"end": 3458,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3346,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3346,
											"end": 3458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 3377,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3377,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3456,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 3377,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3346,
											"end": 3458,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3346,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 3514,
											"end": 3520,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3504,
											"end": 3507,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 3467,
											"end": 3521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3521,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 3467,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3527,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3527,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3884,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3546,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3653,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3643,
											"end": 3647,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3635,
											"end": 3641,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3627,
											"end": 3654,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 3617,
											"end": 3739,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3658,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3658,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3737,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3658,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3739,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 3617,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 3781,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3800,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 3874,
											"end": 3877,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 3872,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3859,
											"end": 3863,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3847,
											"end": 3864,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3800,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3800,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3800,
											"end": 3878,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 3800,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3878,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3884,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 4542,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 3890,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4024,
											"end": 4026,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4012,
											"end": 4021,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4010,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4022,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3995,
											"end": 4027,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 4030,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4196,
											"end": 4218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 4175,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4303,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4277,
											"end": 4309,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4325,
											"end": 4355,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4439,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 4322,
											"end": 4439,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 4358,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 4358,
											"end": 4437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4437,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 4358,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4439,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 4322,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4463,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 4517,
											"end": 4524,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4508,
											"end": 4514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4497,
											"end": 4506,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4493,
											"end": 4515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4463,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 4463,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4463,
											"end": 4525,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 4463,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4248,
											"end": 4535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 4542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 4542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 4542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 4542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 4542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 4542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4548,
											"end": 4625,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4548,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4585,
											"end": 4592,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4603,
											"end": 4619,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4603,
											"end": 4619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4548,
											"end": 4625,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4548,
											"end": 4625,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4548,
											"end": 4625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4548,
											"end": 4625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4749,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 4631,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 4736,
											"end": 4741,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4718,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4742,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 4718,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4706,
											"end": 4743,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4977,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 4755,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4848,
											"end": 4852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4875,
											"end": 4884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4899,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 4967,
											"end": 4968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 4969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4943,
											"end": 4949,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4899,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 4899,
											"end": 4970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4899,
											"end": 4970,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 4899,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4977,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4977,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4983,
											"end": 5073,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4983,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5053,
											"end": 5066,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5067,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5067,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4983,
											"end": 5073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4983,
											"end": 5073,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4983,
											"end": 5073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4983,
											"end": 5073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5188,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 5079,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5160,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 5175,
											"end": 5180,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5160,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 5160,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5160,
											"end": 5181,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 5160,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5155,
											"end": 5158,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5148,
											"end": 5182,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5404,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 5194,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5281,
											"end": 5285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5321,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 5394,
											"end": 5395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5392,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5379,
											"end": 5396,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5376,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 5332,
											"end": 5397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5397,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 5332,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5528,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 5410,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5497,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5497,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 5497,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5497,
											"end": 5521,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 5497,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5495,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5756,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 5534,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5627,
											"end": 5631,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5654,
											"end": 5663,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5642,
											"end": 5668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5642,
											"end": 5668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 5746,
											"end": 5747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5744,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5748,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5722,
											"end": 5728,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 5678,
											"end": 5749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5749,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 5678,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5756,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5762,
											"end": 5861,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 5762,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5814,
											"end": 5820,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5842,
											"end": 5854,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5762,
											"end": 5861,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5762,
											"end": 5861,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5762,
											"end": 5861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5762,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6036,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 5867,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5951,
											"end": 5962,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 5991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5980,
											"end": 5983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5973,
											"end": 5992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6016,
											"end": 6030,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6030,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6036,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6288,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 6042,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6123,
											"end": 6124,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6246,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 6133,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6153,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6144,
											"end": 6145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6141,
											"end": 6154,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6246,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 6133,
											"end": 6246,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6227,
											"end": 6230,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6234,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6214,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6208,
											"end": 6211,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6204,
											"end": 6215,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6197,
											"end": 6236,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6169,
											"end": 6171,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6167,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 6133,
											"end": 6246,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6246,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 6133,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6280,
											"end": 6281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6104,
											"end": 6288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6294,
											"end": 6671,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 6294,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6385,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 6443,
											"end": 6448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 6410,
											"end": 6449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6465,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 6529,
											"end": 6535,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6524,
											"end": 6527,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6465,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 6465,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6465,
											"end": 6536,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 6465,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6458,
											"end": 6536,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6458,
											"end": 6536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6545,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6601,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6595,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6580,
											"end": 6596,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6545,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 6545,
											"end": 6610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6545,
											"end": 6610,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 6545,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 6657,
											"end": 6663,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 6635,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6633,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6626,
											"end": 6665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6619,
											"end": 6665,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6619,
											"end": 6665,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6386,
											"end": 6671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6294,
											"end": 6671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6294,
											"end": 6671,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6294,
											"end": 6671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6294,
											"end": 6671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6294,
											"end": 6671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6990,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 6677,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6790,
											"end": 6794,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6826,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6813,
											"end": 6831,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6877,
											"end": 6886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6871,
											"end": 6875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6867,
											"end": 6887,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6863,
											"end": 6864,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6861,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6848,
											"end": 6865,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6841,
											"end": 6888,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6905,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6905,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 6905,
											"end": 6983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6905,
											"end": 6983,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 6905,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6990,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6996,
											"end": 7325,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 6996,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7055,
											"end": 7061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7106,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7092,
											"end": 7101,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7083,
											"end": 7090,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7079,
											"end": 7102,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7075,
											"end": 7107,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7072,
											"end": 7191,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7072,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 7072,
											"end": 7191,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7110,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 7110,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 7110,
											"end": 7189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7110,
											"end": 7189,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 7110,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7072,
											"end": 7191,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 7072,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7231,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7255,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 7300,
											"end": 7307,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7276,
											"end": 7298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7255,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7255,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7255,
											"end": 7308,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 7255,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6996,
											"end": 7325,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6996,
											"end": 7325,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6996,
											"end": 7325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6996,
											"end": 7325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6996,
											"end": 7325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7805,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 7331,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7399,
											"end": 7405,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7456,
											"end": 7458,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7453,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 7442,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7431,
											"end": 7454,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7427,
											"end": 7459,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7543,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 7424,
											"end": 7543,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7462,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 7462,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 7462,
											"end": 7541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7462,
											"end": 7541,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 7462,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7543,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 7424,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 7652,
											"end": 7659,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7643,
											"end": 7649,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7632,
											"end": 7641,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7607,
											"end": 7660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7660,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 7607,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7597,
											"end": 7660,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7597,
											"end": 7660,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7553,
											"end": 7670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7709,
											"end": 7711,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 7780,
											"end": 7787,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7771,
											"end": 7777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7760,
											"end": 7769,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 7778,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7735,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7735,
											"end": 7788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7735,
											"end": 7788,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 7735,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7725,
											"end": 7788,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7725,
											"end": 7788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7680,
											"end": 7798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7805,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7805,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7805,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7929,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 7811,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7898,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7898,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 7898,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7898,
											"end": 7922,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 7898,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7893,
											"end": 7896,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 7923,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 8157,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 7935,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8028,
											"end": 8032,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8066,
											"end": 8068,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8055,
											"end": 8064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8079,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 8147,
											"end": 8148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8136,
											"end": 8145,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8132,
											"end": 8149,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8123,
											"end": 8129,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8079,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 8079,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8079,
											"end": 8150,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 8079,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 8157,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 8157,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 8157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 8157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 8157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8306,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 8163,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8225,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8245,
											"end": 8258,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 8294,
											"end": 8299,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 8267,
											"end": 8300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8300,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 8267,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8306,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8306,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8663,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 8312,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8433,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8410,
											"end": 8417,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8406,
											"end": 8429,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 8434,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 8437,
											"end": 8516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8557,
											"end": 8558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8582,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 8638,
											"end": 8645,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8629,
											"end": 8635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8614,
											"end": 8636,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8582,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 8582,
											"end": 8646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8582,
											"end": 8646,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 8582,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8572,
											"end": 8646,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8572,
											"end": 8646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8663,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8663,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8669,
											"end": 8839,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 8669,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8831,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 8805,
											"end": 8806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8797,
											"end": 8803,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8793,
											"end": 8807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8786,
											"end": 8832,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8669,
											"end": 8839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8669,
											"end": 8839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 9211,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 8845,
											"end": 9211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 8990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9008,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 9072,
											"end": 9074,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 9067,
											"end": 9070,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9008,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 9008,
											"end": 9075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9008,
											"end": 9075,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 9008,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9001,
											"end": 9075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9001,
											"end": 9075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9084,
											"end": 9177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 9173,
											"end": 9176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9084,
											"end": 9177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 9084,
											"end": 9177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9084,
											"end": 9177,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 9084,
											"end": 9177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9202,
											"end": 9204,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9197,
											"end": 9200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9193,
											"end": 9205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9186,
											"end": 9205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9186,
											"end": 9205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 9211,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 9211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 9211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 9211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9636,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 9217,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9387,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9423,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9406,
											"end": 9424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9470,
											"end": 9479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9468,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9480,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9454,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9434,
											"end": 9481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9498,
											"end": 9629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9498,
											"end": 9629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 9498,
											"end": 9629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9498,
											"end": 9629,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 9498,
											"end": 9629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9629,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9629,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9636,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9642,
											"end": 9822,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 9642,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9767,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9687,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9680,
											"end": 9768,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9791,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9784,
											"end": 9785,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9777,
											"end": 9792,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 9815,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9808,
											"end": 9809,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9801,
											"end": 9816,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10019,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 9828,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9868,
											"end": 9871,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 9905,
											"end": 9906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 9887,
											"end": 9907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9882,
											"end": 9907,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9882,
											"end": 9907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 9939,
											"end": 9940,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 9921,
											"end": 9941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9941,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 9921,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 9941,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 9941,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9961,
											"end": 9962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9957,
											"end": 9966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9950,
											"end": 9966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9950,
											"end": 9966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9982,
											"end": 9983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9979,
											"end": 9989,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 10012,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 9976,
											"end": 10012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 9992,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 9992,
											"end": 10010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10010,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 9992,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 10012,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 9976,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10025,
											"end": 10110,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 10025,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10070,
											"end": 10077,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10099,
											"end": 10104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10104,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10025,
											"end": 10110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10025,
											"end": 10110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10025,
											"end": 10110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10025,
											"end": 10110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10217,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 10116,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10152,
											"end": 10159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10210,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10185,
											"end": 10190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10181,
											"end": 10211,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10170,
											"end": 10211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10170,
											"end": 10211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10217,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10283,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 10223,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10272,
											"end": 10277,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10265,
											"end": 10277,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10265,
											"end": 10277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10283,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10283,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10283,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10289,
											"end": 10445,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 10289,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10346,
											"end": 10355,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10379,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 10396,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 10431,
											"end": 10436,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 10405,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10396,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 10396,
											"end": 10438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10396,
											"end": 10438,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 10396,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10379,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 10379,
											"end": 10439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10379,
											"end": 10439,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 10379,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10289,
											"end": 10445,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10289,
											"end": 10445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10289,
											"end": 10445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10289,
											"end": 10445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10451,
											"end": 10596,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10451,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10545,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 10583,
											"end": 10588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10545,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 10545,
											"end": 10589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10545,
											"end": 10589,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 10545,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10540,
											"end": 10543,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10533,
											"end": 10590,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10451,
											"end": 10596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10451,
											"end": 10596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10451,
											"end": 10596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10602,
											"end": 10838,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 10602,
											"end": 10838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10702,
											"end": 10706,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10742,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10729,
											"end": 10738,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10725,
											"end": 10743,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10753,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10817,
											"end": 10826,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10813,
											"end": 10830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10804,
											"end": 10810,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10753,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10753,
											"end": 10831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10753,
											"end": 10831,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 10753,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10602,
											"end": 10838,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10602,
											"end": 10838,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10602,
											"end": 10838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10602,
											"end": 10838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10602,
											"end": 10838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11176,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 10844,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10965,
											"end": 10969,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11003,
											"end": 11005,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10992,
											"end": 11001,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10988,
											"end": 11006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10980,
											"end": 11006,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10980,
											"end": 11006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11016,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 11084,
											"end": 11085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11073,
											"end": 11082,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11069,
											"end": 11086,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11060,
											"end": 11066,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11016,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 11016,
											"end": 11087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11016,
											"end": 11087,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 11016,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11097,
											"end": 11169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 11165,
											"end": 11167,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11154,
											"end": 11163,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11141,
											"end": 11147,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11097,
											"end": 11169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 11097,
											"end": 11169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11097,
											"end": 11169,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 11097,
											"end": 11169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11176,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11176,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11182,
											"end": 11298,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 11182,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 11267,
											"end": 11272,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 11252,
											"end": 11273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11273,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 11252,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11250,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11242,
											"end": 11274,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11288,
											"end": 11289,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11285,
											"end": 11286,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11278,
											"end": 11290,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11182,
											"end": 11298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11182,
											"end": 11298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11304,
											"end": 11441,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 11304,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11358,
											"end": 11363,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11383,
											"end": 11396,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 11429,
											"end": 11434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 11405,
											"end": 11435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11435,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 11405,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11304,
											"end": 11441,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11304,
											"end": 11441,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11304,
											"end": 11441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11304,
											"end": 11441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11304,
											"end": 11441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11792,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 11447,
											"end": 11792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11565,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11551,
											"end": 11560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11542,
											"end": 11549,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11538,
											"end": 11561,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11534,
											"end": 11566,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11531,
											"end": 11650,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11531,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 11531,
											"end": 11650,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11569,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 11569,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 11569,
											"end": 11648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11569,
											"end": 11648,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 11569,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11531,
											"end": 11650,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 11531,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11689,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11714,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 11767,
											"end": 11774,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11758,
											"end": 11764,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11743,
											"end": 11765,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11714,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 11714,
											"end": 11775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11714,
											"end": 11775,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 11714,
											"end": 11775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11704,
											"end": 11775,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11704,
											"end": 11775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11660,
											"end": 11785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11798,
											"end": 11992,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 11798,
											"end": 11992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11838,
											"end": 11842,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 11876,
											"end": 11877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11858,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 11858,
											"end": 11878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11858,
											"end": 11878,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 11858,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11853,
											"end": 11878,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11853,
											"end": 11878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11892,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 11910,
											"end": 11911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11892,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 11892,
											"end": 11912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11892,
											"end": 11912,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 11892,
											"end": 11912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 11912,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 11912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11936,
											"end": 11937,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 11934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11938,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11921,
											"end": 11938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11921,
											"end": 11938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11960,
											"end": 11961,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11954,
											"end": 11958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11951,
											"end": 11962,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11948,
											"end": 11985,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11948,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 11948,
											"end": 11985,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 11965,
											"end": 11983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11948,
											"end": 11985,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 11948,
											"end": 11985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11798,
											"end": 11992,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11798,
											"end": 11992,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11798,
											"end": 11992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11798,
											"end": 11992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11798,
											"end": 11992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11998,
											"end": 12120,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 11998,
											"end": 12120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12071,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 12089,
											"end": 12094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12071,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 12071,
											"end": 12095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12071,
											"end": 12095,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 12071,
											"end": 12095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12064,
											"end": 12069,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12061,
											"end": 12096,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 12051,
											"end": 12114,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12110,
											"end": 12111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12108,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12100,
											"end": 12112,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12114,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 12051,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11998,
											"end": 12120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11998,
											"end": 12120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12126,
											"end": 12269,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 12126,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12183,
											"end": 12188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12220,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12208,
											"end": 12221,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12199,
											"end": 12221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12199,
											"end": 12221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12230,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 12257,
											"end": 12262,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12230,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 12230,
											"end": 12263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12230,
											"end": 12263,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 12230,
											"end": 12263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12126,
											"end": 12269,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12126,
											"end": 12269,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12126,
											"end": 12269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12126,
											"end": 12269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12126,
											"end": 12269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12275,
											"end": 12626,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 12275,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12345,
											"end": 12351,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12394,
											"end": 12396,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12382,
											"end": 12391,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12373,
											"end": 12380,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12392,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12365,
											"end": 12397,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 12362,
											"end": 12481,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12362,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 12362,
											"end": 12481,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12400,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 12400,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 12400,
											"end": 12479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12400,
											"end": 12479,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 12400,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12362,
											"end": 12481,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 12362,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12520,
											"end": 12521,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12545,
											"end": 12609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 12601,
											"end": 12608,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12592,
											"end": 12598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12581,
											"end": 12590,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12577,
											"end": 12599,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12545,
											"end": 12609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 12545,
											"end": 12609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12545,
											"end": 12609,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 12545,
											"end": 12609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12535,
											"end": 12609,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12535,
											"end": 12609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12491,
											"end": 12619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12275,
											"end": 12626,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12275,
											"end": 12626,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12275,
											"end": 12626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12275,
											"end": 12626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12275,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 12730,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 12632,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12683,
											"end": 12689,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12722,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12711,
											"end": 12723,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12701,
											"end": 12723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12701,
											"end": 12723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 12730,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 12730,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 12730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 12730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12736,
											"end": 12883,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 12736,
											"end": 12883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12837,
											"end": 12848,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12874,
											"end": 12877,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12877,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12736,
											"end": 12883,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12736,
											"end": 12883,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12736,
											"end": 12883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12736,
											"end": 12883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12736,
											"end": 12883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12889,
											"end": 13275,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 12889,
											"end": 13275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12993,
											"end": 12996,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13021,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 13053,
											"end": 13058,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13021,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 13021,
											"end": 13059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13021,
											"end": 13059,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 13021,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 13156,
											"end": 13162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13151,
											"end": 13154,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 13075,
											"end": 13163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13163,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 13075,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13068,
											"end": 13163,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13068,
											"end": 13163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13172,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 13230,
											"end": 13236,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13225,
											"end": 13228,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13218,
											"end": 13222,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13211,
											"end": 13216,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13207,
											"end": 13223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13172,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 13172,
											"end": 13237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13172,
											"end": 13237,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 13172,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13262,
											"end": 13268,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13257,
											"end": 13260,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13253,
											"end": 13269,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13246,
											"end": 13269,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13246,
											"end": 13269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12997,
											"end": 13275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12889,
											"end": 13275,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12889,
											"end": 13275,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12889,
											"end": 13275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12889,
											"end": 13275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12889,
											"end": 13275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13281,
											"end": 13552,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 13281,
											"end": 13552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13411,
											"end": 13414,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13433,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 13522,
											"end": 13525,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13513,
											"end": 13519,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13433,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 13433,
											"end": 13526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13433,
											"end": 13526,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 13433,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13426,
											"end": 13526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13426,
											"end": 13526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13543,
											"end": 13546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13536,
											"end": 13546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13536,
											"end": 13546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13281,
											"end": 13552,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13281,
											"end": 13552,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13281,
											"end": 13552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13281,
											"end": 13552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13281,
											"end": 13552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/BridgeVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"balanceOf(address,address)": "f7888aec",
							"deposit(address,uint256)": "47e7ef24",
							"initialize()": "8129fc1c",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"initialize()\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BridgeVault.sol\":\"BridgeVault\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"contracts/BridgeVault.sol\":{\"keccak256\":\"0xf4de8fcc6b28240acf64ac6a0bb388ff6ee7a912a5bb7f9d27cdd7eb2d3f85d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f72723dcf00f40f63068493055aa24760ad55b5323a81b6766f5df1d653c291f\",\"dweb:/ipfs/QmdsGNnNz3svtitjoooNxvc33M1f3Zo7c8WhBV5UThTq4H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1637,
								"contract": "contracts/BridgeVault.sol:BridgeVault",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 677,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								676,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1165
						],
						"IERC1822Proxiable": [
							862
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 863,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 862,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1166,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1165,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 862,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								862,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 630,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 630,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										861
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 892,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 630,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 630,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 923,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 630,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 630,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 630,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 892,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																							"typeString": "function (bytes32) pure"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 984,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 897,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																				"typeString": "function (address) pure"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$862_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$862",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 630,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5606:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								897,
								910,
								1266,
								1269
							],
							"usedEvents": [
								219,
								876
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 636,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 637,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 635,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 639,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 676,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 645,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 676,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 654,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 653,
												"id": 656,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 676,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 663,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 662,
												"id": 665,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 676,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 671,
												"id": 673,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 676,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							852
						]
					},
					"id": 853,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 853,
							"sourceUnit": 677,
							"src": "128:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 679,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "136:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 853,
							"sourceUnit": 449,
							"src": "196:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 681,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 684,
										"name": "Initializable",
										"nameLocations": [
											"742:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "742:13:4"
									},
									"id": 685,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:4"
								},
								{
									"baseName": {
										"id": 686,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "757:18:4"
									},
									"id": 687,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:4"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 683,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 852,
							"linearizedBaseContracts": [
								852,
								676,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 691,
									"members": [
										{
											"constant": false,
											"id": 690,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 691,
											"src": "886:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 689,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:4",
									"nodeType": "StructDefinition",
									"scope": 852,
									"src": "853:52:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 694,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:4",
									"nodeType": "VariableDeclaration",
									"scope": 852,
									"src": "1023:117:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 692,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 693,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "1227:82:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:4",
													"nodeType": "YulBlock",
													"src": "1246:57:4",
													"statements": [
														{
															"nativeSrc": "1260:33:4",
															"nodeType": "YulAssignment",
															"src": "1260:33:4",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:4",
																"nodeType": "YulIdentifier",
																"src": "1270:23:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 698,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 694,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:4",
														"valueSize": 1
													}
												],
												"id": 700,
												"nodeType": "InlineAssembly",
												"src": "1237:66:4"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "1200:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 697,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 696,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 691,
														"src": "1200:15:4"
													},
													"referencedDeclaration": 691,
													"src": "1200:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:4"
									},
									"scope": 852,
									"src": "1147:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 707,
									"name": "Paused",
									"nameLocation": "1399:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1406:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:4"
									},
									"src": "1393:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 712,
									"name": "Unpaused",
									"nameLocation": "1510:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1519:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:4"
									},
									"src": "1504:32:4"
								},
								{
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:4",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 715,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:4"
									},
									"src": "1623:22:4"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:4",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 718,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:4"
									},
									"src": "1736:22:4"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "1889:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 724,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1899:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 722,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 721,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1872:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:4"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:4"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:4"
									},
									"scope": 852,
									"src": "1836:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "2002:93:4",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "2012:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 734,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 733,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "2012:15:4"
															},
															"referencedDeclaration": 691,
															"src": "2012:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2040:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:4"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 739,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "2071:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "2071:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:4"
											}
										]
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 730,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1985:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:4"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:4"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:4"
									},
									"scope": 852,
									"src": "1939:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "2306:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 749,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "2316:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:4"
											},
											{
												"id": 752,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 754,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:4"
									},
									"src": "2281:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "2553:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 757,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2563:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:4"
											},
											{
												"id": 760,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:4"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 762,
									"name": "whenPaused",
									"nameLocation": "2540:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:4"
									},
									"src": "2531:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2745:92:4",
										"statements": [
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "2755:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 769,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 768,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "2755:15:4"
															},
															"referencedDeclaration": 691,
															"src": "2755:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 771,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2783:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:4"
											},
											{
												"expression": {
													"expression": {
														"id": 774,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "2821:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:4",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 690,
													"src": "2821:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 767,
												"id": 776,
												"nodeType": "Return",
												"src": "2814:16:4"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:4"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2739:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:4"
									},
									"scope": 852,
									"src": "2692:145:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "2956:77:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 782,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2970:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 788,
												"nodeType": "IfStatement",
												"src": "2966:61:4",
												"trueBody": {
													"id": 787,
													"nodeType": "Block",
													"src": "2980:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 784,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "3001:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 786,
															"nodeType": "RevertStatement",
															"src": "2994:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:4"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:4"
									},
									"scope": 852,
									"src": "2905:128:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "3153:78:4",
										"statements": [
											{
												"condition": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 794,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "3168:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "3163:62:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "3178:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3199:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "3192:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:4"
									},
									"scope": 852,
									"src": "3105:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "3415:127:4",
										"statements": [
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "3425:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 810,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 809,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "3425:15:4"
															},
															"referencedDeclaration": 691,
															"src": "3425:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 814,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 812,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3453:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:4"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 815,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "3484:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "3484:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 822,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "3522:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 821,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3515:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "EmitStatement",
												"src": "3510:25:4"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 806,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "3401:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:4"
									},
									"scope": 852,
									"src": "3366:176:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "3722:130:4",
										"statements": [
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "3732:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 834,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 833,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "3732:15:4"
															},
															"referencedDeclaration": 691,
															"src": "3732:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 836,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3760:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:4"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 839,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3791:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "3791:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 846,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "3832:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 845,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "3823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "EmitStatement",
												"src": "3818:27:4"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 830,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 762,
												"src": "3711:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:4"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:4"
									},
									"scope": 852,
									"src": "3674:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 853,
							"src": "701:3153:4",
							"usedErrors": [
								211,
								214,
								715,
								718
							],
							"usedEvents": [
								219,
								707,
								712
							]
						}
					],
					"src": "102:3753:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							862
						]
					},
					"id": 863,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 854,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 855,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:5",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 862,
							"linearizedBaseContracts": [
								862
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "868:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:5"
									},
									"scope": 862,
									"src": "820:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 863,
							"src": "343:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1506
						],
						"ERC1967Utils": [
							1165
						],
						"IBeacon": [
							1175
						],
						"StorageSlot": [
							1616
						]
					},
					"id": 1166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 864,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 866,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1176,
							"src": "140:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 865,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1175,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 868,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1507,
							"src": "187:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 867,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1506,
										"src": "195:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1617,
							"src": "236:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 869,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1616,
										"src": "244:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 871,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:6",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1165,
							"linearizedBaseContracts": [
								1165
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:6",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 876,
									"name": "Upgraded",
									"nameLocation": "739:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "748:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:6"
									},
									"src": "733:47:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:6",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 883,
									"name": "AdminChanged",
									"nameLocation": "864:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "877:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "900:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:6"
									},
									"src": "858:60:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:6",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 888,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1009:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:6"
									},
									"src": "988:45:6"
								},
								{
									"constant": true,
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 892,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "1279:114:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 890,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:6",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 897,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "1509:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:6"
									},
									"src": "1474:59:6"
								},
								{
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:6",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 902,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1630:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:6"
									},
									"src": "1604:41:6"
								},
								{
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:6",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 907,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1744:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:6"
									},
									"src": "1717:43:6"
								},
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:6",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 910,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:6"
									},
									"src": "1853:26:6"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "2018:77:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 918,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "2062:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 916,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "2035:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1616_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1538,
															"src": "2035:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1512_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1512_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1511,
													"src": "2035:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 915,
												"id": 921,
												"nodeType": "Return",
												"src": "2028:60:6"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:6"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "2009:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:6"
									},
									"scope": 1165,
									"src": "1957:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "2249:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 929,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2263:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 939,
												"nodeType": "IfStatement",
												"src": "2259:119:6",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "2299:79:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "2349:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 934,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "2320:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 937,
															"nodeType": "RevertStatement",
															"src": "2313:54:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "2414:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 940,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "2387:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1616_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1538,
																"src": "2387:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1512_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1512_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1511,
														"src": "2387:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 946,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "2443:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:6"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:6",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "2214:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:6"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:6"
									},
									"scope": 1165,
									"src": "2186:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "2860:254:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2889:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 958,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "2870:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 963,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2931:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 962,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "2922:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "EmitStatement",
												"src": "2917:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 966,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "2964:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "3065:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 978,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "3079:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 980,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:6"
														}
													]
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "2960:148:6",
												"trueBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "2981:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "3024:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "3043:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 970,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "2995:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1506_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1425,
																	"src": "2995:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 976,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:6",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2805:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:6"
									},
									"scope": 1165,
									"src": "2779:335:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 988,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "3335:105:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 986,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 987,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "3844:68:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 996,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "3888:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 994,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "3861:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1616_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1538,
															"src": "3861:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1512_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1512_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1511,
													"src": "3861:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 993,
												"id": 999,
												"nodeType": "Return",
												"src": "3854:51:6"
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:6",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3835:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:6"
									},
									"scope": 1165,
									"src": "3792:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "4039:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1007,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "4053:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1008,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1021,
												"nodeType": "IfStatement",
												"src": "4049:91:6",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "4077:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1014,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1013,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "4098:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "4091:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1025,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "4176:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1022,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "4149:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1616_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1538,
																"src": "4149:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1512_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1512_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1511,
														"src": "4149:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1028,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "4196:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:6"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:6",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4013:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:6"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:6"
									},
									"scope": 1165,
									"src": "3994:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "4379:85:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1039,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "4407:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "4419:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1038,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "4394:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "EmitStatement",
												"src": "4389:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "4448:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1044,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "4438:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:6"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "4352:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:6"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:6"
									},
									"scope": 1165,
									"src": "4331:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1053,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "4741:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1051,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1052,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "4963:69:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1061,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "5007:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1059,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "4980:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1616_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1538,
															"src": "4980:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1512_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1512_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1511,
													"src": "4980:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1064,
												"nodeType": "Return",
												"src": "4973:52:6"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "4954:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:6"
									},
									"scope": 1165,
									"src": "4910:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "5161:390:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1072,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "5175:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "5171:95:6",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "5203:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1078,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "5245:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1077,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "5224:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1080,
															"nodeType": "RevertStatement",
															"src": "5217:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1086,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "5303:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1083,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "5276:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1616_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1538,
																"src": "5276:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1512_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1512_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1511,
														"src": "5276:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1089,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "5324:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:6"
											},
											{
												"assignments": [
													1093
												],
												"declarations": [
													{
														"constant": false,
														"id": 1093,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "5344:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1092,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1095,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "5383:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1094,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "5375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1175_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1175",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:6",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "5375:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1100,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "5424:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "5420:125:6",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "5463:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1106,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "5513:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1105,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "5484:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "5477:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:6",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "5134:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 1165,
									"src": "5114:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "6155:254:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "6176:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1120,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "6165:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1125,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "6216:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1124,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "6201:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "EmitStatement",
												"src": "6196:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1128,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "6241:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1147,
													"nodeType": "Block",
													"src": "6360:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1144,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "6374:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1146,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:6"
														}
													]
												},
												"id": 1148,
												"nodeType": "IfStatement",
												"src": "6237:166:6",
												"trueBody": {
													"id": 1143,
													"nodeType": "Block",
													"src": "6258:96:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1136,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "6309:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1135,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1175,
																					"src": "6301:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1175_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1175",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1174,
																			"src": "6301:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1140,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "6338:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1132,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "6272:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1506_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1425,
																	"src": "6272:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1142,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:6",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "6108:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "6127:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:6"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:6"
									},
									"scope": 1165,
									"src": "6076:333:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "6634:86:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1154,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1162,
												"nodeType": "IfStatement",
												"src": "6644:70:6",
												"trueBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "6663:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1158,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "6684:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1160,
															"nodeType": "RevertStatement",
															"src": "6677:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:6",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:6"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:6"
									},
									"scope": 1165,
									"src": "6598:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1166,
							"src": "449:6273:6",
							"usedErrors": [
								897,
								902,
								907,
								910
							],
							"usedEvents": [
								876,
								883,
								888
							]
						}
					],
					"src": "114:6609:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1175
						]
					},
					"id": 1176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1167,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1168,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1175,
							"linearizedBaseContracts": [
								1175
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 1175,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1176,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1253
						]
					},
					"id": 1254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1253,
							"linearizedBaseContracts": [
								1253
							],
							"name": "IERC20",
							"nameLocation": "213:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1187,
									"name": "Transfer",
									"nameLocation": "395:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "404:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "426:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "446:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:8"
									},
									"src": "389:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1196,
									"name": "Approval",
									"nameLocation": "626:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "635:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "658:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "683:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:8"
									},
									"src": "620:78:8"
								},
								{
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:8",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:8"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "820:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:8"
									},
									"scope": 1253,
									"src": "774:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:8",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "930:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:8"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "970:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:8"
									},
									"scope": 1253,
									"src": "911:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:8",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1221:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1233:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:8"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1266:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:8"
									},
									"scope": 1253,
									"src": "1203:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "1566:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "1581:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:8"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "1621:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:8"
									},
									"scope": 1253,
									"src": "1547:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:8",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "2325:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "2342:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:8"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "2375:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:8"
									},
									"scope": 1253,
									"src": "2308:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "2711:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "2725:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "2737:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:8"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "2770:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:8"
									},
									"scope": 1253,
									"src": "2689:87:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1254,
							"src": "203:2575:8",
							"usedErrors": [],
							"usedEvents": [
								1187,
								1196
							]
						}
					],
					"src": "106:2673:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1506
						]
					},
					"id": 1507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1256,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1506,
							"linearizedBaseContracts": [
								1506
							],
							"name": "Address",
							"nameLocation": "203:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1261,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "349:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:9"
									},
									"src": "316:50:9"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1266,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "475:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:9"
									},
									"src": "452:39:9"
								},
								{
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1269,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:9"
									},
									"src": "591:24:9"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "1602:260:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1279,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1506",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1506",
																		"typeString": "library Address"
																	}
																],
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1277,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1282,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "1640:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1292,
												"nodeType": "IfStatement",
												"src": "1612:109:9",
												"trueBody": {
													"id": 1291,
													"nodeType": "Block",
													"src": "1648:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1287,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1506",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1506",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1285,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1284,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "1669:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1290,
															"nodeType": "RevertStatement",
															"src": "1662:48:9"
														}
													]
												}
											},
											{
												"assignments": [
													1294,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1309,
														"src": "1732:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1301,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1295,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "1750:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1297,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "1772:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:9"
											},
											{
												"condition": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:9",
													"subExpression": {
														"id": 1302,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "1798:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "IfStatement",
												"src": "1793:63:9",
												"trueBody": {
													"id": 1307,
													"nodeType": "Block",
													"src": "1807:49:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1304,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "1828:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1306,
															"nodeType": "RevertStatement",
															"src": "1821:24:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1550:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1577:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:9"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:9"
									},
									"scope": 1506,
									"src": "1531:331:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "2794:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1321,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "2833:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "2841:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1320,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2811:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1319,
												"id": 1325,
												"nodeType": "Return",
												"src": "2804:45:9"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2727:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2743:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:9"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2780:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:9"
									},
									"scope": 1506,
									"src": "2705:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "3293:279:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1341,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1506",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1506",
																		"typeString": "library Address"
																	}
																],
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1339,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1344,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "3331:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "3303:108:9",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "3338:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1349,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1506",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1506",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1347,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1346,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "3359:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1352,
															"nodeType": "RevertStatement",
															"src": "3352:48:9"
														}
													]
												}
											},
											{
												"assignments": [
													1356,
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "3421:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1355,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "3435:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1357,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"arguments": [
														{
															"id": 1363,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "3488:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1359,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "3462:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1361,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "3481:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1367,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "3537:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1368,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "3545:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1369,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "3554:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1366,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "3510:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1338,
												"id": 1371,
												"nodeType": "Return",
												"src": "3503:62:9"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3211:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3227:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3246:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:9"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3279:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:9"
									},
									"scope": 1506,
									"src": "3180:392:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "3811:154:9",
										"statements": [
											{
												"assignments": [
													1384,
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1398,
														"src": "3822:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1383,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1398,
														"src": "3836:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1385,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1391,
												"initialValue": {
													"arguments": [
														{
															"id": 1389,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3881:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1387,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "3863:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1393,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "3930:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "3938:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1395,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "3947:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1392,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "3903:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1382,
												"id": 1397,
												"nodeType": "Return",
												"src": "3896:62:9"
											}
										]
									},
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "3739:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "3755:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:9"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "3797:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:9"
									},
									"scope": 1506,
									"src": "3711:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "4203:156:9",
										"statements": [
											{
												"assignments": [
													1410,
													1412
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "4214:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1409,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1412,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "4228:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1411,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1417,
												"initialValue": {
													"arguments": [
														{
															"id": 1415,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "4275:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1413,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "4255:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1419,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "4324:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "4332:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1421,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "4341:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1418,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "4297:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1408,
												"id": 1423,
												"nodeType": "Return",
												"src": "4290:62:9"
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "4136:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "4152:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:9"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "4189:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:9"
									},
									"scope": 1506,
									"src": "4106:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "4783:424:9",
										"statements": [
											{
												"condition": {
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:9",
													"subExpression": {
														"id": 1437,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "4798:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1462,
													"nodeType": "Block",
													"src": "4857:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1444,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "5045:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1448,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1428,
																				"src": "5071:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1459,
															"nodeType": "IfStatement",
															"src": "5041:119:9",
															"trueBody": {
																"id": 1458,
																"nodeType": "Block",
																"src": "5096:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1455,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1428,
																					"src": "5138:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1454,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1266,
																				"src": "5121:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1457,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1460,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "5180:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1436,
															"id": 1461,
															"nodeType": "Return",
															"src": "5173:17:9"
														}
													]
												},
												"id": 1463,
												"nodeType": "IfStatement",
												"src": "4793:408:9",
												"trueBody": {
													"id": 1443,
													"nodeType": "Block",
													"src": "4807:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1440,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "4829:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1439,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "4821:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1442,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4670:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4694:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4716:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:9"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4769:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:9"
									},
									"scope": 1506,
									"src": "4625:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "5509:122:9",
										"statements": [
											{
												"condition": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:9",
													"subExpression": {
														"id": 1475,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "5524:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1484,
													"nodeType": "Block",
													"src": "5583:42:9",
													"statements": [
														{
															"expression": {
																"id": 1482,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "5604:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1474,
															"id": 1483,
															"nodeType": "Return",
															"src": "5597:17:9"
														}
													]
												},
												"id": 1485,
												"nodeType": "IfStatement",
												"src": "5519:106:9",
												"trueBody": {
													"id": 1481,
													"nodeType": "Block",
													"src": "5533:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1478,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "5555:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1477,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "5547:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1480,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "5433:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "5447:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:9"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "5495:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:9"
									},
									"scope": 1506,
									"src": "5407:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "5798:461:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1493,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "5874:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1502,
													"nodeType": "Block",
													"src": "6204:49:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1499,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "6225:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1501,
															"nodeType": "RevertStatement",
															"src": "6218:24:9"
														}
													]
												},
												"id": 1503,
												"nodeType": "IfStatement",
												"src": "5870:383:9",
												"trueBody": {
													"id": 1498,
													"nodeType": "Block",
													"src": "5897:301:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:9",
																"nodeType": "YulBlock",
																"src": "6055:133:9",
																"statements": [
																	{
																		"nativeSrc": "6073:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:9"
																			},
																			"nativeSrc": "6096:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:9",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:9",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:9"
																					},
																					"nativeSrc": "6137:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:9"
																			},
																			"nativeSrc": "6130:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:9"
																		},
																		"nativeSrc": "6130:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:9"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1490,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1490,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:9",
																	"valueSize": 1
																}
															],
															"id": 1497,
															"nodeType": "InlineAssembly",
															"src": "6046:142:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "5760:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:9"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:9"
									},
									"scope": 1506,
									"src": "5743:516:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1507,
							"src": "195:6066:9",
							"usedErrors": [
								1261,
								1266,
								1269
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1616
						]
					},
					"id": 1617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1508,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1509,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1616,
							"linearizedBaseContracts": [
								1616
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1512,
									"members": [
										{
											"constant": false,
											"id": 1511,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1512,
											"src": "1300:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1510,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:10",
									"nodeType": "StructDefinition",
									"scope": 1616,
									"src": "1271:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1515,
									"members": [
										{
											"constant": false,
											"id": 1514,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1515,
											"src": "1355:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1513,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:10",
									"nodeType": "StructDefinition",
									"scope": 1616,
									"src": "1326:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1518,
									"members": [
										{
											"constant": false,
											"id": 1517,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1518,
											"src": "1407:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1516,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:10",
									"nodeType": "StructDefinition",
									"scope": 1616,
									"src": "1378:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1521,
									"members": [
										{
											"constant": false,
											"id": 1520,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1521,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1519,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1616,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1524,
									"members": [
										{
											"constant": false,
											"id": 1523,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1524,
											"src": "1516:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1522,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:10",
									"nodeType": "StructDefinition",
									"scope": 1616,
									"src": "1488:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1527,
									"members": [
										{
											"constant": false,
											"id": 1526,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1527,
											"src": "1568:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1525,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:10",
									"nodeType": "StructDefinition",
									"scope": 1616,
									"src": "1541:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "1768:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:10",
													"nodeType": "YulBlock",
													"src": "1830:38:10",
													"statements": [
														{
															"nativeSrc": "1844:14:10",
															"nodeType": "YulAssignment",
															"src": "1844:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:10",
																"nodeType": "YulIdentifier",
																"src": "1854:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1534,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1530,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:10",
														"valueSize": 1
													}
												],
												"id": 1536,
												"nodeType": "InlineAssembly",
												"src": "1821:47:10"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1708:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:10"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1745:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1512_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1533,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1532,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1512,
														"src": "1745:11:10"
													},
													"referencedDeclaration": 1512,
													"src": "1745:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1512_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:10"
									},
									"scope": 1616,
									"src": "1684:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "2056:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:10",
													"nodeType": "YulBlock",
													"src": "2118:38:10",
													"statements": [
														{
															"nativeSrc": "2132:14:10",
															"nodeType": "YulAssignment",
															"src": "2132:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:10",
																"nodeType": "YulIdentifier",
																"src": "2142:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1545,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1541,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:10",
														"valueSize": 1
													}
												],
												"id": 1547,
												"nodeType": "InlineAssembly",
												"src": "2109:47:10"
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:10",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1996:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1540,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:10"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "2033:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1515_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1543,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1515,
														"src": "2033:11:10"
													},
													"referencedDeclaration": 1515,
													"src": "2033:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1515_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:10"
									},
									"scope": 1616,
									"src": "1972:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "2344:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:10",
													"nodeType": "YulBlock",
													"src": "2406:38:10",
													"statements": [
														{
															"nativeSrc": "2420:14:10",
															"nodeType": "YulAssignment",
															"src": "2420:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:10",
																"nodeType": "YulIdentifier",
																"src": "2430:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1556,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1552,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:10",
														"valueSize": 1
													}
												],
												"id": 1558,
												"nodeType": "InlineAssembly",
												"src": "2397:47:10"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:10",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "2284:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1551,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:10"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "2321:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1518_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1555,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1554,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1518,
														"src": "2321:11:10"
													},
													"referencedDeclaration": 1518,
													"src": "2321:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1518_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:10"
									},
									"scope": 1616,
									"src": "2260:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "2632:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:10",
													"nodeType": "YulBlock",
													"src": "2694:38:10",
													"statements": [
														{
															"nativeSrc": "2708:14:10",
															"nodeType": "YulAssignment",
															"src": "2708:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:10",
																"nodeType": "YulIdentifier",
																"src": "2718:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1567,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1563,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:10",
														"valueSize": 1
													}
												],
												"id": 1569,
												"nodeType": "InlineAssembly",
												"src": "2685:47:10"
											}
										]
									},
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:10",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "2572:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1562,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:10"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "2609:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1521_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1565,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1521,
														"src": "2609:11:10"
													},
													"referencedDeclaration": 1521,
													"src": "2609:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1521_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:10"
									},
									"scope": 1616,
									"src": "2548:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "2917:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:10",
													"nodeType": "YulBlock",
													"src": "2979:38:10",
													"statements": [
														{
															"nativeSrc": "2993:14:10",
															"nodeType": "YulAssignment",
															"src": "2993:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:10",
																"nodeType": "YulIdentifier",
																"src": "3003:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1578,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1574,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:10",
														"valueSize": 1
													}
												],
												"id": 1580,
												"nodeType": "InlineAssembly",
												"src": "2970:47:10"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:10",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "2858:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:10"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "2895:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1524_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1577,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1576,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1524,
														"src": "2895:10:10"
													},
													"referencedDeclaration": 1524,
													"src": "2895:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1524_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:10"
									},
									"scope": 1616,
									"src": "2835:188:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "3225:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:10",
													"nodeType": "YulBlock",
													"src": "3287:44:10",
													"statements": [
														{
															"nativeSrc": "3301:20:10",
															"nodeType": "YulAssignment",
															"src": "3301:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:10",
																"nodeType": "YulIdentifier",
																"src": "3311:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1589,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1585,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1591,
												"nodeType": "InlineAssembly",
												"src": "3278:53:10"
											}
										]
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "3158:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:10"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "3203:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1524_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1587,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1524,
														"src": "3203:10:10"
													},
													"referencedDeclaration": 1524,
													"src": "3203:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1524_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:10"
									},
									"scope": 1616,
									"src": "3135:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "3513:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:10",
													"nodeType": "YulBlock",
													"src": "3575:38:10",
													"statements": [
														{
															"nativeSrc": "3589:14:10",
															"nodeType": "YulAssignment",
															"src": "3589:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:10",
																"nodeType": "YulIdentifier",
																"src": "3599:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1600,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1596,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:10",
														"valueSize": 1
													}
												],
												"id": 1602,
												"nodeType": "InlineAssembly",
												"src": "3566:47:10"
											}
										]
									},
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:10",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "3455:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:10"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "3492:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1527_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1598,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "3492:9:10"
													},
													"referencedDeclaration": 1527,
													"src": "3492:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1527_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:10"
									},
									"scope": 1616,
									"src": "3433:186:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "3816:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:10",
													"nodeType": "YulBlock",
													"src": "3878:44:10",
													"statements": [
														{
															"nativeSrc": "3892:20:10",
															"nodeType": "YulAssignment",
															"src": "3892:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:10",
																"nodeType": "YulIdentifier",
																"src": "3902:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1607,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1613,
												"nodeType": "InlineAssembly",
												"src": "3869:53:10"
											}
										]
									},
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "3751:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:10"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "3795:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1527_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1609,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "3795:9:10"
													},
													"referencedDeclaration": 1527,
													"src": "3795:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1527_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:10"
									},
									"scope": 1616,
									"src": "3729:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1617,
							"src": "1245:2685:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:10"
				},
				"id": 10
			},
			"contracts/BridgeVault.sol": {
				"ast": {
					"absolutePath": "contracts/BridgeVault.sol",
					"exportedSymbols": {
						"BridgeVault": [
							1812
						],
						"ContextUpgradeable": [
							676
						],
						"ERC1967Utils": [
							1165
						],
						"IERC1822Proxiable": [
							862
						],
						"IERC20": [
							1253
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							852
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 1813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"id": 1619,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 853,
							"src": "61:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 195,
							"src": "138:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1621,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 449,
							"src": "215:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 631,
							"src": "292:77:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1623,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 1254,
							"src": "371:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1624,
										"name": "Initializable",
										"nameLocations": [
											"511:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "511:13:11"
									},
									"id": 1625,
									"nodeType": "InheritanceSpecifier",
									"src": "511:13:11"
								},
								{
									"baseName": {
										"id": 1626,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"526:19:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 852,
										"src": "526:19:11"
									},
									"id": 1627,
									"nodeType": "InheritanceSpecifier",
									"src": "526:19:11"
								},
								{
									"baseName": {
										"id": 1628,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"547:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "547:18:11"
									},
									"id": 1629,
									"nodeType": "InheritanceSpecifier",
									"src": "547:18:11"
								},
								{
									"baseName": {
										"id": 1630,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"567:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "567:15:11"
									},
									"id": 1631,
									"nodeType": "InheritanceSpecifier",
									"src": "567:15:11"
								}
							],
							"canonicalName": "BridgeVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1812,
							"linearizedBaseContracts": [
								1812,
								630,
								862,
								194,
								852,
								676,
								448
							],
							"name": "BridgeVault",
							"nameLocation": "496:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1637,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "646:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "590:64:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1636,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1632,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "598:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "590:47:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1635,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1633,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "617:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "609:27:11",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1634,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "628:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "cbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517",
									"id": 1645,
									"name": "TokensDeposited",
									"nameLocation": "669:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "701:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "685:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "724:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "708:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "743:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "735:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:66:11"
									},
									"src": "663:88:11"
								},
								{
									"anonymous": false,
									"eventSelector": "6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a4",
									"id": 1653,
									"name": "TokensWithdrawn",
									"nameLocation": "763:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "795:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "779:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "818:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "802:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "837:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "829:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:66:11"
									},
									"src": "757:88:11"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "1020:108:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1659,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1031:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "1031:17:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1663,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1074:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1078:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1074:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1662,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1059:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1059:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "1059:26:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1667,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1096:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "1096:24:11"
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "853:48:11",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"functionSelector": "8129fc1c",
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1657,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1656,
												"name": "initializer",
												"nameLocations": [
													"1001:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1001:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1001:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "988:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:2:11"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:0:11"
									},
									"scope": 1812,
									"src": "979:149:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "1193:359:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1683,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1236:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1240:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1236:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1680,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1673,
																				"src": "1219:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1679,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "1212:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1212:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1253",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1226:9:11",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1210,
																	"src": "1212:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1212:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1686,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "1251:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1212:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1259:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1204:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1204:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "1204:78:11"
											},
											{
												"expression": {
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1691,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "1449:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1695,
															"indexExpression": {
																"expression": {
																	"id": 1692,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1458:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1462:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1458:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1449:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1696,
														"indexExpression": {
															"id": 1694,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "1470:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1449:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1697,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "1480:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1449:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "1449:37:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1701,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "1518:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1702,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1525:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1529:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1525:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "1537:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1700,
														"name": "TokensDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "1502:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1502:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "EmitStatement",
												"src": "1497:47:11"
											}
										]
									},
									"functionSelector": "47e7ef24",
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1145:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1161:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "1153:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1176:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "1168:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:31:11"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:0:11"
									},
									"scope": 1812,
									"src": "1136:416:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "1618:352:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1722,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1669:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BridgeVault_$1812",
																					"typeString": "contract BridgeVault"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BridgeVault_$1812",
																					"typeString": "contract BridgeVault"
																				}
																			],
																			"id": 1721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1661:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1720,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1661:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1661:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1717,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1710,
																				"src": "1644:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1716,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "1637:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1637:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1253",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1651:9:11",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1210,
																	"src": "1637:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1637:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1725,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "1679:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1637:48:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1629:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1629:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "1629:81:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1731,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "1729:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1734,
																	"indexExpression": {
																		"expression": {
																			"id": 1732,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1738:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1742:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1738:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1729:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1736,
																"indexExpression": {
																	"id": 1735,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "1750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1729:27:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1737,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "1760:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1729:37:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1768:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1721:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "1721:70:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1746,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1835:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1839:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1835:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1748,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "1847:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "1819:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1742,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "1812:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1812:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1253",
																"typeString": "contract IERC20"
															}
														},
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1826:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "1812:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1812:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "1812:42:11"
											},
											{
												"expression": {
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1751,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "1865:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1755,
															"indexExpression": {
																"expression": {
																	"id": 1752,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1874:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1878:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1874:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1865:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1756,
														"indexExpression": {
															"id": 1754,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "1886:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1865:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1757,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "1896:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1865:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "1865:37:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1761,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "1936:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1762,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1943:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1947:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1943:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1764,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "1955:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1760,
														"name": "TokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "1920:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1920:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1766,
												"nodeType": "EmitStatement",
												"src": "1915:47:11"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1569:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1586:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "1578:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1601:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "1593:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:31:11"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:0:11"
									},
									"scope": 1812,
									"src": "1560:410:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "2061:50:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1777,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "2079:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1779,
														"indexExpression": {
															"id": 1778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "2088:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2079:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1781,
													"indexExpression": {
														"id": 1780,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "2097:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2079:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1776,
												"id": 1782,
												"nodeType": "Return",
												"src": "2072:31:11"
											}
										]
									},
									"functionSelector": "f7888aec",
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1987:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2005:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1997:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2020:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "2012:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:32:11"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "2052:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2051:9:11"
									},
									"scope": 1812,
									"src": "1978:133:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "2153:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1789,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "2164:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2164:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "2164:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1787,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1786,
												"name": "onlyOwner",
												"nameLocations": [
													"2143:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2143:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2143:9:11"
										}
									],
									"name": "pause",
									"nameLocation": "2128:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2133:2:11"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2153:0:11"
									},
									"scope": 1812,
									"src": "2119:61:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "2224:29:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1798,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "2235:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "2235:10:11"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1796,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1795,
												"name": "onlyOwner",
												"nameLocations": [
													"2214:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2214:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2214:9:11"
										}
									],
									"name": "unpause",
									"nameLocation": "2197:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2204:2:11"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2224:0:11"
									},
									"scope": 1812,
									"src": "2188:65:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "2375:2:11",
										"statements": []
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1806,
												"name": "onlyOwner",
												"nameLocations": [
													"2342:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2342:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2342:9:11"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "2270:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1808,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2361:8:11"
									},
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2296:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2288:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:27:11"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:11"
									},
									"scope": 1812,
									"src": "2261:116:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1813,
							"src": "487:1893:11",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								715,
								718,
								897,
								910,
								1266,
								1269
							],
							"usedEvents": [
								41,
								219,
								707,
								712,
								876,
								1645,
								1653
							]
						}
					],
					"src": "33:2349:11"
				},
				"id": 11
			}
		}
	}
}